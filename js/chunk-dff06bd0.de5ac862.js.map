{"version":3,"sources":["webpack:///./node_modules/lamejs/src/js/common.js","webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/lamejs/src/js/CalcNoiseData.js","webpack:///./node_modules/core-js/internals/native-url.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/modules/es.object.define-properties.js","webpack:///./node_modules/lamejs/src/js/VBRSeekInfo.js","webpack:///./node_modules/lamejs/src/js/PsyModel.js","webpack:///./node_modules/lamejs/src/js/IIISideInfo.js","webpack:///./node_modules/core-js/modules/web.url.js","webpack:///./node_modules/lamejs/src/js/GainAnalysis.js","webpack:///./src/views/EditorView.vue?d9ef","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./src/components/HappySynthesizer.ts","webpack:///./src/views/EditorView.vue","webpack:///./src/views/EditorView.vue?4965","webpack:///./src/views/EditorView.vue?b295","webpack:///./node_modules/lamejs/src/js/Presets.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/lamejs/src/js/CBRNewIterationLoop.js","webpack:///./node_modules/lamejs/src/js/Encoder.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./node_modules/interactjs/dist/interact.min.js","webpack:///./node_modules/audio-encoder/src/index.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/lamejs/src/js/Reservoir.js","webpack:///./node_modules/lamejs/src/js/Tables.js","webpack:///./node_modules/core-js/internals/string-punycode-to-ascii.js","webpack:///./node_modules/lamejs/src/js/MPEGMode.js","webpack:///./node_modules/audio-encoder/src/encodeMp3.js","webpack:///./node_modules/lamejs/src/js/BitStream.js","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/lamejs/src/js/ReplayGain.js","webpack:///./node_modules/lamejs/src/js/CalcNoiseResult.js","webpack:///./node_modules/audio-encoder/src/encodeWav.js","webpack:///./node_modules/core-js/internals/number-parse-float.js","webpack:///./node_modules/lamejs/src/js/FFT.js","webpack:///./node_modules/lamejs/src/js/Version.js","webpack:///./node_modules/lamejs/src/js/LameGlobalFlags.js","webpack:///./node_modules/lamejs/src/js/L3Side.js","webpack:///./node_modules/core-js/modules/web.url-search-params.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./src/views/EditorView.vue?8a87","webpack:///./node_modules/lamejs/src/js/III_psy_xmin.js","webpack:///./node_modules/lamejs/src/js/VBRQuantize.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/lamejs/src/js/ATH.js","webpack:///./node_modules/core-js/modules/es.parse-float.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/lamejs/src/js/QuantizePVT.js","webpack:///./node_modules/lamejs/src/js/LameInternalFlags.js","webpack:///./node_modules/lamejs/src/js/NsPsy.js","webpack:///./node_modules/lamejs/src/js/Takehiro.js","webpack:///./node_modules/lamejs/src/js/index.js","webpack:///./node_modules/lamejs/src/js/Quantize.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/lamejs/src/js/Lame.js","webpack:///./node_modules/lamejs/src/js/VBRTag.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack:///./node_modules/lamejs/src/js/MeanBits.js","webpack:///./node_modules/lamejs/src/js/III_psy_ratio.js","webpack:///./node_modules/lamejs/src/js/GrInfo.js","webpack:///./node_modules/lamejs/src/js/NewMDCT.js","webpack:///./node_modules/lamejs/src/js/ScaleFac.js"],"names":["new_byte","count","Int8Array","new_short","Int16Array","new_int","Int32Array","new_float","Float32Array","new_double","Float64Array","new_float_n","args","length","sz","slice","A","i","push","new_int_n","new_short_n","new_array_n","Array","Arrays","a","fromIndex","toIndex","val","arguments","System","src","srcPos","dest","destPos","srcEnd","Util","ShortBlock","ordinal","this","SQRT2","FAST_LOG10","x","Math","log10","FAST_LOG10_X","y","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float","VbrMode","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","assert","module","exports","$","$values","values","target","stat","O","common","CalcNoiseData","global_gain","sfb_count1","step","noise","noise_log","fails","wellKnownSymbol","IS_PURE","ITERATOR","url","URL","searchParams","result","pathname","forEach","value","key","toJSON","sort","href","get","String","URLSearchParams","username","host","hash","undefined","global","DOMIterables","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","error","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","callbackfn","DESCRIPTORS","defineProperties","forced","sham","VBRSeekInfo","sum","seen","want","pos","size","bag","nVbrNumFrames","nBytesWritten","TotalFrameSize","FFT","Encoder","PsyModel","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","BLKSIZE","temporalmask_sustain_sec","NS_PREECHO_ATT0","NS_PREECHO_ATT1","NS_PREECHO_ATT2","NS_MSFIX","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","energy","gfc","loudness_power","ATH","eql_w","compute_ffts","gfp","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","chn","buffer","bufPos","internal_flags","fft_long","fft_short","j","l","r","b","BLKSIZE_s","re","im","totalenergy","HBLKSIZE","tot_ener","analysis","pinfo","energy_save","pe","athaa_loudapprox","loudness_sq","loudness_sq_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","tab","init_mask_add_max_values","pow","table1","table2","table3","mask_add","m1","m2","kk","shortblock","ratio","f","cb_s","adjust","cb_l","table2_","vbrpsy_mask_add","calc_interchannel_masking","channels_out","sb","SBMAX_l","thm","SBMAX_s","sblock","s","msfix1","mld","mld_l","en","rmid","max","min","rside","mld_s","ns_msfix","msfix","athadjust","msfix2","athlower","ath","bm_l","thmLR","thmM","thmS","bm_s","convert_partition2scalefac_s","eb","thr","enn","thmm","bo_s_sb","bo_s","npart_s","b_lim","w_curr","PSY","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l","npart_l","bo_l_weight","compute_masking_s","ebb","m","n","numlines_s","el","s3ind_s","ecb","s3_ss","nb_s1","blocktype_old","SHORT_TYPE","nb_s2","CBANDS","block_type_set","uselongblock","blocktype_d","blocktype","short_blocks","NORM_TYPE","START_TYPE","STOP_TYPE","NS_INTERP","regcoef_s","pecalc_s","mr","masking_lower","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","avg","numlines_l","rnumlines_l","calc_mask_index_l","mask_idx","last_tab_entry","k","fircoef","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","L3psycho_anal_ns","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","ns_hpfsmpl","mask_idx_l","mask_idx_s","fill","mode","MPEGMode","JOINT_STEREO","VBR","ResvMax","firbuf","firbufPos","sum1","sum2","assign","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","HBLKSIZE_s","nsPsy","last_en_subshort","pf","pfPos","pfe","p","abs","ers","ers_save","attackthre_s","attackthre","lastAttacks","idx","s3ind","eb2","s3_ll","nb_1","nb_2","STEREO","interChRatio","ATHlower","ppe","type","ppePos","fircoef_","vbrpsy_attack_detection","sub_short_factor","n_chn_out","n_chn_psy","factor","u","v","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","psyvbr_calc_mask_index_s","vbrpsy_compute_masking_s","float","int","dd","dd_n","avg_mask","last","minval_s","vbrpsy_compute_masking_l","t","ecb_limit","ecb_limit_2","ecb_limit_1","minval_l","vbrpsy_compute_block_type","vbrpsy_apply_block_type","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","tempx","exp","norm_s3_func_x","lim_a","lim_b","h","norm","s3_func","temp","sqrt","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","partition","ni","j2","bark1","sfb","i1","i2","start","end","arg","floor","f_tmp","cos","PI","bark2","w","init_s3_values","npart","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","L3psycho_anal_vbr","ch01","mld_cb_l","mld_cb_s","new_thmm","psymodel_init","useOldS3","bvl_a","bvl_b","snr_l_a","snr_l_b","snr_s_a","snr_s_b","out_samplerate","experimentalZ","ms_ener_ratio_old","scalefac_band","snr","level","ATHformula","log","init_fft","decay","exp_nspsytune","frame_duration","mode_gr","adjustLimit","ATHtype","freq_inc","eql_balance","ATHcurve","GrInfo","IIISideInfo","tt","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","scfsi","gr","ch","EOF","USE_NATIVE_URL","redefine","anInstance","has","arrayFrom","codeAt","toASCII","setToStringTag","URLSearchParamsModule","InternalStateModule","NativeURL","getInternalSearchParamsState","getState","setInternalState","set","getInternalURLState","getterFor","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","parseHost","input","codePoints","index","charAt","parseIPv6","isSpecial","test","parseIPv4","percentEncode","C0ControlPercentEncodeSet","partsLength","numbers","part","radix","number","ipv4","parts","split","pop","parseInt","numbersSeen","ipv4Piece","swaps","swap","address","pieceIndex","compress","pointer","char","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","ignore0","unshift","join","toString","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","scheme","includesCredentials","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","toLowerCase","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","bufferCodePoints","failure","state","seenAt","seenBracket","seenPasswordToken","port","query","fragment","replace","codePoint","encodedCodePoints","shift","URLConstructor","baseState","that","urlString","TypeError","searchParamsState","updateSearchParams","updateURL","serializeURL","call","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","getPathname","search","getSearch","getSearchParams","getHash","URLPrototype","output","accessorDescriptor","getter","setter","configurable","enumerable","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","blob","apply","GainAnalysis","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","inputPos","outputPos","nSamples","kernel","filterButter","ResetSampleFrequency","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","fsqr","d","analyzeResult","len","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","ceil","STEPS_per_dB","InitGainAnalysis","linpre","rinpre","lstep","rstep","lout","rout","B","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","num_samples","num_channels","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","arraycopy","ival","GetTitleGain","retval","MAX_dB","render","_vm","_h","$createElement","_c","_self","attrs","_v","_s","$t","domProps","style","display","smallScreen","opacity","staticClass","on","playRemix","exportRemix","clearRemix","ref","_l","item","_m","staticRenderFns","_arrayWithHoles","arr","isArray","_iterableToArrayLimit","Symbol","iterator","Object","_arr","_n","_d","_e","_i","next","done","err","_nonIterableRest","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_defineProperty","obj","defineProperty","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","encoder","encoderWrapper","buf","Promise","resolve","reject","e","mergeAudio","srcs","ctx","OfflineAudioContext","console","musicurl","fetch","then","arrayBuffer","arrayBuf","audioBufSrc","createBufferSource","decodeAudioData","audioBuf","delay","connect","destination","startRendering","mergedAudioBuf","finalBlob","editorElements","getXLocation","offsetLeft","Number","getAttribute","updateElementPos","dx","dy","parseFloat","webkitTransform","transform","setAttribute","moveHandler","event","seq","location","window","sounds","timelineLength","json","soundNotExpanded","lang","name_l10n","singleSound","name","innerHeight","editorBottom","$refs","editor","offsetHeight","offsetTop","loadVoice","setLanguage","navigator","validateDisplay","addEventListener","initDrag","buttonsOffsetLeft","clips","buttonsOffsetTop","draggable","inertia","modifiers","restrictRect","restriction","document","getElementById","endOnly","listeners","move","newNode","cloneNode","removeAttribute","appendChild","position","removeChild","dropzone","accept","ondragenter","relatedTarget","seqId","random","id","ondragleave","tracks","getElementsByClassName","track","offsetWidth","preparedSounds","entries","sound","audioFilename","audio","Audio","preload","setTimeout","play","querySelectorAll","fileLink","createElement","download","click","components","BaseButton","component","Presets","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","kbps","bass","sc","mask","interCh","sfScale","nsmsfix","nsbass","scale","sfscale","lame","setModules","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","VBR_q_frac","q","lame_set_VBR_q","quant_comp_short","experimentalY","maskingadjust","maskingadjust_short","athaa_sensitivity","VBR_q","abr_switch_map","apply_abr_preset","preset","actual_bitrate","nearestBitrateFullIndex","VBR_mean_bitrate_kbps","brate","disable_reservoir","noise_shaping","ret","apply_preset","Lame","R3MIX","V3","MEDIUM","V4","MEDIUM_FAST","STANDARD","V2","STANDARD_FAST","EXTREME","V0","EXTREME_FAST","INSANE","V9","V8","V7","V6","V5","V1","proto","MeanBits","L3Side","LameInternalFlags","CBRNewIterationLoop","_quantize","quantize","iteration_loop","ms_ener_ratio","max_bits","l3_xmin","SFBMAX","xrpow","targ_bits","mean_bits","l3_side","mb","rv","ResvFrameBegin","bits","qupvt","on_pe","mode_ext","MPG_MD_MS_LR","ms_convert","reduce_side","masking_lower_db","cod_info","block_type","mask_adjust","mask_adjust_short","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","part2_3_length","MAX_BITS_PER_CHANNEL","ResvFrameEnd","NewMDCT","III_psy_ratio","FFTOFFSET","bs","psy","vbr","_bs","_psy","_qupvt","_vbr","newMDCT","adjust_ATH","gr2_max","max_pow","useAdjust","aaSensitivityP","adj_lim_new","updateStats","bitrate_index","bitrate_stereoMode_Hist","bt","mixed_block_flag","bitrate_blockType_Hist","lame_encode_frame_init","inbuf","primebuff0","primebuff1","mdct_sub48","mf_size","framesize","lame_encode_mp3_frame","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","pe_MS","padding","slot_lag","frac_SpF","psymodel","bufp","bufpPos","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","ms_ratio","xr","pefirbuf","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","SBPSY_l","SBPSY_s","PSFB21","PSFB12","MPG_MD_LR_I","MPG_MD_MS_I","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","$entries","default","Window","init","getWindow","o","realWindow","createTextNode","ownerDocument","wrap","defaultView","constructor","c","docFrag","nodeType","func","bool","element","Element","nodeName","plainObject","array","splice","interaction","prepared","axis","coords","cur","page","client","velocity","iEvent","delta","install","actions","Interactable","defaults","map","drag","methodDict","interactable","buttons","options","enabled","pointerIsDown","pointerType","mouseButtons","action","lockAxis","startAxis","setPerAction","setOnEvents","beforeMove","getCursor","g","DocumentFragment","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch","PointerEvent","MSPointerEvent","supportsTouch","DocumentTouch","supportsPointerEvent","pointerEnabled","isIOS","platform","isIOS7","appVersion","isIe9","userAgent","isOperaMobile","appName","prefixedMatchesSelector","pEventTypes","up","down","over","out","cancel","wheelEvent","_","S","P","parentNode","nodeContains","closest","matchesSelector","indexOfDeepestElement","E","T","ownerSVGElement","lastChild","previousSibling","getComputedStyle","zIndex","matchesUpTo","getActualElement","correspondingUseElement","getScrollXY","M","getElementClientRect","getElementRect","left","right","top","bottom","getPath","trySelector","querySelector","scrollX","documentElement","scrollLeft","scrollY","scrollTop","getBoundingClientRect","getClientRects","width","height","I","D","getRect","getStringOptionResult","resolveRectLike","from","rectToXY","xywhToTlbr","tlbrToXywh","addEdges","z","C","R","trim","reduce","concat","F","X","Y","prefixedPropREs","indexOf","webkit","moz","W","L","U","V","N","touches","changedTouches","G","pageX","pageY","clientX","clientY","screenX","screenY","copyCoords","timeStamp","setCoordDeltas","setCoordVelocity","setZeroCoords","isNativePointer","getXY","getPageXY","getClientXY","getPointerId","pointerId","identifier","setCoords","getTouchPair","pointerAverage","touchBBox","touchDistance","touchAngle","atan2","getPointerType","getEventTargets","composedPath","currentTarget","newCoords","coordsToEvent","preventDefault","H","BaseEvent","K","_interaction","immediatePropagationStopped","propagationStopped","_proxy","Z","J","find","findIndex","merge","remove","contains","Q","et","nt","rt","ot","setPrototypeOf","__proto__","it","Reflect","construct","Proxy","Date","st","at","ReferenceError","getPrototypeOf","DropEvent","lt","create","dragEvent","prev","dropState","rejected","events","enter","stopImmediatePropagation","activeDrops","fire","ut","ct","ft","interactables","list","drop","draggableElement","_context","rect","dt","dropCheck","pt","leave","activate","deactivate","dragLeave","prevDropzone","dragEnter","dragmove","vt","ht","dynamicDrop","gt","interactStatic","usePlugin","off","ondrop","ondropactivate","ondropdeactivate","ondropmove","overlap","checker","phaselessTypes","dragenter","dragleave","dropactivate","dropdeactivate","dropmove","getActiveDrops","getDrop","getDropEvents","fireDropEvents","yt","mt","phase","pointers","deltaSource","distance","box","ds","angle","da","gesture","startDistance","startAngle","prevEvent","isNaN","xt","before","gesturable","wt","_t","St","Pt","resizeAxes","resize","square","axes","Ot","browser","cursors","xy","topleft","bottomright","topright","bottomleft","defaultMargin","resizable","preserveAspectRatio","edges","_rects","corrected","previous","deltaRect","invert","_latestPointer","eventTarget","margin","NaN","Et","Tt","Mt","jt","kt","It","Dt","At","zt","request","requestAnimationFrame","cancelAnimationFrame","now","clearTimeout","Ct","getContainer","Ft","getScroll","Xt","getScrollSize","body","scrollWidth","scrollHeight","getScrollSizeDelta","autoScroll","container","Rt","speed","isScrolling","prevTime","scroll","stop","scrollBy","check","onInteractionMove","interacting","simulation","innerWidth","Yt","autoscroll","perAction","Wt","warnOnce","warn","copyAction","Lt","Bt","styleCursor","Ut","actionChecker","Vt","getAction","0","1","3","4","button","ignoreFrom","_backCompatOption","allowFrom","qt","Nt","testIgnoreAllow","Kt","Gt","forEachMatch","manualStart","Ht","Qt","maxPerElement","autoStart","maxInteractions","interactions","Zt","Jt","cursorElement","cursor","cursorChecker","_interacting","te","withinInteractionLimit","pointerWasMoved","validateAction","ee","ne","downPointer","downEvent","oe","hold","ie","autoStartHoldTimer","duplicate","getHoldDuration","ae","se","le","ue","ce","fe","checkAndPreventDefault","de","supportsPassive","getDocOptions","passive","docEvents","listener","ve","he","ge","ye","touchAction","boxSizing","noListeners","me","be","perform","xe","getInfo","text","types","we","logger","devTools","ignore","checks","CheckName","links","prefix","Se","Pe","Oe","Ee","return","Te","Me","getRectOffset","Ie","je","states","startOffset","startDelta","endResult","ke","methods","_methods","prepareStates","pageCoords","preEnd","startAll","setAll","fillArg","skipModifiers","shouldDo","eventProps","rectDelta","changed","modifiedCoords","applyToInteraction","beforeEnd","modification","setStart","De","Ae","makeModifier","_defaults","addEventModifiers","ze","setAndApply","restoreInteractionCoords","Ce","Re","Fe","Xe","Ye","We","Ue","Le","Be","InteractEvent","Ve","ctrlKey","shiftKey","altKey","metaKey","x0","y0","t0","duration","clientX0","clientY0","swipe","downTime","getSwipe","velocityY","velocityX","qe","PointerInfo","downTarget","Ne","Ge","$e","He","Ke","Interaction","_ProxyMethods","_ProxyValues","Ze","Je","scopeFire","_scopeFire","_ending","_stopped","doMove","_id","updatePointer","pointerIndex","pointerInfo","_doPhase","pointerMoveTolerance","getPointerIndex","curEventTarget","removePointer","_now","pointerExtend","_updateLatestPointer","_createPreparedEvent","_fireEvent","Qe","tn","an","offset","total","pending","nn","rn","addTotal","applyPending","offsetBy","sn","ln","un","InertiaState","cn","active","isModified","smoothEnd","allowResume","modifierCount","modifierArg","startCoords","v0","targetOffset","modifiedOffset","currentOffset","lambda_v0","one_ve_v0","timeout","fn","copyFrom","minSpeed","endSpeed","startInertia","startSmoothEnd","resistance","inertiaTick","smoothEndTick","dn","smoothEndDuration","pn","vn","phases","inertiastart","resume","hn","gn","yn","Eventable","mn","bn","substr","xn","wn","Sn","_actions","_win","_doc","_scopeEvents","_rectChecker","context","onstart","onmove","onend","oninertiastart","updatePerActionListeners","testIgnore","testAllow","_onOff","delegatedEvents","selector","removeDelegate","Pn","On","InteractableSet","En","selectorMap","scope","addListeners","addDocument","win","inContext","Tn","Mn","jn","kn","FakeEvent","In","originalEvent","stopPropagation","Dn","capture","An","add","addDelegate","delegateListener","delegateUseCapture","documents","targets","supportsOptions","removeEventListener","hasOwnProperty","zn","createInteractStatic","new","globalEvents","getPointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","version","use","isSet","debug","removeDocument","Cn","Rn","methodOrder","simulationResume","eventType","mouseOrPen","Fn","hasPointer","idle","some","Xn","Yn","Wn","Ln","Bn","Un","Vn","qn","Nn","$n","Gn","Hn","Kn","prevTouchTime","Zn","searchDetails","Jn","doc","Qn","pointerDown","pointerMove","pointerUp","documentBlur","destroy","onDocSignal","doOnInteractions","methodNames","tr","er","nr","ar","rr","or","ir","sr","lr","ur","initScope","fr","Scope","cr","isInitialized","listenerMaps","_plugins","onWindowUnload","pluginIsInstalled","getDocIndex","dr","pr","vr","hr","yr","br","wr","range","limits","grid","round","coordFields","_r","Sr","Pr","snappers","createSnapGrid","Or","Er","Tr","Mr","aspectRatio","jr","equalDelta","startRect","linkedEdges","xIsPrimaryAxis","edgeSign","subModification","kr","Ir","prevCoords","prevRect","Dr","Ar","zr","Cr","Rr","Fr","Xr","getRestrictionRect","restrict","Yr","elementRect","Wr","Lr","restrictEdges","Br","Ur","Vr","qr","noInner","noOuter","inner","outer","Nr","Gr","$r","Hr","Kr","Zr","restrictSize","Jr","Qr","to","eo","no","ro","snap","oo","offsetWithOrigin","relativePoints","offsets","relativePoint","inRange","io","ao","so","lo","snapSize","uo","targetFields","co","fo","snapEdges","po","vo","ho","go","yo","mo","spring","avoid","rubberband","xo","wo","_o","So","Po","Oo","Eo","jo","To","Mo","ko","double","eventable","tapTime","prevTap","Io","Do","pointerEvents","Ao","node","holdDuration","Co","collectEventTargets","zo","tap","doubletap","pointerEvent","props","_subtractOrigin","_addOrigin","Ro","Fo","Xo","holdIntervalHandle","clearInterval","Yo","holdRepeatInterval","holdrepeat","Wo","Lo","Bo","Uo","Vo","qo","No","Go","reflow","_reflowPromise","_reflowResolve","all","$o","Ho","Ko","exchange","Zo","Jo","Qo","__utils","displace","ti","ei","ri","encodeWav","encodeMp3","VALID_MP3_BITRATES","audioBuffer","encoding","onProgress","onComplete","Error","bitrate","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","Reservoir","maxmp3buf","frameLength","getframebits","sideinfo_len","resvLimit","strict_ISO","fullFrameBits","ResvSize","resvsize","ResvMaxBits","cbr","add_bits","substep_shaping","extra_bits","ResvAdjust","gi","part2_length","over_bits","stuffingBits","mdb_bytes","HuffCodeTab","hl","xlen","linmax","table","hlen","Tables","t1HB","t1l","t2HB","t2l","t3HB","t3l","t5HB","t5l","t6HB","t6l","t7HB","t7l","t8HB","t8l","t9HB","t9l","t10HB","t10l","t11HB","t11l","t12HB","t12l","t13HB","t13l","t16_5l","t15HB","t15l","t16HB","t16l","t24HB","t24l","t32HB","t32l","t33HB","t33l","largetbl","table23","table56","bitrate_table","samplerate_table","scfsi_band","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexNonASCII","regexSeparators","OVERFLOW_ERROR","baseMinusTMin","stringFromCharCode","fromCharCode","ucs2decode","counter","charCodeAt","extra","digitToBasic","digit","adapt","numPoints","firstTime","encode","currentValue","inputLength","bias","basicLength","handledCPCount","handledCPCountPlusOne","RangeError","qMinusT","baseMinusT","label","encoded","labels","_ordinal","DUAL_CHANNEL","MONO","NOT_SET","lamejs","MAX_AMPLITUDE","params","cb","sampleRate","nChannels","numberOfChannels","bufferLength","buffers","channel","getChannelData","samples","sample","BLOCK_SIZE","mp3encoder","Mp3Encoder","mp3Data","blockIndex","encodeChunk","chunk","subarray","encodeBuffer","chunkL","chunkR","update","flush","Blob","performance","Takehiro","BitStream","self","CRC16_POLYNOMIAL","MAX_LENGTH","ga","mpg","ver","_ga","_mpg","_ver","totbit","bufByteIdx","bufBitIdx","putheader_bits","header","w_ptr","MAX_HEADER_BUF","putbits2","LAME_MAXMP3BUFFER","write_timing","putbits_noheaders","drain_into_ancillary","remainingBits","getLameShortVersion","ancillary_flag","writeheader","ptr","h_ptr","CRC_update","crc","encodeSideInfo2","bitsPerFrame","error_protection","band","big_values","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","CRC_writeheader","old","println","huffman_coder_count1","ix","count1","huffbits","l3_enc","Huffmancode","tableindex","cbits","xbits","linbits","ext","x1","x2","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","writeMainData","data_bits","tot_bits","slen1","slen1_tab","slen2","slen2_tab","sfbdivide","scalefac","sfbmax","sfb_partition","scale_bits","sfb_partition_table","sfbs","slen","TotalBytes","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","bit_rate","bytes","flush_bitstream","findReplayGain","RadioGain","rgdata","NEQ","findPeakSample","noclipGainChange","PeakSample","EQ","noclipScale","add_dummy_byte","printf","bufferPos","mp3data","minimum","nMusicCRC","updateMusicCRC","VBR_seek_table","decode_on_the_fly","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","hip","init_bit_stream_w","objectKeys","toIndexedObject","propertyIsEnumerable","TO_ENTRIES","isObject","dummy","Wrapper","NewTarget","NewTargetPrototype","ReplayGain","freqindex","first","CalcNoiseResult","over_noise","tot_noise","max_noise","over_count","over_SSD","HEADER_LENGTH","ArrayBuffer","int16","uint8","Uint8Array","l2","l1","$parseFloat","FORCED","Infinity","trimmedString","window_s","costab","fht","fz","fzPos","k4","fi","tri","s1","c1","k1","k2","k3","kx","f1","f0","f3","f2","c2","s2","g0","g1","g2","g3","rv_tbl","x_real","jj","Version","LAME_URL","LAME_MAJOR_VERSION","LAME_MINOR_VERSION","LAME_PATCH_VERSION","PSY_MAJOR_VERSION","PSY_MINOR_VERSION","getLameVersion","getLameVeryShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","LameGlobalFlags","class_id","in_samplerate","scale_left","scale_right","decode_only","quality","free_format","write_id3tag_automatic","compression_ratio","copyright","original","extension","emphasis","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","ATHonly","ATHshort","noATH","athaa_type","useTemporal","tune","tune_value_a","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","getBuiltIn","redefineAll","createIteratorConstructor","hasOwn","bind","classof","anObject","createPropertyDescriptor","getIterator","getIteratorMethod","$fetch","Headers","URL_SEARCH_PARAMS","URL_SEARCH_PARAMS_ITERATOR","getInternalParamsState","getInternalIteratorState","plus","sequences","percentSequence","percentDecode","sequence","decodeURIComponent","deserialize","replacer","match","serialize","parseSearchParams","attribute","entry","attributes","validateArgumentsLength","passed","required","URLSearchParamsIterator","kind","URLSearchParamsConstructor","iteratorMethod","entryIterator","entryNext","URLSearchParamsPrototype","append","getAll","found","entriesIndex","sliceIndex","callback","boundFunction","headers","toObject","toLength","createProperty","arraySpeciesCreate","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","III_psy_xmin","iii_psy_xmin","VBRQuantize","_tk","isForced","inheritIfRequired","toPrimitive","getOwnPropertyNames","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","argument","maxCode","digits","NumberWrapper","valueOf","psfb21","psfb12","parseFloatImplementation","nativeKeys","FAILS_ON_PRIMITIVES","ScaleFac","QuantizePVT","tak","POW20","Q_MAX2","Q_MAX","pow20","_rv","IPOW20","ipow20","DBL_EPSILON","IXMAX_VAL","PRECALC_SIZE","NSATHSCALE","LARGE_BITS","nr_of_sfb_block","pretab","sfBandIndex","pow43","adj43","ATHmdct","compute_ath","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","StartLine","iteration_init","iteration_init_init","alto","treble","sfb21","huffman_init","longfact","shortfact","tbits","MAX_BITS_PER_GRANULE","fac","move_bits","athAdjust","athFloor","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","psy_lmax","xmin","rh1","rh2","en0","xa","xb","max_nonzero","max_nonzero_coeff","sfb_smin","psymax","tmpATH","calc_noise_core","startline","ix01","calc_noise","distort","res","prev_noise","distortPos","l3_xminPos","over_noise_db","tot_noise_db","scalefacPos","tmp","usefullsize","sl","set_pinfo","sfb2","en1","ifqstep","xfsf","sfb_lmax","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","NsPsy","MAX_HEADER_LEN","Header","Class_ID","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","VBR_min_bitrate","VBR_max_bitrate","samplerate_index","lowpass1","lowpass2","highpass1","highpass2","noise_shaping_amp","noise_shaping_stop","use_best_huffman","full_outer_loop","tag_spec","OldValue","CurrentStep","bv_scf","pseudohalf","sfb21_extra","inbuf_old","blackfilt","BPC","itime","sb_sample","amp_filter","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","nogap_total","nogap_current","AudiophileGain","in_buffer_nsamples","in_buffer_0","in_buffer_1","Bits","subdv_table","quantize_lines_xrpow_01","istep","xrPos","ixPos","compareval0","quantize_lines_xrpow","remaining","x3","rx0","rx1","rx2","rx3","quantize_xrpow","xp","pi","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","ix_max","endPos","max1","max2","count_bit_ESC","t1","t2","count_bit_noESC","hlen1","count_bit_noESC_from2","count_bit_noESC_from3","sum3","hlen2","hlen3","huf_tbl_noESC","choose_table","choice2","choice","recalc_divide_init","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r0","a1","r0bits","bi","r0t","r1","a2","r1t","recalc_divide_sub","cod_info2","r2","count1bits","r2t","noquant_count_bits","best_huffman_divide","count_bits","xrpow_max","gain","roundfac","slen1_n","slen2_n","scfsi_calc","all_scalefactors_not_negative","best_scalefac_store","recalc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","max_slen1","max_slen2","max_range_sfac_tab","table_number","row_in_table","nr_sfb","max_sfac","partition_table","slen3","slen4","log2tab","bv_index","scfb_anz","Quantize","VBRTag","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","channels","samplerate","gaud","qu","id3","parse","enc","lame_init","retcode","lame_init_params","maxSamples","_sz","lame_encode_buffer","lame_encode_flush","WavHeader","dataOffset","dataLen","fourccToInt","fourcc","RIFF","WAVE","fmt_","data","readHeader","dataView","getUint32","fmtLen","getUint16","tk","init_xrpow_core","psfb21_analogsilence","ath21","block","ath12","BinSearchDirection","bin_search_StepSize","desired_rate","nBits","flagGoneOver","Direction","BINSEARCH_NONE","BINSEARCH_DOWN","BINSEARCH_UP","loop_break","penalties","get_klemm_noise","klemm_noise","quant_compare","best","calc","better","amp_scalefac_bands","bRefine","ifqstep34","trigger","inc_scalefac_scale","inc_subblock_gain","amp","balance_noise","status","ixwork","trancate_smallspectrums","work","allowedNoise","trancateThreshold","nsame","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","age","search_limit","noise_info","maxggain","huff_bits","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","get_framebits","frameBits","VBR_old_prepare","bands","analog_silence","mxb","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","getOwnPropertyDescriptorModule","descriptor","LAME_MAXALBUMART","mpglib","LowPassHighPass","lowerlimit","BandPass","lPass","lowpass","_p","_qu","_id3","_mpglib","LAME_ID","lame_init_old","filter_coef","optimum_samplefreq","input_samplefreq","suggested_samplefreq","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","BitrateIndex","optimum_bandwidth","lh","freq_map","table_index","lame_init_params_ppflt","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_qval","lame_init_bitstream","id3tag_write_v2","InitVbrTag","update_inbuffer_size","nsamples","calcNeeded","mf_needed","lame_encode_buffer_sample","buffer_l","buffer_r","mp3out","mp3size","in_buffer","in_bufferPos","in_buffer_ptr","n_in","n_out","inOut","InOut","fill_buffer","buf_size","lame_encode_frame","NumUsed","num_used","gcd","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","bpc","intratio","filter_l","BLACKSIZE","time0","joff","xvalue","n_shift","numUsed","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","cmp","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","NSATTACKTHRE","NSATTACKTHRE_S","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","id3tag_write_v1","FRAMES_FLAG","BYTES_FLAG","TOC_FLAG","VBR_SCALE_FLAG","NUMTOCENTRIES","MAXFRAMESIZE","VBRHEADERSIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","addVbr","xingSeekTable","act","indx","seek_point","extractInteger","createInteger","createShort","isVbrTag","equals","shiftInBitsValue","setLameTagFrameHeader","bbyte","abyte","crcUpdateLookup","putLameVBR","musicLength","streamBuffer","streamBufferPos","revMethod","abrBitrate","bytesWritten","encDelay","encPadding","revision","vbrTypeTranslator","peakSignalAmplitude","radioReplayGain","audiophileReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","misc","musicCRC","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","noGapCurr","athType","flags","skipId3v2","fpStream","seek","id3v2TagSize","id3v2Header","readFully","startsWith","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","head_flags","frames","toc","vbrScale","headersize","kbps_header","totalFrameSize","headerSize","getLameTagFrame","streamIndex","streamSize","putVbrTag","stream","write","nativeGetOwnPropertyDescriptor","meanBits","clone_int","clone_float","other","enwindow","NS","NL","tantab_l","cx","ca","cs","order","window_subband","x1Pos","wp","mdct_short","inout","inoutPos","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","outPos","_in","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","w0","w1","wk","wkPos","mdct_enc","mdct_encPos","samp","sampPos","band0","band1","bu","bd","arrL","arrS","arr21","arr12"],"mappings":"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,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhE,KAAc,CACV,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhE,OAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhE,KAAc,CACV,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,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D,EAAUE,EAAMjtD,OAC7B64B,EAAKtxC,OAASwlE,EAAUE,EAAM1lE,QAC9BsxC,EAAK8e,WAAasV,EAAMtV,WAExB9e,EAAK6E,oBAAsBuvB,EAAMvvB,oBAAoB5pE,MAAM,GAC3D+kE,EAAK+E,KAAOmvB,EAAUE,EAAMrvB,MAC5B/E,EAAKiW,kBAAoBme,EAAMne,mBAIvCn4E,EAAOC,QAAU6Z,G,qBC5EjB,IAAItZ,EAAS,EAAQ,QACjBvC,EAASuC,EAAOvC,OAIhBM,GAHUiC,EAAOjB,QACTiB,EAAOlB,MACFkB,EAAOhC,WACbgC,EAAOjC,MACdZ,EAAS6C,EAAO7C,OAIhBhB,GAHc6D,EAAO/C,YACV+C,EAAOpE,SACLoE,EAAO3D,WACR2D,EAAO7D,WAMnBuH,GALc1D,EAAOzD,YACXyD,EAAO/D,QACL+D,EAAOjD,UACViD,EAAOT,OAEN,EAAQ,SAGtB,SAASi9B,IAER,IAAIu5D,EAAW,EACb,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBh4F,EAAKI,MAAQ,GAAM,QACnC,WAAgBJ,EAAKI,MAAQ,GAAM,QACnC,WAAeJ,EAAKI,MAAQ,GAAM,QAClC,WAAeJ,EAAKI,MAAQ,GAAM,QAClC,UAAcJ,EAAKI,MAAQ,GAAM,QACjC,UAAcJ,EAAKI,MAAQ,GAAM,QACjC,UAAcJ,EAAKI,MAAQ,GAAM,QACjC,SAAaJ,EAAKI,MAAQ,GAAM,QAEhC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAGE63F,EAAK,GACLC,EAAK,GAEL5tC,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,kBACA,IAEC,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBAED,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBAED,CACC,EACA,EACA,EACA,EACA,EACA,EACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAIF6tC,EAAW7tC,EAAI3kD,EAAQ0I,YACvB+pF,EAAK9tC,EAAI3kD,EAAQ0I,YACjBgqF,EAAK/tC,EAAI3kD,EAAQ0I,YACjBiqF,EAAKhuC,EAAI3kD,EAAQ0I,YAajBkqF,EAAQ,CACR,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAM5D,SAASC,EAAerxB,EAAIsxB,EAAOp5F,GAKlC,IAJA,IAuEW8U,EAAGC,EA8BT4tB,EArGD02D,EAAK,GAELtxB,EAAKqxB,EAAQ,IAAM,GAAK,IAEnB35F,GAAK,GAAIA,EAAI,EAAGA,IAAK,CAC7B,IAAIia,EAAG5N,EAAG8J,EAEV8D,EAAIi/E,EAASU,GAAM,IACnBvtF,EAAIg8D,EAAGC,GAAM,KAAOruD,EACpB9D,EAAIkyD,EAAGsxB,EAAQ,KAAO1/E,EACtBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGC,GAAM,KAAOruD,EACrB9D,GAAKkyD,EAAGsxB,EAAQ,KAAO1/E,EACvBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGC,GAAM,IAAMruD,EACpB9D,GAAKkyD,EAAGsxB,EAAQ,IAAM1/E,EACtBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGC,GAAM,IAAMruD,EACpB9D,GAAKkyD,EAAGsxB,EAAQ,IAAM1/E,EACtBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGC,EAAK,IAAMruD,EACnB9D,GAAKkyD,EAAGsxB,GAAS,IAAM1/E,EACvBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGC,EAAK,IAAMruD,EACnB9D,GAAKkyD,EAAGsxB,GAAS,IAAM1/E,EACvBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGC,EAAK,KAAOruD,EACpB9D,GAAKkyD,EAAGsxB,GAAS,KAAO1/E,EACxBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGC,EAAK,KAAOruD,EACpB9D,GAAKkyD,EAAGsxB,GAAS,KAAO1/E,EAExBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGsxB,GAAS,KAAO1/E,EACxB9D,GAAKkyD,EAAGC,EAAK,KAAOruD,EACpBA,EAAIi/E,EAASU,GAAM,GACnBvtF,GAAKg8D,EAAGsxB,GAAS,KAAO1/E,EACxB9D,GAAKkyD,EAAGC,EAAK,KAAOruD,EACpBA,EAAIi/E,EAASU,EAAK,GAClBvtF,GAAKg8D,EAAGsxB,GAAS,KAAO1/E,EACxB9D,GAAKkyD,EAAGC,EAAK,KAAOruD,EACpBA,EAAIi/E,EAASU,EAAK,GAClBvtF,GAAKg8D,EAAGsxB,GAAS,IAAM1/E,EACvB9D,GAAKkyD,EAAGC,EAAK,IAAMruD,EACnBA,EAAIi/E,EAASU,EAAK,GAClBvtF,GAAKg8D,EAAGsxB,EAAQ,GAAK1/E,EACrB9D,GAAKkyD,EAAGC,EAAK,GAAKruD,EAClBA,EAAIi/E,EAASU,EAAK,GAClBvtF,GAAKg8D,EAAGsxB,EAAQ,IAAM1/E,EACtB9D,GAAKkyD,EAAGC,GAAM,IAAMruD,EACpBA,EAAIi/E,EAASU,EAAK,GAClBvtF,GAAKg8D,EAAGsxB,EAAQ,KAAO1/E,EACvB9D,GAAKkyD,EAAGC,GAAM,KAAOruD,EACrBA,EAAIi/E,EAASU,EAAK,GAClBvtF,GAAKg8D,EAAGsxB,EAAQ,KAAO1/E,EACvB9D,GAAKkyD,EAAGC,GAAM,KAAOruD,EAOrB5N,GAAK6sF,EAASU,EAAK,GACnB3/E,EAAI9D,EAAI9J,EACR9L,EAAE,GAAS,EAAJP,GAASmW,EAAI9J,EACpB9L,EAAE,GAAS,EAAJP,GAASk5F,EAASU,EAAK,GAAK3/E,EACnC2/E,GAAM,GACND,IACArxB,IAIAnyD,EAAIkyD,EAAGsxB,GAAS,IAAMT,EAASU,GAAM,IACrCvtF,EAAIg8D,EAAGsxB,GAAS,IAAMT,EAASU,GAAM,GACrCzjF,IAAMkyD,EAAGsxB,GAAS,IAAMtxB,EAAGsxB,EAAQ,KAAOT,EAASU,GAAM,GACzDvtF,GAAKg8D,EAAGsxB,GAAS,IAAMT,EAASU,GAAM,GACtCzjF,IAAMkyD,EAAGsxB,GAAS,IAAMtxB,EAAGsxB,EAAQ,KAAOT,EAASU,GAAM,GACzDvtF,GAAKg8D,EAAGsxB,GAAS,KAAOT,EAASU,EAAK,GACtCzjF,IAAMkyD,EAAGsxB,GAAS,KAAOtxB,EAAGsxB,EAAQ,KAAOT,EAASU,GAAM,GAC1DvtF,GAAKg8D,EAAGsxB,GAAS,KAAOT,EAASU,EAAK,GACtCzjF,IAAMkyD,EAAGsxB,GAAS,KAAOtxB,EAAGsxB,EAAQ,MAAQT,EAASU,GAAM,GAC3DvtF,GAAKg8D,EAAGsxB,EAAQ,IAAMT,EAASU,EAAK,GACpCzjF,IAAMkyD,EAAGsxB,GAAS,KAAOtxB,EAAGsxB,EAAQ,MAAQT,EAASU,GAAM,GAC3DvtF,GAAKg8D,EAAGsxB,EAAQ,IAAMT,EAASU,EAAK,GACpCzjF,IAAMkyD,EAAGsxB,GAAS,KAAOtxB,EAAGsxB,EAAQ,MAAQT,EAASU,GAAM,GAC3DvtF,GAAKg8D,EAAGsxB,EAAQ,KAAOT,EAASU,EAAK,GACrCzjF,IAAMkyD,EAAGsxB,GAAS,KAAOtxB,EAAGsxB,EAAQ,MAAQT,EAASU,GAAM,GAC3DvtF,GAAKg8D,EAAGsxB,EAAQ,KAEhBtkF,EAAIhJ,EAAI8J,EACRb,EAAIjJ,EAAI8J,EAERA,EAAI5V,EAAE,IACN8L,EAAI9L,EAAE,IAAM4V,EAEZ5V,EAAE,IAAM+U,EAAIa,EACZ5V,EAAE,IAAM8U,EAAIhJ,EACZ9L,EAAE,IAAM8U,EAAIhJ,EACZ9L,EAAE,IAAM+U,EAAIa,EAIZ+sB,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GACrC12D,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GAErC12D,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GACrC12D,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GAErC12D,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAU,GACrC12D,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAU,GAErC12D,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKhiC,EAAKI,MAClB4hC,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKhiC,EAAKI,MAAQf,EAAE,GAC5BA,EAAE,IAAMA,EAAE,GACVA,EAAE,KAAOA,EAAE,GACXA,EAAE,KAAOA,EAAE,IAEX2iC,EAAK3iC,EAAE,GACPA,EAAE,GAAKA,EAAE,IAAM2iC,EACf3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAChBA,EAAK3iC,EAAE,GACPA,EAAE,GAAKA,EAAE,IAAM2iC,EACf3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAChBA,EAAK3iC,EAAE,IACPA,EAAE,IAAMA,EAAE,IAAM2iC,EAChB3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAChBA,EAAK3iC,EAAE,IACPA,EAAE,IAAMA,EAAE,IAAM2iC,EAChB3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAEhBA,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GACtC12D,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GAEtC12D,EAAK3iC,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GACtC12D,EAAK3iC,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GAEtC12D,EAAK3iC,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GACtC12D,EAAK3iC,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GAEtC12D,GAAM3iC,EAAE,IAAMA,EAAE,IAChBA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GACtC12D,GAAM3iC,EAAE,IAAMA,EAAE,IAChBA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,IAAW,GAEtC12D,EAAK3iC,EAAE,GAAKA,EAAE,GACdA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAK2iC,EAAKg2D,EAASU,GAAK,IAAW,GACrC12D,EAAK3iC,EAAE,GAAKA,EAAE,GACdA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAK2iC,EAAKg2D,EAASU,GAAK,IAAW,GAErC12D,EAAK3iC,EAAE,GAAKA,EAAE,IACdA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GACrC12D,EAAK3iC,EAAE,GAAKA,EAAE,IACdA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GACrC12D,EAAK3iC,EAAE,IAAMA,EAAE,IACfA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GACrC12D,GAAM3iC,EAAE,IAAMA,EAAE,IAChBA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAKg2D,EAASU,GAAK,GAAU,GAErC12D,EAAKhiC,EAAKI,OAASf,EAAE,GAAKA,EAAE,KAC5BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EACRA,EAAKhiC,EAAKI,OAASf,EAAE,GAAKA,EAAE,KAC5BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EACRA,EAAKhiC,EAAKI,QAAUf,EAAE,IAAMA,EAAE,KAC9BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAK3iC,EAAE,IACf2iC,EAAKhiC,EAAKI,QAAUf,EAAE,IAAMA,EAAE,KAC9BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAK3iC,EAAE,IAEf2iC,EAAK3iC,EAAE,GACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAM2iC,EACR3iC,EAAE,GAAKA,EAAE,IAAM2iC,EACf3iC,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,GACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACT3iC,EAAE,GAAKA,EAAE,IAAM2iC,EACf3iC,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACT3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAChB3iC,EAAE,KAAO2iC,EAETA,EAAK3iC,EAAE,IACPA,EAAE,KAAO2iC,EACT3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAChB3iC,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAO2iC,EACT3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAChB3iC,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAO2iC,EACT3iC,EAAE,IAAMA,EAAE,IAAM2iC,EAChB3iC,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAO2iC,EACT3iC,EAAE,IAAMA,EAAE,GAAK2iC,EACf3iC,EAAE,IAAM2iC,EAERA,EAAK3iC,EAAE,IACPA,EAAE,IAAMA,EAAE,GAAK2iC,EACf3iC,EAAE,IAAM2iC,EAERA,EAAKhiC,EAAKI,OAASf,EAAE,GAAKA,EAAE,IAC5BA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAK2iC,EACPA,EAAKhiC,EAAKI,OAASf,EAAE,GAAKA,EAAE,IAC5BA,EAAE,IAAMA,EAAE,GACVA,EAAE,GAAK2iC,EACPA,EAAKhiC,EAAKI,OAASf,EAAE,IAAMA,EAAE,KAC7BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EACRA,EAAKhiC,EAAKI,OAASf,EAAE,IAAMA,EAAE,KAC7BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAERA,GAAMhiC,EAAKI,OAASf,EAAE,GAAKA,EAAE,KAC7BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAK3iC,EAAE,GACf2iC,GAAMhiC,EAAKI,OAASf,EAAE,GAAKA,EAAE,KAC7BA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAM2iC,EAAK3iC,EAAE,GACf2iC,GAAMhiC,EAAKI,OAASf,EAAE,IAAMA,EAAE,KAC9BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAK3iC,EAAE,IACf2iC,GAAMhiC,EAAKI,OAASf,EAAE,IAAMA,EAAE,KAC9BA,EAAE,KAAOA,EAAE,IACXA,EAAE,IAAM2iC,EAAK3iC,EAAE,IAEf2iC,EAAK3iC,EAAE,IAAMA,EAAE,IACfA,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EAERA,EAAK3iC,EAAE,IAAMA,EAAE,IACfA,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EAERA,EAAK3iC,EAAE,IAAMA,EAAE,GACfA,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,GAAK2iC,EACZ3iC,EAAE,GAAK2iC,EACPA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,GAAK2iC,EACZ3iC,EAAE,GAAK2iC,EACPA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EAERA,EAAK3iC,EAAE,GAAKA,EAAE,GACdA,EAAE,GAAK2iC,EACPA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,GAAK2iC,EACZ3iC,EAAE,GAAK2iC,EACPA,EAAK3iC,EAAE,GAAK2iC,EACZ3iC,EAAE,GAAK2iC,EACPA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,GAAK2iC,EACZ3iC,EAAE,GAAK2iC,EACPA,EAAK3iC,EAAE,GAAK2iC,EACZ3iC,EAAE,GAAK2iC,EACPA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IAAM2iC,EACb3iC,EAAE,IAAM2iC,EAERA,EAAK3iC,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,GACPA,EAAE,IAAMA,EAAE,IACVA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,IACXA,EAAE,KAAO2iC,EACTA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAM2iC,EACRA,EAAK3iC,EAAE,IACPA,EAAE,KAAOA,EAAE,GACXA,EAAE,IAAM2iC,EAeV,SAAS22D,EAAWC,EAAOC,GAC1B,IAAK,IAAIzwF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAI0wF,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAE7BF,EAAML,EAAMC,EAAW,GAASvuC,EAAI3kD,EAAQ0I,YAAY,GACpDuqF,EAAMC,EAAW,IACrBC,EAAMF,EAAMC,EAAW,GAASvuC,EAAI3kD,EAAQ0I,YAAY,GACpDuqF,EAAMC,EAAW,GACrBE,EAAME,EAAMH,EACZE,EAAMC,EAAMH,EAEZG,EAAML,EAAMC,EAAW,IAASvuC,EAAI3kD,EAAQ0I,YAAY,GACpDuqF,EAAMC,EAAW,GACrBC,EAAMF,EAAMC,EAAW,GAASvuC,EAAI3kD,EAAQ0I,YAAY,GACpDuqF,EAAMC,EAAW,GACrBK,EAAMD,EAAMH,EACZK,GAAOF,EAAMH,EAEbA,EAAyF,sBAAlFF,EAAMC,EAAW,GAASvuC,EAAI3kD,EAAQ0I,YAAY,GAAKuqF,EAAMC,EAAW,KAI/EI,EAAyF,sBAAlFL,EAAMC,EAAW,IAASvuC,EAAI3kD,EAAQ0I,YAAY,GAAKuqF,EAAMC,EAAW,IAI/ED,EAAMC,EAAW,GAAe,oBAANE,EAA8BD,EAIxDF,EAAMC,EAAW,IAAgB,qBAANK,EAA8BD,EAIzDD,EAAY,kBAANA,EAA+B,qBAIrCE,EAAY,GAANA,EAAY,qBAAwBD,EAC1CL,EAAMC,EAAW,GAASG,EAAME,EAChCN,EAAMC,EAAW,GAASG,EAAME,EAEhCH,EAAY,GAANA,EAAY,qBAAwBD,EAC1CK,EAAY,kBAANA,EAA+B,qBAIrCP,EAAMC,EAAW,GAASE,EAAMI,EAChCP,EAAMC,EAAW,IAASE,EAAMI,EAEhCN,KAIF,SAASO,EAAU7wD,EAAK8wD,EAAQC,GAC/B,IAAI5nD,EAAIjB,EAEHsoD,EAAKC,EAAKO,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAkCnCV,EAAKC,EAAKU,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAhCvCnB,EAAMO,EAAI,IAAMA,EAAI,GACpBC,EAAMD,EAAI,IAAMA,EAAI,IACpBE,EAAMF,EAAI,IAAMA,EAAI,IACpBG,EAAMH,EAAI,GAAKA,EAAI,GACnBI,EAAMJ,EAAI,GAAKA,EAAI,GACnBK,EAAML,EAAI,GAAKA,EAAI,GACnBM,EAAMN,EAAI,GAAKA,EAAI,GAEnB/wD,EAAI8wD,EAAS,IAAOI,EAAME,EAAMC,GAAQF,EAAMJ,EAAI,IAClD7oD,GAAMgpD,EAAME,EAAMC,GAAOxB,EAAG,KAAWsB,EAAMJ,EAAI,IACjD5nD,GAAMqnD,EAAMQ,EAAMC,GAAOpB,EAAG,IAC5B7vD,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EACvBlI,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EAEvBuoD,GAAOM,EAAI,IAAMA,EAAI,KAAOlB,EAAG,IAC/BsB,EAAMA,EAAMtB,EAAG,IAAUkB,EAAI,GAC7B5nD,EAAKqnD,EAAMX,EAAG,IAAUY,EAAMO,EAAMnB,EAAG,IAAUoB,EAAMpB,EAAG,IAC1D3nD,GAAMgpD,EAAMrB,EAAG,IAAUsB,EAAMC,EAAMvB,EAAG,IAAUwB,EAAMxB,EAAG,IAC3D7vD,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EACvBlI,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EAEvBiB,EAAKqnD,EAAMX,EAAG,IAAUY,EAAMO,EAAMnB,EAAG,IAAUoB,EAAMpB,EAAG,IAC1D3nD,GAAMgpD,EAAMrB,EAAG,IAAUsB,EAAMC,EAAMvB,EAAG,IAAUwB,EAAMxB,EAAG,IAC3D7vD,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EACvBlI,EAAI8wD,EAAS,IAAM3nD,EAAKjB,EAExBiB,EAAKqnD,EAAMX,EAAG,IAAUY,EAAMO,EAAMnB,EAAG,IAAUoB,EAAMpB,EAAG,IAC1D3nD,EAAKgpD,EAAMrB,EAAG,IAAUsB,EAAMC,EAAMvB,EAAG,IAAUwB,EAAMxB,EAAG,IAC1D7vD,EAAI8wD,EAAS,IAAM3nD,EAAKjB,EACxBlI,EAAI8wD,EAAS,IAAM3nD,EAAKjB,EAKxByoD,EAAMI,EAAI,GAAKA,EAAI,GACnBO,EAAMP,EAAI,GAAKA,EAAI,GACnBQ,EAAMR,EAAI,GAAKA,EAAI,GACnBS,EAAMT,EAAI,IAAMA,EAAI,GACpBU,EAAMV,EAAI,IAAMA,EAAI,IACpBW,EAAMX,EAAI,IAAMA,EAAI,IACpBY,EAAMZ,EAAI,IAAMA,EAAI,IAEpB/wD,EAAI8wD,EAAS,GAAMU,EAAME,EAAMC,GAAQF,EAAMV,EAAI,KACjD5nD,GAAMqoD,EAAME,EAAMC,GAAO9B,EAAG,KAAW4B,EAAMV,EAAI,KACjD7oD,GAAMyoD,EAAMW,EAAMC,GAAO1B,EAAG,IAC5B7vD,EAAI8wD,EAAS,IAAM3nD,EAAKjB,EACxBlI,EAAI8wD,EAAS,IAAM3nD,EAAKjB,EAExB0oD,GAAOG,EAAI,GAAKA,EAAI,IAAMlB,EAAG,IAC7B4B,EAAMV,EAAI,IAAMU,EAAM5B,EAAG,IACzB1mD,EAAKqoD,EAAM3B,EAAG,IAAU4B,EAAMC,EAAM7B,EAAG,IAAU8B,EAAM9B,EAAG,IAC1D3nD,EAAKyoD,EAAMd,EAAG,IAAUe,EAAMU,EAAMzB,EAAG,IAAU0B,EAAM1B,EAAG,IAC1D7vD,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EACvBlI,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EAEvBiB,GAAMqoD,EAAM3B,EAAG,IAAU4B,EAAMC,EAAM7B,EAAG,IAAU8B,EAAM9B,EAAG,IAC3D3nD,EAAKyoD,EAAMd,EAAG,IAAUe,EAAMU,EAAMzB,EAAG,IAAU0B,EAAM1B,EAAG,IAC1D7vD,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EACvBlI,EAAI8wD,EAAS,GAAK3nD,EAAKjB,EAEvBiB,GAAMqoD,EAAM3B,EAAG,IAAU4B,EAAMC,EAAM7B,EAAG,IAAU8B,EAAM9B,EAAG,IAC3D3nD,EAAKyoD,EAAMd,EAAG,IAAUe,EAAMU,EAAMzB,EAAG,IAAU0B,EAAM1B,EAAG,IAC1D7vD,EAAI8wD,EAAS,IAAM3nD,EAAKjB,EACxBlI,EAAI8wD,EAAS,IAAM3nD,EAAKjB,EAI1BtwC,KAAKigC,WAAa,SAASp5B,EAAKmzF,EAAIC,GAInC,IAHA,IAAIC,EAAKF,EACLG,EAAQ,IAEHt+E,EAAK,EAAGA,EAAKhV,EAAI6D,aAAcmR,IAAM,CAC7C,IAAK,IAAID,EAAK,EAAGA,EAAK/U,EAAIiU,QAASc,IAAM,CAQxC,IAPA,IAAI4pD,EACA3J,EAAMh1D,EAAIi2B,QAAQxhB,GAAGM,GAAIC,GACzBu+E,EAAWv+B,EAAGh6B,GACdw4D,EAAc,EACdC,EAAOzzF,EAAI62E,UAAU7hE,GAAI,EAAID,GAC7B2+E,EAAU,EAEL1qF,EAAI,EAAGA,EAAI,EAAQA,IAQ3B,IAPAwoF,EAAe6B,EAAIC,EAAOG,EAAKC,IAC/BlC,EAAe6B,EAAIC,EAAQ,GAAIG,EAAKC,EAAU,IAC9CA,GAAW,EACXJ,GAAS,GAIJ30B,EAAO,EAAGA,EAAO,GAAIA,GAAQ,EACjC80B,EAAKC,EAAU,GAAG/0B,KAAU,EAQ9B,IAAKA,EAAO,EAAGA,EAAO,GAAIA,IAAQ60B,GAAe,GAAI,CACpD,IAAI7mF,EAAOqoD,EAAGl+B,WACV68D,EAAQ3zF,EAAI62E,UAAU7hE,GAAID,GAC1B6+E,EAAQ5zF,EAAI62E,UAAU7hE,GAAI,EAAID,GAGlC,GAF2B,GAAvBigD,EAAGl8B,kBAAyB6lC,EAAO,IACtChyD,EAAO,GACJ3M,EAAI82E,WAAWnY,GAAQ,MAC1BvmE,EAAO+R,KAAKopF,EAAUC,EAAc,EAClCA,EAAc,GAAI,OACd,CACN,GAAIxzF,EAAI82E,WAAWnY,GAAQ,EAC1B,IAAS31D,EAAI,EAAGA,EAAI,GAAIA,IACvB4qF,EAAM5qF,GAAGuoF,EAAM5yB,KAAU3+D,EAAI82E,WAAWnY,GAE1C,GAAIhyD,GAAQhO,EAAQ0I,WAAY,CAC/B,IAAS2B,GAAKioF,EAAK,EAAGjoF,EAAI,EAAGA,IAAK,CACjC,IAAI+I,EAAIuxC,EAAI3kD,EAAQ0I,YAAY2B,EAAI,GACpCuqF,EAASC,EAAkB,EAAJxqF,EAAQ,GAAK2qF,EAAM,EAAI3qF,GAAGuoF,EAAM5yB,IACnD5sD,EAAI4hF,EAAM,EAAI3qF,GAAGuoF,EAAM5yB,IAC3B40B,EAASC,EAAkB,EAAJxqF,EAAQ,IAAM2qF,EAAM,GAAK3qF,GAAGuoF,EAAM5yB,IACrD5sD,EAAI4hF,EAAM,GAAK3qF,GAAGuoF,EAAM5yB,IAC5B40B,EAASC,EAAkB,EAAJxqF,EAAQ,IAAM2qF,EAAM,GAAK3qF,GAAGuoF,EAAM5yB,IACrD5sD,EAAI4hF,EAAM,GAAK3qF,GAAGuoF,EAAM5yB,IAC5B40B,EAASC,EAAkB,EAAJxqF,EAAQ,IAAM4qF,EAAM,EAAI5qF,GAAGuoF,EAAM5yB,IACpD5sD,EAAI6hF,EAAM,EAAI5qF,GAAGuoF,EAAM5yB,IAC3B40B,EAASC,EAAkB,EAAJxqF,EAAQ,IAAM4qF,EAAM,EAAI5qF,GAAGuoF,EAAM5yB,IACpD5sD,EAAI6hF,EAAM,EAAI5qF,GAAGuoF,EAAM5yB,IAC3B40B,EAASC,EAAkB,EAAJxqF,EAAQ,IAAM4qF,EAAM,EAAI5qF,GAAGuoF,EAAM5yB,IACpD5sD,EAAI6hF,EAAM,EAAI5qF,GAAGuoF,EAAM5yB,IAE5BgzB,EAAW4B,EAAUC,OACf,CACN,IAAIrR,EAAO/qF,EAAU,IACrB,IAAS4R,GAAKkoF,EAAK,EAAGloF,EAAI,EAAGA,IAAK,CACjC,IAAI3Q,EAAGiJ,EACPjJ,EAAIirD,EAAI32C,GAAM3D,EAAI,IACd4qF,EAAM5qF,EAAI,GAAGuoF,EAAM5yB,IACnBrb,EAAI32C,GAAM3D,EAAI,IACd4qF,EAAM,EAAI5qF,GAAGuoF,EAAM5yB,IACvBr9D,EAAIgiD,EAAI32C,GAAM3D,EAAI,GACd2qF,EAAM3qF,EAAI,GAAGuoF,EAAM5yB,IACnBrb,EAAI32C,GAAM3D,EAAI,IACd2qF,EAAM,EAAI3qF,GAAGuoF,EAAM5yB,IACvBwjB,EAAKn5E,EAAI,GAAK3Q,EAAIiJ,EAAI6vF,EAAS,EAAInoF,EAAI,GACvCm5E,EAAKn5E,EAAI,IAAM3Q,EAAI84F,EAAS,EAAInoF,EAAI,GAAK1H,EAG1C8wF,EAAUmB,EAAUC,EAAarR,IAMnC,GAAIx1E,GAAQhO,EAAQ0I,YAAsB,GAARs3D,EACjC,IAAS31D,EAAI,EAAGA,GAAK,IAAKA,EAAG,CAC5B,IAAI6qF,EAAIC,EACRD,EAAKN,EAASC,EAAcxqF,GAAKqoF,EAAG,GAAKroF,GACrCuqF,EAASC,GAAe,EAAIxqF,GAC5BsoF,EAAG,GAAKtoF,GACZ8qF,EAAKP,EAASC,EAAcxqF,GAAKsoF,EAAG,GAAKtoF,GACrCuqF,EAASC,GAAe,EAAIxqF,GAC5BqoF,EAAG,GAAKroF,GAEZuqF,EAASC,GAAe,EAAIxqF,GAAK6qF,EACjCN,EAASC,EAAcxqF,GAAK8qF,IAOhC,GAFAT,EAAKD,EACLE,EAAQ,IACW,GAAftzF,EAAIiU,QACP,IAAK,IAAInc,EAAI,EAAGA,EAAI,GAAIA,IACvBY,EAAO6rB,UAAUvkB,EAAI62E,UAAU7hE,GAAI,GAAGld,GAAI,EACxCkI,EAAI62E,UAAU7hE,GAAI,GAAGld,GAAI,EAAG,MAOnC2C,EAAOC,QAAU+8B,G,qBCloCjB,IAAIx8B,EAAS,EAAQ,QACjBvC,EAASuC,EAAOvC,OAWhBxB,GAVU+D,EAAOjB,QACTiB,EAAOlB,MACFkB,EAAOhC,WACbgC,EAAOjC,KACLiC,EAAO7C,OACF6C,EAAO/C,YACV+C,EAAOpE,SACLoE,EAAO3D,WACR2D,EAAO7D,UACL6D,EAAOzD,YACXyD,EAAO/D,SAIjByH,GAHY1D,EAAOjD,UACViD,EAAOT,OAEN,EAAQ,SAEtB,SAAS40E,EAAS2kB,EAAMC,EAAMC,EAAOC,GAEjC/6F,KAAKiI,EAAIlK,EAAQ,EAAIyH,EAAQoF,SAC7B5K,KAAKgL,EAAIjN,EAAQ,EAAIyH,EAAQsF,SAC7B9K,KAAK41E,OAAS73E,EAAQ,EAAIyH,EAAQo9B,QAClC5iC,KAAK61E,OAAS93E,EAAQ,EAAIyH,EAAQq9B,QAClC,IAAI56B,EAAIjI,KAAKiI,EACT+C,EAAIhL,KAAKgL,EAEW,GAApB1L,UAAUf,SAGVyB,KAAK46F,KAAOt7F,UAAU,GACtBU,KAAK66F,KAAOv7F,UAAU,GACtBU,KAAK86F,MAAQx7F,UAAU,GACvBU,KAAK+6F,MAAQz7F,UAAU,GAEvBC,EAAO6rB,UAAUprB,KAAK46F,KAAM,EAAG3yF,EAAG,EAAG7H,KAAKmL,IAAIvL,KAAK46F,KAAKr8F,OAAQyB,KAAKiI,EAAE1J,SACvEgB,EAAO6rB,UAAUprB,KAAK66F,KAAM,EAAG7vF,EAAG,EAAG5K,KAAKmL,IAAIvL,KAAK66F,KAAKt8F,OAAQyB,KAAKgL,EAAEzM,SACvEgB,EAAO6rB,UAAUprB,KAAK86F,MAAO,EAAG96F,KAAK41E,OAAQ,EAAGx1E,KAAKmL,IAAIvL,KAAK86F,MAAMv8F,OAAQyB,KAAK41E,OAAOr3E,SACxFgB,EAAO6rB,UAAUprB,KAAK+6F,MAAO,EAAG/6F,KAAK61E,OAAQ,EAAGz1E,KAAKmL,IAAIvL,KAAK+6F,MAAMx8F,OAAQyB,KAAK61E,OAAOt3E,UAIhG+C,EAAOC,QAAU00E","file":"js/chunk-dff06bd0.de5ac862.js","sourcesContent":["function new_byte(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n(args) {\n    if (args.length == 1) {\n        return new_float(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n(args));\n    }\n    return A;\n}\nfunction new_int_n(args) {\n    if (args.length == 1) {\n        return new_int(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n(args));\n    }\n    return A;\n}\n\n\nvar Arrays = {};\n\nArrays.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System = {};\n\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util = {};\nUtil.SQRT2 = 1.41421356237309504880;\nUtil.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock.short_block_allowed = new ShortBlock(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock.short_block_coupled = new ShortBlock(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock.short_block_dispensed = new ShortBlock(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock.short_block_forced = new ShortBlock(3);\n\nvar Float = {};\nFloat.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode.vbr_off = new VbrMode(0);\nVbrMode.vbr_mt = new VbrMode(1);\nVbrMode.vbr_rh = new VbrMode(2);\nVbrMode.vbr_abr = new VbrMode(3);\nVbrMode.vbr_mtrh = new VbrMode(4);\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\n\nvar assert = function (x) {\n    //console.assert(x);\n};\n\nmodule.exports = {\n    \"System\": System,\n    \"VbrMode\": VbrMode,\n    \"Float\": Float,\n    \"ShortBlock\": ShortBlock,\n    \"Util\": Util,\n    \"Arrays\": Arrays,\n    \"new_array_n\": new_array_n,\n    \"new_byte\": new_byte,\n    \"new_double\": new_double,\n    \"new_float\": new_float,\n    \"new_float_n\": new_float_n,\n    \"new_int\": new_int,\n    \"new_int_n\": new_int_n,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert\n};\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","var common = require('./common.js');\nvar new_float = common.new_float;\nvar new_int = common.new_int;\nvar assert = common.assert;\n\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int(39);\n    this.noise = new_float(39);\n    this.noise_log = new_float(39);\n}\n\nmodule.exports = CalcNoiseData;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n  var searchParams = url.searchParams;\n  var result = '';\n  url.pathname = 'c%20d';\n  searchParams.forEach(function (value, key) {\n    searchParams['delete']('b');\n    result += key + value;\n  });\n  return (IS_PURE && !url.toJSON)\n    || !searchParams.sort\n    || url.href !== 'http://a/c%20d?a=1&c=3'\n    || searchParams.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !searchParams[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('http://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('http://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('http://x', undefined).host !== 'x';\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperties = require('../internals/object-define-properties');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\n$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {\n  defineProperties: defineProperties\n});\n","//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nmodule.exports = VBRSeekInfo;\n","/*\n *      psymodel.c\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 2001-2002 Naoki Shibata\n *      Copyright (c) 2000-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2008 Robert Hegemann\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\n *      Copyright (c) 2000-2005 Alexander Leidinger\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\n\n\n/*\n PSYCHO ACOUSTICS\n\n\n This routine computes the psycho acoustics, delayed by one granule.\n\n Input: buffer of PCM data (1024 samples).\n\n This window should be centered over the 576 sample granule window.\n The routine will compute the psycho acoustics for\n this granule, but return the psycho acoustics computed\n for the *previous* granule.  This is because the block\n type of the previous granule can only be determined\n after we have computed the psycho acoustics for the following\n granule.\n\n Output:  maskings and energies for each scalefactor band.\n block type, PE, and some correlation measures.\n The PE is used by CBR modes to determine if extra bits\n from the bit reservoir should be used.  The correlation\n measures are used to determine mid/side or regular stereo.\n */\n/*\n Notation:\n\n barks:  a non-linear frequency scale.  Mapping from frequency to\n barks is given by freq2bark()\n\n scalefactor bands: The spectrum (frequencies) are broken into\n SBMAX \"scalefactor bands\".  Thes bands\n are determined by the MPEG ISO spec.  In\n the noise shaping/quantization code, we allocate\n bits among the partition bands to achieve the\n best possible quality\n\n partition bands:   The spectrum is also broken into about\n 64 \"partition bands\".  Each partition\n band is about .34 barks wide.  There are about 2-5\n partition bands for each scalefactor band.\n\n LAME computes all psycho acoustic information for each partition\n band.  Then at the end of the computations, this information\n is mapped to scalefactor bands.  The energy in each scalefactor\n band is taken as the sum of the energy in all partition bands\n which overlap the scalefactor band.  The maskings can be computed\n in the same way (and thus represent the average masking in that band)\n or by taking the minmum value multiplied by the number of\n partition bands used (which represents a minimum masking in that band).\n */\n/*\n The general outline is as follows:\n\n 1. compute the energy in each partition band\n 2. compute the tonality in each partition band\n 3. compute the strength of each partion band \"masker\"\n 4. compute the masking (via the spreading function applied to each masker)\n 5. Modifications for mid/side masking.\n\n Each partition band is considiered a \"masker\".  The strength\n of the i'th masker in band j is given by:\n\n s3(bark(i)-bark(j))*strength(i)\n\n The strength of the masker is a function of the energy and tonality.\n The more tonal, the less masking.  LAME uses a simple linear formula\n (controlled by NMT and TMN) which says the strength is given by the\n energy divided by a linear function of the tonality.\n */\n/*\n s3() is the \"spreading function\".  It is given by a formula\n determined via listening tests.\n\n The total masking in the j'th partition band is the sum over\n all maskings i.  It is thus given by the convolution of\n the strength with s3(), the \"spreading function.\"\n\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\n\n where \"o\" = convolution operator.  s3 is given by a formula determined\n via listening tests.  It is normalized so that s3 o 1 = 1.\n\n Note: instead of a simple convolution, LAME also has the\n option of using \"additive masking\"\n\n The most critical part is step 2, computing the tonality of each\n partition band.  LAME has two tonality estimators.  The first\n is based on the ISO spec, and measures how predictiable the\n signal is over time.  The more predictable, the more tonal.\n The second measure is based on looking at the spectrum of\n a single granule.  The more peaky the spectrum, the more\n tonal.  By most indications, the latter approach is better.\n\n Finally, in step 5, the maskings for the mid and side\n channel are possibly increased.  Under certain circumstances,\n noise in the mid & side channels is assumed to also\n be masked by strong maskers in the L or R channels.\n\n\n Other data computed by the psy-model:\n\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\n\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\n much pre-echo is in the previous granule\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\n energy[4]             L,R,M,S energy in each channel, prev granule\n blocktype_d[2]        block type to use for previous granule\n */\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar FFT = require(\"./FFT.js\");\nvar Encoder = require(\"./Encoder.js\");\n\nfunction PsyModel() {\n\n    var fft = new FFT();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert(m1 >= 0);\n        assert(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder.BLKSIZE_s / Encoder.BLKSIZE);\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert(thr[b] >= 0);\n        }\n        for (; b <= Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype[chn] = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert(x > 0);\n                            pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert(x > 0);\n                        pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert(gfc.rnumlines_l[b] >= 0);\n            assert(ebb >= 0);\n            assert(eb[b] >= 0);\n            assert(max[b] >= 0);\n            assert(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float(Encoder.CBANDS + 1);\n        var eb_s = new_float(Encoder.CBANDS + 1);\n        var thr = new_float(Encoder.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int(2), uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int(Encoder.CBANDS + 2), mask_idx_s = new_int(Encoder.CBANDS + 2);\n\n        Arrays.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float(Encoder.HBLKSIZE);\n            var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert(gfc.npart_s <= Encoder.CBANDS);\n            assert(gfc.npart_l <= Encoder.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    }\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float(12);\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(b + 1 < gfc.npart_s);\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder.CBANDS], avg = new_float(Encoder.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert(ebb >= 0);\n            max[b] = m;\n            assert(n > 0);\n            avg[b] = ebb / n;\n            assert(avg[b] >= 0);\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (; b < Encoder.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n        var mask_idx_l = new_int(Encoder.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float(Encoder.HBLKSIZE);\n        var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n        var eb = new_float_n([4, Encoder.CBANDS]), thr = new_float_n([4, Encoder.CBANDS]);\n        var sub_short_factor = new_float_n([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    var new_thmm = new_float(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    }\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float(Encoder.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int(Encoder.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert(j < Encoder.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert(i < Encoder.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float(Encoder.CBANDS);\n        var bval_width = new_float(Encoder.CBANDS);\n        var norm = new_float(Encoder.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE\n            / (2.0 * 576), Encoder.SBMAX_l);\n        assert(gfc.npart_l < Encoder.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s\n            / (2.0 * 192), Encoder.SBMAX_s);\n        assert(gfc.npart_s < Encoder.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert(gfc.bo_l[Encoder.SBMAX_l - 1] <= gfc.npart_l);\n        assert(gfc.bo_s[Encoder.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    }\n\n}\n\nmodule.exports = PsyModel;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GrInfo = require('./GrInfo.js');\n\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int(4), new_int(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo();\n        }\n    }\n}\n\nmodule.exports = IIISideInfo;\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n","/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * Table entries per dB\n */\nGainAnalysis.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis.MAX_dB = 120.;\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis.YULE_ORDER = 10;\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\n\nGainAnalysis.MAX_SAMP_FREQ = 48000;\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    }\n\n}\n\nmodule.exports = GainAnalysis;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"page\"}},[_c('div',{attrs:{\"id\":\"header\"}},[_c('h1',[_vm._v(\" \"+_vm._s(_vm.$t(\"Suisei Remix Editor\"))+\" \"),_c('sup',[_vm._v(_vm._s(_vm.$t(\"experimental\")))])]),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.$t('long-editor-description'))}}),_c('div',{style:({\n        display: _vm.smallScreen === 1 ? 'none' : 'flex',\n        opacity: _vm.smallScreen === 2 ? 0 : 1\n      }),attrs:{\"id\":\"operations\"}},[_c('div',{staticClass:\"normalBtn\",on:{\"click\":_vm.playRemix}},[_vm._v(_vm._s(_vm.$t(\"Play\")))]),_c('div',{staticClass:\"normalBtn\",on:{\"click\":_vm.exportRemix}},[_vm._v(_vm._s(_vm.$t(\"Export\")))]),_c('div',{staticClass:\"normalBtn\",on:{\"click\":_vm.clearRemix}},[_vm._v(_vm._s(_vm.$t(\"Clear\")))])])]),_c('div',{style:({ display: _vm.smallScreen === 0 ? 'none' : 'block' }),attrs:{\"id\":\"smallScreen\"}},[_c('p',[_vm._v(\" \"+_vm._s(_vm.$t(\"Your device screen is too small to run this editor. Sorry~\"))+\" \")])]),_c('div',{style:({\n      display: _vm.smallScreen === 1 ? 'none' : 'block',\n      opacity: _vm.smallScreen === 2 ? 0 : 1\n    })},[_c('div',{ref:\"clips\",attrs:{\"id\":\"buttons\"}},[_vm._l((_vm.sounds),function(item,index){return [_c('BaseButton',{key:index,staticClass:\"item normalBtn\",attrs:{\"item\":item,\"noclickplay\":true,\"data-sound-id\":index}})]})],2),_c('div',{ref:\"editor\",attrs:{\"id\":\"editor\"}},[_vm._m(0)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"tracks\"}},[_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"1\"}}),_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"2\"}}),_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"3\"}}),_c('div',{staticClass:\"track\",attrs:{\"data-track-id\":\"4\"}})])}]\n\nexport { render, staticRenderFns }","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const encoder = require(\"audio-encoder\");\n\nasync function encoderWrapper(buf: AudioBuffer): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    try {\n      encoder(buf, 128, null, function onComplete(blob: Blob) {\n        resolve(blob);\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * ハッピーシンセサイザ (Happy Synthesizer)\n * This is the module used by EditorView to export the edits.\n */\nexport async function mergeAudio(srcs: SynthItem[]): Promise<string> {\n  const ctx = new OfflineAudioContext(2, 44100 * 5, 44100);\n  for (const i of srcs) {\n    console.log(`Fetching ${i.musicurl}`);\n    const arrayBuf = await fetch(i.musicurl)\n      .then(x => x.blob())\n      .then(x => x.arrayBuffer());\n    const audioBufSrc = ctx.createBufferSource();\n    const audioBuf = await ctx.decodeAudioData(arrayBuf).catch(err => {\n      console.log(`Error when decoding ${i.musicurl}:`, err);\n    });\n    if (!audioBuf) continue;\n    console.log(`Decoded ${i.musicurl} delaying`, audioBuf, i.delay);\n    audioBufSrc.buffer = audioBuf;\n    audioBufSrc.connect(ctx.destination);\n    audioBufSrc.start(i.delay);\n  }\n  console.log(\"Rendering...\");\n  const mergedAudioBuf = await ctx.startRendering();\n  const finalBlob = await encoderWrapper(mergedAudioBuf);\n  const url = URL.createObjectURL(finalBlob);\n  return url;\n}\n\nexport interface SynthItem {\n  musicurl: string;\n  delay: number;\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Sound } from \"../types\";\nimport BaseButton from \"../components/BaseButton.vue\";\nimport interact from \"interactjs\";\nimport { mergeAudio, SynthItem } from \"../components/HappySynthesizer\";\nimport { setLanguage } from \"../components/setLanguage\";\n\nlet editorElements: {\n  [key: string]: {\n    id: number;\n    location: number;\n  };\n} = {};\n\n(window as any).editorElements = editorElements;\n\nfunction getXLocation(target: HTMLElement) {\n  return (\n    target.offsetLeft +\n    Number(target.getAttribute(\"data-x\") || -1 * target.offsetLeft)\n  );\n}\n\nfunction updateElementPos(target: HTMLElement, dx: number, dy: number) {\n  const x = (parseFloat(target.getAttribute(\"data-x\") || \"\") || 0) + dx;\n  const y = (parseFloat(target.getAttribute(\"data-y\") || \"\") || 0) + dy;\n  target.style.webkitTransform = target.style.transform =\n    \"translate(\" + x + \"px, \" + y + \"px)\";\n  target.setAttribute(\"data-x\", String(x));\n  target.setAttribute(\"data-y\", String(y));\n}\n\nfunction moveHandler(event: any) {\n  const target = event.target;\n  updateElementPos(target, event.dx, event.dy);\n\n  // Update value\n  const seq = Number(target.getAttribute(\"data-seq-id\"));\n  if (!editorElements[seq]) return;\n  const location = getXLocation(target);\n  editorElements[seq].location = location;\n}\n\n@Component({\n  components: {\n    BaseButton\n  }\n})\nexport default class App extends Vue {\n  private sounds: Sound[] = [];\n  private smallScreen = 0;\n  private timelineLength = 3;\n\n  private async loadVoice() {\n    const soundNotExpanded = (await fetch(\"/sounds.json\")\n      .then(x => x.json())\n      .catch(() => {\n        // tslint:disable-next-line:no-console\n        console.error(\"Sound data fetch error. Exiting.\");\n      })) as Sound[];\n    for (const i of soundNotExpanded) {\n      if (typeof i.file === \"string\") {\n        // Single voice, go on\n        this.sounds.push(i);\n      } else {\n        // Array of voices\n        for (let idx = 0; idx < i.file.length; idx++) {\n          const name_l10n = { ...i.name_l10n };\n          for (const lang in name_l10n) {\n            name_l10n[lang] += ` (${idx + 1})`;\n          }\n          const singleSound = Object.assign({}, i, {\n            name: `${i.name} (${idx + 1})`,\n            name_l10n,\n            file: i.file[idx]\n          });\n          this.sounds.push(singleSound);\n        }\n      }\n    }\n  }\n\n  private validateDisplay() {\n    if (window.innerHeight > 600) {\n      this.smallScreen = 0;\n      return;\n    }\n    this.smallScreen = 2;\n    const editorBottom =\n      (this.$refs.editor as HTMLElement).offsetHeight +\n      (this.$refs.editor as HTMLElement).offsetTop;\n    if (window.innerHeight < editorBottom) {\n      this.smallScreen = 1;\n    } else {\n      if (editorBottom !== 0) {\n        this.smallScreen = 0;\n      }\n    }\n  }\n\n  private async mounted() {\n    await this.loadVoice();\n    setLanguage(window, navigator, this);\n    this.validateDisplay();\n    window.addEventListener(\"resize\", this.validateDisplay);\n    this.initDrag();\n  }\n\n  private initDrag() {\n    const buttonsOffsetLeft = (this.$refs.clips as HTMLElement).offsetLeft;\n    const buttonsOffsetTop = (this.$refs.clips as HTMLElement).offsetTop;\n    const that = this;\n    interact(\".item\").draggable({\n      inertia: false,\n      modifiers: [\n        interact.modifiers.restrictRect({\n          restriction: document.getElementById(\"page\") as HTMLElement,\n          endOnly: true\n        })\n      ],\n      listeners: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        move: function(event: any) {\n          moveHandler(event);\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        end: function(event: any) {\n          moveHandler(event);\n          const target: HTMLElement = event.target;\n          if (!target.getAttribute(\"data-seq-id\")) {\n            // Revert button location\n            if (target.getAttribute(\"data-in-track\")) {\n              (that.$refs.clips as HTMLElement).removeChild(target);\n            } else {\n              target.style.webkitTransform = target.style.transform = \"\";\n              target.removeAttribute(\"data-x\");\n              target.removeAttribute(\"data-y\");\n            }\n          } else {\n            // Append the same button\n            if (!target.getAttribute(\"data-in-track\")) {\n              const newNode = target.cloneNode(true);\n              (newNode as HTMLElement).style.webkitTransform = (newNode as HTMLElement).style.transform =\n                \"\";\n              (newNode as HTMLElement).removeAttribute(\"data-x\");\n              (newNode as HTMLElement).removeAttribute(\"data-y\");\n              (newNode as HTMLElement).removeAttribute(\"data-seq-id\");\n              (newNode as HTMLElement).removeAttribute(\"data-in-track\");\n              (that.$refs.clips as HTMLElement).appendChild(newNode);\n              target.setAttribute(\"data-in-track\", \"1\");\n\n              updateElementPos(\n                target,\n                target.offsetLeft - buttonsOffsetLeft - 12,\n                target.offsetTop - buttonsOffsetTop - 12\n              );\n              target.style.position = \"absolute\";\n            }\n          }\n        }\n      }\n    });\n    interact(\".track\").dropzone({\n      accept: \".item\",\n      ondragenter: function(event) {\n        const target: HTMLElement = event.relatedTarget;\n        let seqId = target.getAttribute(\"data-seq-id\");\n        if (seqId) return;\n        seqId = String(Math.random());\n        target.setAttribute(\"data-seq-id\", seqId);\n        editorElements[seqId] = {\n          id: Number(target.getAttribute(\"data-sound-id\")),\n          location: -1\n        };\n      },\n      ondragleave: function(event) {\n        const target: HTMLElement = event.relatedTarget;\n        const seqId = target.getAttribute(\"data-seq-id\");\n        if (seqId) {\n          editorElements[seqId] && delete editorElements[seqId];\n          target.removeAttribute(\"data-seq-id\");\n        }\n      }\n    });\n  }\n\n  private playRemix() {\n    const tracks = document.getElementsByClassName(\"track\");\n    if (!tracks) return;\n    const track = tracks[0];\n    const ratio =\n      Number((track as HTMLElement).offsetWidth) / this.timelineLength;\n    const preparedSounds: { [key: string]: HTMLAudioElement } = {};\n    for (const [key, i] of Object.entries(editorElements)) {\n      if (i.id < 0) continue;\n      const id = i.id;\n      const sound = preparedSounds[key];\n      if (sound) continue;\n      const audioFilename = this.sounds[id].file;\n      const audio = new Audio(`assets/${audioFilename}`);\n      audio.preload = \"auto\";\n      preparedSounds[key] = audio;\n    }\n    for (const [key, i] of Object.entries(editorElements)) {\n      if (i.id < 0 || i.location < 0) continue;\n      setTimeout(() => {\n        preparedSounds[key].play();\n      }, (i.location / ratio) * 1000);\n    }\n  }\n\n  private clearRemix() {\n    for (const item of document.querySelectorAll(\".item[data-seq-id]\")) {\n      (this.$refs.clips as HTMLElement).removeChild(item);\n    }\n    editorElements = {};\n  }\n\n  private async exportRemix() {\n    const tracks = document.getElementsByClassName(\"track\");\n    if (!tracks) return;\n    const track = tracks[0];\n    const clips: SynthItem[] = [];\n    const ratio =\n      Number((track as HTMLElement).offsetWidth) / this.timelineLength;\n    for (const i of Object.values(editorElements)) {\n      clips.push({\n        musicurl: `assets/${this.sounds[i.id].file}`,\n        delay: i.location / ratio\n      });\n    }\n    const url = await mergeAudio(clips);\n    const fileLink = document.createElement(\"a\");\n    fileLink.href = url;\n    fileLink.download = \"output.mp3\";\n    fileLink.click();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./EditorView.vue?vue&type=template&id=5f8211e8&scoped=true&\"\nimport script from \"./EditorView.vue?vue&type=script&lang=ts&\"\nexport * from \"./EditorView.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./EditorView.vue?vue&type=style&index=0&id=5f8211e8&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f8211e8\",\n  null\n  \n)\n\nexport default component.exports","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction Presets() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    }\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nmodule.exports = Presets;\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar MeanBits = require('./MeanBits.js');\nvar Encoder = require('./Encoder.js');\nvar L3Side = require('./L3Side.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float(L3Side.SFBMAX);\n\t\tvar xrpow = new_float(576);\n\t\tvar targ_bits = new_int(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert (cod_info.part2_3_length <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t}\n}\nmodule.exports = CBRNewIterationLoop;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder.MDCTDELAY = 48;\nEncoder.FFTOFFSET = (224 + Encoder.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder.SBPSY_l = 21;\nEncoder.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder.SBMAX_l = 22;\nEncoder.SBMAX_s = 13;\nEncoder.PSFB21 = 6;\nEncoder.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder.BLKSIZE = 1024;\nEncoder.HBLKSIZE = (Encoder.BLKSIZE / 2 + 1);\nEncoder.BLKSIZE_s = 256;\nEncoder.HBLKSIZE_s = (Encoder.BLKSIZE_s / 2 + 1);\n\nEncoder.NORM_TYPE = 0;\nEncoder.START_TYPE = 1;\nEncoder.SHORT_TYPE = 2;\nEncoder.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder.MPG_MD_LR_LR = 0;\nEncoder.MPG_MD_LR_I = 1;\nEncoder.MPG_MD_MS_LR = 2;\nEncoder.MPG_MD_MS_I = 3;\n\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder() {\n    var NewMDCT = require('./NewMDCT.js');\n    var III_psy_ratio = require('./III_psy_ratio.js');\n\n    var FFTOFFSET = Encoder.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float(286 + 1152 + 576);\n            var primebuff1 = new_float(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert(576 >= Encoder.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert(gfc.mf_size >= (Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    }\n}\n\n\nmodule.exports = Encoder;\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","/* interact.js 1.9.19 | https://raw.github.com/taye/interact.js/master/LICENSE */\n!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).interact=t()}}((function(){var t={};Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;t.default=function(t){return!(!t||!t.Window)&&t instanceof t.Window};var e={};Object.defineProperty(e,\"__esModule\",{value:!0}),e.init=r,e.getWindow=o,e.default=void 0;var n={realWindow:void 0,window:void 0,getWindow:o,init:r};function r(t){n.realWindow=t;var e=t.document.createTextNode(\"\");e.ownerDocument!==t.document&&\"function\"==typeof t.wrap&&t.wrap(e)===e&&(t=t.wrap(t)),n.window=t}function o(e){return(0,t.default)(e)?e:(e.ownerDocument||e).defaultView||n.window}\"undefined\"==typeof window?(n.window=void 0,n.realWindow=void 0):r(window),n.init=r;var i=n;e.default=i;var a={};function s(t){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(a,\"__esModule\",{value:!0}),a.default=void 0;var l=function(t){return!!t&&\"object\"===s(t)},u=function(t){return\"function\"==typeof t},c={window:function(n){return n===e.default.window||(0,t.default)(n)},docFrag:function(t){return l(t)&&11===t.nodeType},object:l,func:u,number:function(t){return\"number\"==typeof t},bool:function(t){return\"boolean\"==typeof t},string:function(t){return\"string\"==typeof t},element:function(t){if(!t||\"object\"!==s(t))return!1;var n=e.default.getWindow(t)||e.default.window;return/object|function/.test(s(n.Element))?t instanceof n.Element:1===t.nodeType&&\"string\"==typeof t.nodeName},plainObject:function(t){return l(t)&&!!t.constructor&&/function Object\\b/.test(t.constructor.toString())},array:function(t){return l(t)&&void 0!==t.length&&u(t.splice)}};a.default=c;var f={};function d(t){var e=t.interaction;if(\"drag\"===e.prepared.name){var n=e.prepared.axis;\"x\"===n?(e.coords.cur.page.y=e.coords.start.page.y,e.coords.cur.client.y=e.coords.start.client.y,e.coords.velocity.client.y=0,e.coords.velocity.page.y=0):\"y\"===n&&(e.coords.cur.page.x=e.coords.start.page.x,e.coords.cur.client.x=e.coords.start.client.x,e.coords.velocity.client.x=0,e.coords.velocity.page.x=0)}}function p(t){var e=t.iEvent,n=t.interaction;if(\"drag\"===n.prepared.name){var r=n.prepared.axis;if(\"x\"===r||\"y\"===r){var o=\"x\"===r?\"y\":\"x\";e.page[o]=n.coords.start.page[o],e.client[o]=n.coords.start.client[o],e.delta[o]=0}}}Object.defineProperty(f,\"__esModule\",{value:!0}),f.default=void 0;var v={id:\"actions/drag\",install:function(t){var e=t.actions,n=t.Interactable,r=t.defaults;n.prototype.draggable=v.draggable,e.map.drag=v,e.methodDict.drag=\"draggable\",r.actions.drag=v.defaults},listeners:{\"interactions:before-action-move\":d,\"interactions:action-resume\":d,\"interactions:action-move\":p,\"auto-start:check\":function(t){var e=t.interaction,n=t.interactable,r=t.buttons,o=n.options.drag;if(o&&o.enabled&&(!e.pointerIsDown||!/mouse|pointer/.test(e.pointerType)||0!=(r&n.options.drag.mouseButtons)))return t.action={name:\"drag\",axis:\"start\"===o.lockAxis?o.startAxis:o.lockAxis},!1}},draggable:function(t){return a.default.object(t)?(this.options.drag.enabled=!1!==t.enabled,this.setPerAction(\"drag\",t),this.setOnEvents(\"drag\",t),/^(xy|x|y|start)$/.test(t.lockAxis)&&(this.options.drag.lockAxis=t.lockAxis),/^(xy|x|y)$/.test(t.startAxis)&&(this.options.drag.startAxis=t.startAxis),this):a.default.bool(t)?(this.options.drag.enabled=t,this):this.options.drag},beforeMove:d,move:p,defaults:{startAxis:\"xy\",lockAxis:\"xy\"},getCursor:function(){return\"move\"}},h=v;f.default=h;var g={};Object.defineProperty(g,\"__esModule\",{value:!0}),g.default=void 0;var y={init:function(t){var e=t;y.document=e.document,y.DocumentFragment=e.DocumentFragment||m,y.SVGElement=e.SVGElement||m,y.SVGSVGElement=e.SVGSVGElement||m,y.SVGElementInstance=e.SVGElementInstance||m,y.Element=e.Element||m,y.HTMLElement=e.HTMLElement||y.Element,y.Event=e.Event,y.Touch=e.Touch||m,y.PointerEvent=e.PointerEvent||e.MSPointerEvent},document:null,DocumentFragment:null,SVGElement:null,SVGSVGElement:null,SVGElementInstance:null,Element:null,HTMLElement:null,Event:null,Touch:null,PointerEvent:null};function m(){}var b=y;g.default=b;var x={};Object.defineProperty(x,\"__esModule\",{value:!0}),x.default=void 0;var w={init:function(t){var n=g.default.Element,r=e.default.window.navigator;w.supportsTouch=\"ontouchstart\"in t||a.default.func(t.DocumentTouch)&&g.default.document instanceof t.DocumentTouch,w.supportsPointerEvent=!1!==r.pointerEnabled&&!!g.default.PointerEvent,w.isIOS=/iP(hone|od|ad)/.test(r.platform),w.isIOS7=/iP(hone|od|ad)/.test(r.platform)&&/OS 7[^\\d]/.test(r.appVersion),w.isIe9=/MSIE 9/.test(r.userAgent),w.isOperaMobile=\"Opera\"===r.appName&&w.supportsTouch&&/Presto/.test(r.userAgent),w.prefixedMatchesSelector=\"matches\"in n.prototype?\"matches\":\"webkitMatchesSelector\"in n.prototype?\"webkitMatchesSelector\":\"mozMatchesSelector\"in n.prototype?\"mozMatchesSelector\":\"oMatchesSelector\"in n.prototype?\"oMatchesSelector\":\"msMatchesSelector\",w.pEventTypes=w.supportsPointerEvent?g.default.PointerEvent===t.MSPointerEvent?{up:\"MSPointerUp\",down:\"MSPointerDown\",over:\"mouseover\",out:\"mouseout\",move:\"MSPointerMove\",cancel:\"MSPointerCancel\"}:{up:\"pointerup\",down:\"pointerdown\",over:\"pointerover\",out:\"pointerout\",move:\"pointermove\",cancel:\"pointercancel\"}:null,w.wheelEvent=\"onmousewheel\"in g.default.document?\"mousewheel\":\"wheel\"},supportsTouch:null,supportsPointerEvent:null,isIOS7:null,isIOS:null,isIe9:null,isOperaMobile:null,prefixedMatchesSelector:null,pEventTypes:null,wheelEvent:null};var _=w;x.default=_;var S={};function P(t){var e=t.parentNode;if(a.default.docFrag(e)){for(;(e=e.host)&&a.default.docFrag(e););return e}return e}function O(t,n){return e.default.window!==e.default.realWindow&&(n=n.replace(/\\/deep\\//g,\" \")),t[x.default.prefixedMatchesSelector](n)}Object.defineProperty(S,\"__esModule\",{value:!0}),S.nodeContains=function(t,e){for(;e;){if(e===t)return!0;e=e.parentNode}return!1},S.closest=function(t,e){for(;a.default.element(t);){if(O(t,e))return t;t=P(t)}return null},S.parentNode=P,S.matchesSelector=O,S.indexOfDeepestElement=function(t){for(var n,r=[],o=0;o<t.length;o++){var i=t[o],a=t[n];if(i&&o!==n)if(a){var s=E(i),l=E(a);if(s!==i.ownerDocument)if(l!==i.ownerDocument)if(s!==l){r=r.length?r:T(a);var u=void 0;if(a instanceof g.default.HTMLElement&&i instanceof g.default.SVGElement&&!(i instanceof g.default.SVGSVGElement)){if(i===l)continue;u=i.ownerSVGElement}else u=i;for(var c=T(u,a.ownerDocument),f=0;c[f]&&c[f]===r[f];)f++;for(var d=[c[f-1],c[f],r[f]],p=d[0].lastChild;p;){if(p===d[1]){n=o,r=c;break}if(p===d[2])break;p=p.previousSibling}}else v=i,h=a,y=void 0,m=void 0,y=parseInt((0,e.getWindow)(v).getComputedStyle(v).zIndex,10)||0,m=parseInt((0,e.getWindow)(h).getComputedStyle(h).zIndex,10)||0,y>=m&&(n=o);else n=o}else n=o}var v,h,y,m;return n},S.matchesUpTo=function(t,e,n){for(;a.default.element(t);){if(O(t,e))return!0;if((t=P(t))===n)return O(t,e)}return!1},S.getActualElement=function(t){return t instanceof g.default.SVGElementInstance?t.correspondingUseElement:t},S.getScrollXY=M,S.getElementClientRect=j,S.getElementRect=function(t){var n=j(t);if(!x.default.isIOS7&&n){var r=M(e.default.getWindow(t));n.left+=r.x,n.right+=r.x,n.top+=r.y,n.bottom+=r.y}return n},S.getPath=function(t){var e=[];for(;t;)e.push(t),t=P(t);return e},S.trySelector=function(t){if(!a.default.string(t))return!1;return g.default.document.querySelector(t),!0};var E=function(t){return t.parentNode||t.host};function T(t,e){for(var n,r=[],o=t;(n=E(o))&&o!==e&&n!==o.ownerDocument;)r.unshift(o),o=n;return r}function M(t){return{x:(t=t||e.default.window).scrollX||t.document.documentElement.scrollLeft,y:t.scrollY||t.document.documentElement.scrollTop}}function j(t){var e=t instanceof g.default.SVGElement?t.getBoundingClientRect():t.getClientRects()[0];return e&&{left:e.left,right:e.right,top:e.top,bottom:e.bottom,width:e.width||e.right-e.left,height:e.height||e.bottom-e.top}}var k={};Object.defineProperty(k,\"__esModule\",{value:!0}),k.default=function(t,e){for(var n in e)t[n]=e[n];return t};var I={};function D(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function A(t,e,n){return\"parent\"===t?(0,S.parentNode)(n):\"self\"===t?e.getRect(n):(0,S.closest)(n,t)}Object.defineProperty(I,\"__esModule\",{value:!0}),I.getStringOptionResult=A,I.resolveRectLike=function(t,e,n,r){var o=t;a.default.string(o)?o=A(o,e,n):a.default.func(o)&&(o=o.apply(void 0,function(t){if(Array.isArray(t))return D(t)}(i=r)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(i)||function(t,e){if(t){if(\"string\"==typeof t)return D(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?D(t,e):void 0}}(i)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()));var i;a.default.element(o)&&(o=(0,S.getElementRect)(o));return o},I.rectToXY=function(t){return t&&{x:\"x\"in t?t.x:t.left,y:\"y\"in t?t.y:t.top}},I.xywhToTlbr=function(t){!t||\"left\"in t&&\"top\"in t||((t=(0,k.default)({},t)).left=t.x||0,t.top=t.y||0,t.right=t.right||t.left+t.width,t.bottom=t.bottom||t.top+t.height);return t},I.tlbrToXywh=function(t){!t||\"x\"in t&&\"y\"in t||((t=(0,k.default)({},t)).x=t.left||0,t.y=t.top||0,t.width=t.width||(t.right||0)-t.x,t.height=t.height||(t.bottom||0)-t.y);return t},I.addEdges=function(t,e,n){t.left&&(e.left+=n.x);t.right&&(e.right+=n.x);t.top&&(e.top+=n.y);t.bottom&&(e.bottom+=n.y);e.width=e.right-e.left,e.height=e.bottom-e.top};var z={};Object.defineProperty(z,\"__esModule\",{value:!0}),z.default=function(t,e,n){var r=t.options[n],o=r&&r.origin||t.options.origin,i=(0,I.resolveRectLike)(o,t,e,[t&&e]);return(0,I.rectToXY)(i)||{x:0,y:0}};var C={};function R(t){return t.trim().split(/ +/)}Object.defineProperty(C,\"__esModule\",{value:!0}),C.default=function t(e,n,r){r=r||{},a.default.string(e)&&-1!==e.search(\" \")&&(e=R(e));if(a.default.array(e))return e.reduce((function(e,o){return(0,k.default)(e,t(o,n,r))}),r);a.default.object(e)&&(n=e,e=\"\");if(a.default.func(n))r[e]=r[e]||[],r[e].push(n);else if(a.default.array(n))for(var o=0;o<n.length;o++){var i;i=n[o],t(e,i,r)}else if(a.default.object(n))for(var s in n){var l=R(s).map((function(t){return\"\".concat(e).concat(t)}));t(l,n[s],r)}return r};var F={};Object.defineProperty(F,\"__esModule\",{value:!0}),F.default=void 0;F.default=function(t,e){return Math.sqrt(t*t+e*e)};var X={};function Y(t,e){for(var n in e){var r=Y.prefixedPropREs,o=!1;for(var i in r)if(0===n.indexOf(i)&&r[i].test(n)){o=!0;break}o||\"function\"==typeof e[n]||(t[n]=e[n])}return t}Object.defineProperty(X,\"__esModule\",{value:!0}),X.default=void 0,Y.prefixedPropREs={webkit:/(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,moz:/(Pressure)$/};var W=Y;X.default=W;var L={};function B(t){return t instanceof g.default.Event||t instanceof g.default.Touch}function U(t,e,n){return t=t||\"page\",(n=n||{}).x=e[t+\"X\"],n.y=e[t+\"Y\"],n}function V(t,e){return e=e||{x:0,y:0},x.default.isOperaMobile&&B(t)?(U(\"screen\",t,e),e.x+=window.scrollX,e.y+=window.scrollY):U(\"page\",t,e),e}function q(t,e){return e=e||{},x.default.isOperaMobile&&B(t)?U(\"screen\",t,e):U(\"client\",t,e),e}function N(t){var e=[];return a.default.array(t)?(e[0]=t[0],e[1]=t[1]):\"touchend\"===t.type?1===t.touches.length?(e[0]=t.touches[0],e[1]=t.changedTouches[0]):0===t.touches.length&&(e[0]=t.changedTouches[0],e[1]=t.changedTouches[1]):(e[0]=t.touches[0],e[1]=t.touches[1]),e}function G(t){for(var e={pageX:0,pageY:0,clientX:0,clientY:0,screenX:0,screenY:0},n=0;n<t.length;n++){var r=t[n];for(var o in e)e[o]+=r[o]}for(var i in e)e[i]/=t.length;return e}Object.defineProperty(L,\"__esModule\",{value:!0}),L.copyCoords=function(t,e){t.page=t.page||{},t.page.x=e.page.x,t.page.y=e.page.y,t.client=t.client||{},t.client.x=e.client.x,t.client.y=e.client.y,t.timeStamp=e.timeStamp},L.setCoordDeltas=function(t,e,n){t.page.x=n.page.x-e.page.x,t.page.y=n.page.y-e.page.y,t.client.x=n.client.x-e.client.x,t.client.y=n.client.y-e.client.y,t.timeStamp=n.timeStamp-e.timeStamp},L.setCoordVelocity=function(t,e){var n=Math.max(e.timeStamp/1e3,.001);t.page.x=e.page.x/n,t.page.y=e.page.y/n,t.client.x=e.client.x/n,t.client.y=e.client.y/n,t.timeStamp=n},L.setZeroCoords=function(t){t.page.x=0,t.page.y=0,t.client.x=0,t.client.y=0},L.isNativePointer=B,L.getXY=U,L.getPageXY=V,L.getClientXY=q,L.getPointerId=function(t){return a.default.number(t.pointerId)?t.pointerId:t.identifier},L.setCoords=function(t,e,n){var r=e.length>1?G(e):e[0],o={};V(r,o),t.page.x=o.x,t.page.y=o.y,q(r,o),t.client.x=o.x,t.client.y=o.y,t.timeStamp=n},L.getTouchPair=N,L.pointerAverage=G,L.touchBBox=function(t){if(!(t.length||t.touches&&t.touches.length>1))return null;var e=N(t),n=Math.min(e[0].pageX,e[1].pageX),r=Math.min(e[0].pageY,e[1].pageY),o=Math.max(e[0].pageX,e[1].pageX),i=Math.max(e[0].pageY,e[1].pageY);return{x:n,y:r,left:n,top:r,right:o,bottom:i,width:o-n,height:i-r}},L.touchDistance=function(t,e){var n=e+\"X\",r=e+\"Y\",o=N(t),i=o[0][n]-o[1][n],a=o[0][r]-o[1][r];return(0,F.default)(i,a)},L.touchAngle=function(t,e){var n=e+\"X\",r=e+\"Y\",o=N(t),i=o[1][n]-o[0][n],a=o[1][r]-o[0][r];return 180*Math.atan2(a,i)/Math.PI},L.getPointerType=function(t){return a.default.string(t.pointerType)?t.pointerType:a.default.number(t.pointerType)?[void 0,void 0,\"touch\",\"pen\",\"mouse\"][t.pointerType]:/touch/.test(t.type)||t instanceof g.default.Touch?\"touch\":\"mouse\"},L.getEventTargets=function(t){var e=a.default.func(t.composedPath)?t.composedPath():t.path;return[S.getActualElement(e?e[0]:t.target),S.getActualElement(t.currentTarget)]},L.newCoords=function(){return{page:{x:0,y:0},client:{x:0,y:0},timeStamp:0}},L.coordsToEvent=function(t){return{coords:t,get page(){return this.coords.page},get client(){return this.coords.client},get timeStamp(){return this.coords.timeStamp},get pageX(){return this.coords.page.x},get pageY(){return this.coords.page.y},get clientX(){return this.coords.client.x},get clientY(){return this.coords.client.y},get pointerId(){return this.coords.pointerId},get target(){return this.coords.target},get type(){return this.coords.type},get pointerType(){return this.coords.pointerType},get buttons(){return this.coords.buttons},preventDefault:function(){}}},Object.defineProperty(L,\"pointerExtend\",{enumerable:!0,get:function(){return X.default}});var $={};function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}Object.defineProperty($,\"__esModule\",{value:!0}),$.default=$.BaseEvent=void 0;var K=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.type=void 0,this.target=void 0,this.currentTarget=void 0,this.interactable=void 0,this._interaction=void 0,this.timeStamp=void 0,this.immediatePropagationStopped=!1,this.propagationStopped=!1,this._interaction=e}var e,n,r;return e=t,(n=[{key:\"preventDefault\",value:function(){}},{key:\"stopPropagation\",value:function(){this.propagationStopped=!0}},{key:\"stopImmediatePropagation\",value:function(){this.immediatePropagationStopped=this.propagationStopped=!0}}])&&H(e.prototype,n),r&&H(e,r),t}();$.BaseEvent=K,Object.defineProperty(K.prototype,\"interaction\",{get:function(){return this._interaction._proxy},set:function(){}});var Z=K;$.default=Z;var J={};Object.defineProperty(J,\"__esModule\",{value:!0}),J.find=J.findIndex=J.from=J.merge=J.remove=J.contains=void 0;J.contains=function(t,e){return-1!==t.indexOf(e)};J.remove=function(t,e){return t.splice(t.indexOf(e),1)};var Q=function(t,e){for(var n=0;n<e.length;n++){var r=e[n];t.push(r)}return t};J.merge=Q;J.from=function(t){return Q([],t)};var tt=function(t,e){for(var n=0;n<t.length;n++)if(e(t[n],n,t))return n;return-1};J.findIndex=tt;J.find=function(t,e){return t[tt(t,e)]};var et={};function nt(t){return(nt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function rt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ot(t,e){return(ot=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function it(t){var e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=st(t);if(e){var o=st(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return at(this,n)}}function at(t,e){return!e||\"object\"!==nt(e)&&\"function\"!=typeof e?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):e}function st(t){return(st=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperty(et,\"__esModule\",{value:!0}),et.DropEvent=void 0;var lt=function(t){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ot(t,e)}(i,t);var e,n,r,o=it(i);function i(t,e,n){var r;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(r=o.call(this,e._interaction)).target=void 0,r.dropzone=void 0,r.dragEvent=void 0,r.relatedTarget=void 0,r.draggable=void 0,r.timeStamp=void 0,r.propagationStopped=!1,r.immediatePropagationStopped=!1;var a=\"dragleave\"===n?t.prev:t.cur,s=a.element,l=a.dropzone;return r.type=n,r.target=s,r.currentTarget=s,r.dropzone=l,r.dragEvent=e,r.relatedTarget=e.target,r.draggable=e.interactable,r.timeStamp=e.timeStamp,r}return e=i,(n=[{key:\"reject\",value:function(){var t=this,e=this._interaction.dropState;if(\"dropactivate\"===this.type||this.dropzone&&e.cur.dropzone===this.dropzone&&e.cur.element===this.target)if(e.prev.dropzone=this.dropzone,e.prev.element=this.target,e.rejected=!0,e.events.enter=null,this.stopImmediatePropagation(),\"dropactivate\"===this.type){var n=e.activeDrops,r=J.findIndex(n,(function(e){var n=e.dropzone,r=e.element;return n===t.dropzone&&r===t.target}));e.activeDrops.splice(r,1);var o=new i(e,this.dragEvent,\"dropdeactivate\");o.dropzone=this.dropzone,o.target=this.target,this.dropzone.fire(o)}else this.dropzone.fire(new i(e,this.dragEvent,\"dragleave\"))}},{key:\"preventDefault\",value:function(){}},{key:\"stopPropagation\",value:function(){this.propagationStopped=!0}},{key:\"stopImmediatePropagation\",value:function(){this.immediatePropagationStopped=this.propagationStopped=!0}}])&&rt(e.prototype,n),r&&rt(e,r),i}($.BaseEvent);et.DropEvent=lt;var ut={};function ct(t,e){for(var n=0;n<t.slice().length;n++){var r=t.slice()[n],o=r.dropzone,i=r.element;e.dropzone=o,e.target=i,o.fire(e),e.propagationStopped=e.immediatePropagationStopped=!1}}function ft(t,e){for(var n=function(t,e){for(var n=t.interactables,r=[],o=0;o<n.list.length;o++){var i=n.list[o];if(i.options.drop.enabled){var s=i.options.drop.accept;if(!(a.default.element(s)&&s!==e||a.default.string(s)&&!S.matchesSelector(e,s)||a.default.func(s)&&!s({dropzone:i,draggableElement:e})))for(var l=a.default.string(i.target)?i._context.querySelectorAll(i.target):a.default.array(i.target)?i.target:[i.target],u=0;u<l.length;u++){var c=l[u];c!==e&&r.push({dropzone:i,element:c})}}}return r}(t,e),r=0;r<n.length;r++){var o=n[r];o.rect=o.dropzone.getRect(o.element)}return n}function dt(t,e,n){for(var r=t.dropState,o=t.interactable,i=t.element,a=[],s=0;s<r.activeDrops.length;s++){var l=r.activeDrops[s],u=l.dropzone,c=l.element,f=l.rect;a.push(u.dropCheck(e,n,o,i,c,f)?c:null)}var d=S.indexOfDeepestElement(a);return r.activeDrops[d]||null}function pt(t,e,n){var r=t.dropState,o={enter:null,leave:null,activate:null,deactivate:null,move:null,drop:null};return\"dragstart\"===n.type&&(o.activate=new et.DropEvent(r,n,\"dropactivate\"),o.activate.target=null,o.activate.dropzone=null),\"dragend\"===n.type&&(o.deactivate=new et.DropEvent(r,n,\"dropdeactivate\"),o.deactivate.target=null,o.deactivate.dropzone=null),r.rejected||(r.cur.element!==r.prev.element&&(r.prev.dropzone&&(o.leave=new et.DropEvent(r,n,\"dragleave\"),n.dragLeave=o.leave.target=r.prev.element,n.prevDropzone=o.leave.dropzone=r.prev.dropzone),r.cur.dropzone&&(o.enter=new et.DropEvent(r,n,\"dragenter\"),n.dragEnter=r.cur.element,n.dropzone=r.cur.dropzone)),\"dragend\"===n.type&&r.cur.dropzone&&(o.drop=new et.DropEvent(r,n,\"drop\"),n.dropzone=r.cur.dropzone,n.relatedTarget=r.cur.element),\"dragmove\"===n.type&&r.cur.dropzone&&(o.move=new et.DropEvent(r,n,\"dropmove\"),o.move.dragmove=n,n.dropzone=r.cur.dropzone)),o}function vt(t,e){var n=t.dropState,r=n.activeDrops,o=n.cur,i=n.prev;e.leave&&i.dropzone.fire(e.leave),e.move&&o.dropzone.fire(e.move),e.enter&&o.dropzone.fire(e.enter),e.drop&&o.dropzone.fire(e.drop),e.deactivate&&ct(r,e.deactivate),n.prev.dropzone=o.dropzone,n.prev.element=o.element}function ht(t,e){var n=t.interaction,r=t.iEvent,o=t.event;if(\"dragmove\"===r.type||\"dragend\"===r.type){var i=n.dropState;e.dynamicDrop&&(i.activeDrops=ft(e,n.element));var a=r,s=dt(n,a,o);i.rejected=i.rejected&&!!s&&s.dropzone===i.cur.dropzone&&s.element===i.cur.element,i.cur.dropzone=s&&s.dropzone,i.cur.element=s&&s.element,i.events=pt(n,0,a)}}Object.defineProperty(ut,\"__esModule\",{value:!0}),ut.default=void 0;var gt={id:\"actions/drop\",install:function(t){var e=t.actions,n=t.interactStatic,r=t.Interactable,o=t.defaults;t.usePlugin(f.default),r.prototype.dropzone=function(t){return function(t,e){if(a.default.object(e)){if(t.options.drop.enabled=!1!==e.enabled,e.listeners){var n=(0,C.default)(e.listeners),r=Object.keys(n).reduce((function(t,e){return t[/^(enter|leave)/.test(e)?\"drag\".concat(e):/^(activate|deactivate|move)/.test(e)?\"drop\".concat(e):e]=n[e],t}),{});t.off(t.options.drop.listeners),t.on(r),t.options.drop.listeners=r}return a.default.func(e.ondrop)&&t.on(\"drop\",e.ondrop),a.default.func(e.ondropactivate)&&t.on(\"dropactivate\",e.ondropactivate),a.default.func(e.ondropdeactivate)&&t.on(\"dropdeactivate\",e.ondropdeactivate),a.default.func(e.ondragenter)&&t.on(\"dragenter\",e.ondragenter),a.default.func(e.ondragleave)&&t.on(\"dragleave\",e.ondragleave),a.default.func(e.ondropmove)&&t.on(\"dropmove\",e.ondropmove),/^(pointer|center)$/.test(e.overlap)?t.options.drop.overlap=e.overlap:a.default.number(e.overlap)&&(t.options.drop.overlap=Math.max(Math.min(1,e.overlap),0)),\"accept\"in e&&(t.options.drop.accept=e.accept),\"checker\"in e&&(t.options.drop.checker=e.checker),t}if(a.default.bool(e))return t.options.drop.enabled=e,t;return t.options.drop}(this,t)},r.prototype.dropCheck=function(t,e,n,r,o,i){return function(t,e,n,r,o,i,s){var l=!1;if(!(s=s||t.getRect(i)))return!!t.options.drop.checker&&t.options.drop.checker(e,n,l,t,i,r,o);var u=t.options.drop.overlap;if(\"pointer\"===u){var c=(0,z.default)(r,o,\"drag\"),f=L.getPageXY(e);f.x+=c.x,f.y+=c.y;var d=f.x>s.left&&f.x<s.right,p=f.y>s.top&&f.y<s.bottom;l=d&&p}var v=r.getRect(o);if(v&&\"center\"===u){var h=v.left+v.width/2,g=v.top+v.height/2;l=h>=s.left&&h<=s.right&&g>=s.top&&g<=s.bottom}if(v&&a.default.number(u)){var y=Math.max(0,Math.min(s.right,v.right)-Math.max(s.left,v.left))*Math.max(0,Math.min(s.bottom,v.bottom)-Math.max(s.top,v.top))/(v.width*v.height);l=y>=u}t.options.drop.checker&&(l=t.options.drop.checker(e,n,l,t,i,r,o));return l}(this,t,e,n,r,o,i)},n.dynamicDrop=function(e){return a.default.bool(e)?(t.dynamicDrop=e,n):t.dynamicDrop},(0,k.default)(e.phaselessTypes,{dragenter:!0,dragleave:!0,dropactivate:!0,dropdeactivate:!0,dropmove:!0,drop:!0}),e.methodDict.drop=\"dropzone\",t.dynamicDrop=!1,o.actions.drop=gt.defaults},listeners:{\"interactions:before-action-start\":function(t){var e=t.interaction;\"drag\"===e.prepared.name&&(e.dropState={cur:{dropzone:null,element:null},prev:{dropzone:null,element:null},rejected:null,events:null,activeDrops:[]})},\"interactions:after-action-start\":function(t,e){var n=t.interaction,r=(t.event,t.iEvent);if(\"drag\"===n.prepared.name){var o=n.dropState;o.activeDrops=null,o.events=null,o.activeDrops=ft(e,n.element),o.events=pt(n,0,r),o.events.activate&&(ct(o.activeDrops,o.events.activate),e.fire(\"actions/drop:start\",{interaction:n,dragEvent:r}))}},\"interactions:action-move\":ht,\"interactions:action-end\":ht,\"interactions:after-action-move\":function(t,e){var n=t.interaction,r=t.iEvent;\"drag\"===n.prepared.name&&(vt(n,n.dropState.events),e.fire(\"actions/drop:move\",{interaction:n,dragEvent:r}),n.dropState.events={})},\"interactions:after-action-end\":function(t,e){var n=t.interaction,r=t.iEvent;\"drag\"===n.prepared.name&&(vt(n,n.dropState.events),e.fire(\"actions/drop:end\",{interaction:n,dragEvent:r}))},\"interactions:stop\":function(t){var e=t.interaction;if(\"drag\"===e.prepared.name){var n=e.dropState;n&&(n.activeDrops=null,n.events=null,n.cur.dropzone=null,n.cur.element=null,n.prev.dropzone=null,n.prev.element=null,n.rejected=!1)}}},getActiveDrops:ft,getDrop:dt,getDropEvents:pt,fireDropEvents:vt,defaults:{enabled:!1,accept:null,overlap:\"pointer\"}},yt=gt;ut.default=yt;var mt={};function bt(t){var e=t.interaction,n=t.iEvent,r=t.phase;if(\"gesture\"===e.prepared.name){var o=e.pointers.map((function(t){return t.pointer})),i=\"start\"===r,s=\"end\"===r,l=e.interactable.options.deltaSource;if(n.touches=[o[0],o[1]],i)n.distance=L.touchDistance(o,l),n.box=L.touchBBox(o),n.scale=1,n.ds=0,n.angle=L.touchAngle(o,l),n.da=0,e.gesture.startDistance=n.distance,e.gesture.startAngle=n.angle;else if(s){var u=e.prevEvent;n.distance=u.distance,n.box=u.box,n.scale=u.scale,n.ds=0,n.angle=u.angle,n.da=0}else n.distance=L.touchDistance(o,l),n.box=L.touchBBox(o),n.scale=n.distance/e.gesture.startDistance,n.angle=L.touchAngle(o,l),n.ds=n.scale-e.gesture.scale,n.da=n.angle-e.gesture.angle;e.gesture.distance=n.distance,e.gesture.angle=n.angle,a.default.number(n.scale)&&n.scale!==1/0&&!isNaN(n.scale)&&(e.gesture.scale=n.scale)}}Object.defineProperty(mt,\"__esModule\",{value:!0}),mt.default=void 0;var xt={id:\"actions/gesture\",before:[\"actions/drag\",\"actions/resize\"],install:function(t){var e=t.actions,n=t.Interactable,r=t.defaults;n.prototype.gesturable=function(t){return a.default.object(t)?(this.options.gesture.enabled=!1!==t.enabled,this.setPerAction(\"gesture\",t),this.setOnEvents(\"gesture\",t),this):a.default.bool(t)?(this.options.gesture.enabled=t,this):this.options.gesture},e.map.gesture=xt,e.methodDict.gesture=\"gesturable\",r.actions.gesture=xt.defaults},listeners:{\"interactions:action-start\":bt,\"interactions:action-move\":bt,\"interactions:action-end\":bt,\"interactions:new\":function(t){t.interaction.gesture={angle:0,distance:0,scale:1,startAngle:0,startDistance:0}},\"auto-start:check\":function(t){if(!(t.interaction.pointers.length<2)){var e=t.interactable.options.gesture;if(e&&e.enabled)return t.action={name:\"gesture\"},!1}}},defaults:{},getCursor:function(){return\"\"}},wt=xt;mt.default=wt;var _t={};function St(t,e,n,r,o,i,s){if(!e)return!1;if(!0===e){var l=a.default.number(i.width)?i.width:i.right-i.left,u=a.default.number(i.height)?i.height:i.bottom-i.top;if(s=Math.min(s,Math.abs((\"left\"===t||\"right\"===t?l:u)/2)),l<0&&(\"left\"===t?t=\"right\":\"right\"===t&&(t=\"left\")),u<0&&(\"top\"===t?t=\"bottom\":\"bottom\"===t&&(t=\"top\")),\"left\"===t)return n.x<(l>=0?i.left:i.right)+s;if(\"top\"===t)return n.y<(u>=0?i.top:i.bottom)+s;if(\"right\"===t)return n.x>(l>=0?i.right:i.left)-s;if(\"bottom\"===t)return n.y>(u>=0?i.bottom:i.top)-s}return!!a.default.element(r)&&(a.default.element(e)?e===r:S.matchesUpTo(r,e,o))}function Pt(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.resizeAxes){var r=e;n.interactable.options.resize.square?(\"y\"===n.resizeAxes?r.delta.x=r.delta.y:r.delta.y=r.delta.x,r.axes=\"xy\"):(r.axes=n.resizeAxes,\"x\"===n.resizeAxes?r.delta.y=0:\"y\"===n.resizeAxes&&(r.delta.x=0))}}Object.defineProperty(_t,\"__esModule\",{value:!0}),_t.default=void 0;var Ot={id:\"actions/resize\",before:[\"actions/drag\"],install:function(t){var e=t.actions,n=t.browser,r=t.Interactable,o=t.defaults;Ot.cursors=function(t){return t.isIe9?{x:\"e-resize\",y:\"s-resize\",xy:\"se-resize\",top:\"n-resize\",left:\"w-resize\",bottom:\"s-resize\",right:\"e-resize\",topleft:\"se-resize\",bottomright:\"se-resize\",topright:\"ne-resize\",bottomleft:\"ne-resize\"}:{x:\"ew-resize\",y:\"ns-resize\",xy:\"nwse-resize\",top:\"ns-resize\",left:\"ew-resize\",bottom:\"ns-resize\",right:\"ew-resize\",topleft:\"nwse-resize\",bottomright:\"nwse-resize\",topright:\"nesw-resize\",bottomleft:\"nesw-resize\"}}(n),Ot.defaultMargin=n.supportsTouch||n.supportsPointerEvent?20:10,r.prototype.resizable=function(e){return function(t,e,n){if(a.default.object(e))return t.options.resize.enabled=!1!==e.enabled,t.setPerAction(\"resize\",e),t.setOnEvents(\"resize\",e),a.default.string(e.axis)&&/^x$|^y$|^xy$/.test(e.axis)?t.options.resize.axis=e.axis:null===e.axis&&(t.options.resize.axis=n.defaults.actions.resize.axis),a.default.bool(e.preserveAspectRatio)?t.options.resize.preserveAspectRatio=e.preserveAspectRatio:a.default.bool(e.square)&&(t.options.resize.square=e.square),t;if(a.default.bool(e))return t.options.resize.enabled=e,t;return t.options.resize}(this,e,t)},e.map.resize=Ot,e.methodDict.resize=\"resizable\",o.actions.resize=Ot.defaults},listeners:{\"interactions:new\":function(t){t.interaction.resizeAxes=\"xy\"},\"interactions:action-start\":function(t){!function(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.prepared.edges){var r=e,o=n.rect;n._rects={start:(0,k.default)({},o),corrected:(0,k.default)({},o),previous:(0,k.default)({},o),delta:{left:0,right:0,width:0,top:0,bottom:0,height:0}},r.edges=n.prepared.edges,r.rect=n._rects.corrected,r.deltaRect=n._rects.delta}}(t),Pt(t)},\"interactions:action-move\":function(t){!function(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.prepared.edges){var r=e,o=n.interactable.options.resize.invert,i=\"reposition\"===o||\"negate\"===o,a=n.rect,s=n._rects,l=s.start,u=s.corrected,c=s.delta,f=s.previous;if((0,k.default)(f,u),i){if((0,k.default)(u,a),\"reposition\"===o){if(u.top>u.bottom){var d=u.top;u.top=u.bottom,u.bottom=d}if(u.left>u.right){var p=u.left;u.left=u.right,u.right=p}}}else u.top=Math.min(a.top,l.bottom),u.bottom=Math.max(a.bottom,l.top),u.left=Math.min(a.left,l.right),u.right=Math.max(a.right,l.left);for(var v in u.width=u.right-u.left,u.height=u.bottom-u.top,u)c[v]=u[v]-f[v];r.edges=n.prepared.edges,r.rect=u,r.deltaRect=c}}(t),Pt(t)},\"interactions:action-end\":function(t){var e=t.iEvent,n=t.interaction;if(\"resize\"===n.prepared.name&&n.prepared.edges){var r=e;r.edges=n.prepared.edges,r.rect=n._rects.corrected,r.deltaRect=n._rects.delta}},\"auto-start:check\":function(t){var e=t.interaction,n=t.interactable,r=t.element,o=t.rect,i=t.buttons;if(o){var s=(0,k.default)({},e.coords.cur.page),l=n.options.resize;if(l&&l.enabled&&(!e.pointerIsDown||!/mouse|pointer/.test(e.pointerType)||0!=(i&l.mouseButtons))){if(a.default.object(l.edges)){var u={left:!1,right:!1,top:!1,bottom:!1};for(var c in u)u[c]=St(c,l.edges[c],s,e._latestPointer.eventTarget,r,o,l.margin||Ot.defaultMargin);u.left=u.left&&!u.right,u.top=u.top&&!u.bottom,(u.left||u.right||u.top||u.bottom)&&(t.action={name:\"resize\",edges:u})}else{var f=\"y\"!==l.axis&&s.x>o.right-Ot.defaultMargin,d=\"x\"!==l.axis&&s.y>o.bottom-Ot.defaultMargin;(f||d)&&(t.action={name:\"resize\",axes:(f?\"x\":\"\")+(d?\"y\":\"\")})}return!t.action&&void 0}}}},defaults:{square:!1,preserveAspectRatio:!1,axis:\"xy\",margin:NaN,edges:null,invert:\"none\"},cursors:null,getCursor:function(t){var e=t.edges,n=t.axis,r=t.name,o=Ot.cursors,i=null;if(n)i=o[r+n];else if(e){for(var a=\"\",s=[\"top\",\"bottom\",\"left\",\"right\"],l=0;l<s.length;l++){var u=s[l];e[u]&&(a+=u)}i=o[a]}return i},defaultMargin:null},Et=Ot;_t.default=Et;var Tt={};Object.defineProperty(Tt,\"__esModule\",{value:!0}),Tt.default=void 0;var Mt={id:\"actions\",install:function(t){t.usePlugin(mt.default),t.usePlugin(_t.default),t.usePlugin(f.default),t.usePlugin(ut.default)}};Tt.default=Mt;var jt={};Object.defineProperty(jt,\"__esModule\",{value:!0}),jt.default=void 0;jt.default={};var kt={};Object.defineProperty(kt,\"__esModule\",{value:!0}),kt.default=void 0;var It,Dt,At=0;var zt={request:function(t){return It(t)},cancel:function(t){return Dt(t)},init:function(t){if(It=t.requestAnimationFrame,Dt=t.cancelAnimationFrame,!It)for(var e=[\"ms\",\"moz\",\"webkit\",\"o\"],n=0;n<e.length;n++){var r=e[n];It=t[\"\".concat(r,\"RequestAnimationFrame\")],Dt=t[\"\".concat(r,\"CancelAnimationFrame\")]||t[\"\".concat(r,\"CancelRequestAnimationFrame\")]}It||(It=function(t){var e=Date.now(),n=Math.max(0,16-(e-At)),r=setTimeout((function(){t(e+n)}),n);return At=e+n,r},Dt=function(t){return clearTimeout(t)})}};kt.default=zt;var Ct={};Object.defineProperty(Ct,\"__esModule\",{value:!0}),Ct.getContainer=Ft,Ct.getScroll=Xt,Ct.getScrollSize=function(t){a.default.window(t)&&(t=window.document.body);return{x:t.scrollWidth,y:t.scrollHeight}},Ct.getScrollSizeDelta=function(t,e){var n=t.interaction,r=t.element,o=n&&n.interactable.options[n.prepared.name].autoScroll;if(!o||!o.enabled)return e(),{x:0,y:0};var i=Ft(o.container,n.interactable,r),a=Xt(i);e();var s=Xt(i);return{x:s.x-a.x,y:s.y-a.y}},Ct.default=void 0;var Rt={defaults:{enabled:!1,margin:60,container:null,speed:300},now:Date.now,interaction:null,i:0,x:0,y:0,isScrolling:!1,prevTime:0,margin:0,speed:0,start:function(t){Rt.isScrolling=!0,kt.default.cancel(Rt.i),t.autoScroll=Rt,Rt.interaction=t,Rt.prevTime=Rt.now(),Rt.i=kt.default.request(Rt.scroll)},stop:function(){Rt.isScrolling=!1,Rt.interaction&&(Rt.interaction.autoScroll=null),kt.default.cancel(Rt.i)},scroll:function(){var t=Rt.interaction,e=t.interactable,n=t.element,r=t.prepared.name,o=e.options[r].autoScroll,i=Ft(o.container,e,n),s=Rt.now(),l=(s-Rt.prevTime)/1e3,u=o.speed*l;if(u>=1){var c={x:Rt.x*u,y:Rt.y*u};if(c.x||c.y){var f=Xt(i);a.default.window(i)?i.scrollBy(c.x,c.y):i&&(i.scrollLeft+=c.x,i.scrollTop+=c.y);var d=Xt(i),p={x:d.x-f.x,y:d.y-f.y};(p.x||p.y)&&e.fire({type:\"autoscroll\",target:n,interactable:e,delta:p,interaction:t,container:i})}Rt.prevTime=s}Rt.isScrolling&&(kt.default.cancel(Rt.i),Rt.i=kt.default.request(Rt.scroll))},check:function(t,e){var n=t.options;return n[e].autoScroll&&n[e].autoScroll.enabled},onInteractionMove:function(t){var e=t.interaction,n=t.pointer;if(e.interacting()&&Rt.check(e.interactable,e.prepared.name))if(e.simulation)Rt.x=Rt.y=0;else{var r,o,i,s,l=e.interactable,u=e.element,c=e.prepared.name,f=l.options[c].autoScroll,d=Ft(f.container,l,u);if(a.default.window(d))s=n.clientX<Rt.margin,r=n.clientY<Rt.margin,o=n.clientX>d.innerWidth-Rt.margin,i=n.clientY>d.innerHeight-Rt.margin;else{var p=S.getElementClientRect(d);s=n.clientX<p.left+Rt.margin,r=n.clientY<p.top+Rt.margin,o=n.clientX>p.right-Rt.margin,i=n.clientY>p.bottom-Rt.margin}Rt.x=o?1:s?-1:0,Rt.y=i?1:r?-1:0,Rt.isScrolling||(Rt.margin=f.margin,Rt.speed=f.speed,Rt.start(e))}}};function Ft(t,n,r){return(a.default.string(t)?(0,I.getStringOptionResult)(t,n,r):t)||(0,e.getWindow)(r)}function Xt(t){return a.default.window(t)&&(t=window.document.body),{x:t.scrollLeft,y:t.scrollTop}}var Yt={id:\"auto-scroll\",install:function(t){var e=t.defaults,n=t.actions;t.autoScroll=Rt,Rt.now=function(){return t.now()},n.phaselessTypes.autoscroll=!0,e.perAction.autoScroll=Rt.defaults},listeners:{\"interactions:new\":function(t){t.interaction.autoScroll=null},\"interactions:destroy\":function(t){t.interaction.autoScroll=null,Rt.stop(),Rt.interaction&&(Rt.interaction=null)},\"interactions:stop\":Rt.stop,\"interactions:action-move\":function(t){return Rt.onInteractionMove(t)}}};Ct.default=Yt;var Wt={};Object.defineProperty(Wt,\"__esModule\",{value:!0}),Wt.warnOnce=function(t,n){var r=!1;return function(){return r||(e.default.window.console.warn(n),r=!0),t.apply(this,arguments)}},Wt.copyAction=function(t,e){return t.name=e.name,t.axis=e.axis,t.edges=e.edges,t};var Lt={};function Bt(t){return a.default.bool(t)?(this.options.styleCursor=t,this):null===t?(delete this.options.styleCursor,this):this.options.styleCursor}function Ut(t){return a.default.func(t)?(this.options.actionChecker=t,this):null===t?(delete this.options.actionChecker,this):this.options.actionChecker}Object.defineProperty(Lt,\"__esModule\",{value:!0}),Lt.default=void 0;var Vt={id:\"auto-start/interactableMethods\",install:function(t){var e=t.Interactable;e.prototype.getAction=function(e,n,r,o){var i=function(t,e,n,r,o){var i=t.getRect(r),a=e.buttons||{0:1,1:4,3:8,4:16}[e.button],s={action:null,interactable:t,interaction:n,element:r,rect:i,buttons:a};return o.fire(\"auto-start:check\",s),s.action}(this,n,r,o,t);return this.options.actionChecker?this.options.actionChecker(e,n,i,this,o,r):i},e.prototype.ignoreFrom=(0,Wt.warnOnce)((function(t){return this._backCompatOption(\"ignoreFrom\",t)}),\"Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).\"),e.prototype.allowFrom=(0,Wt.warnOnce)((function(t){return this._backCompatOption(\"allowFrom\",t)}),\"Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).\"),e.prototype.actionChecker=Ut,e.prototype.styleCursor=Bt}};Lt.default=Vt;var qt={};function Nt(t,e,n,r,o){return e.testIgnoreAllow(e.options[t.name],n,r)&&e.options[t.name].enabled&&Kt(e,n,t,o)?t:null}function Gt(t,e,n,r,o,i,a){for(var s=0,l=r.length;s<l;s++){var u=r[s],c=o[s],f=u.getAction(e,n,t,c);if(f){var d=Nt(f,u,c,i,a);if(d)return{action:d,interactable:u,element:c}}}return{action:null,interactable:null,element:null}}function $t(t,e,n,r,o){var i=[],s=[],l=r;function u(t){i.push(t),s.push(l)}for(;a.default.element(l);){i=[],s=[],o.interactables.forEachMatch(l,u);var c=Gt(t,e,n,i,s,r,o);if(c.action&&!c.interactable.options[c.action.name].manualStart)return c;l=S.parentNode(l)}return{action:null,interactable:null,element:null}}function Ht(t,e,n){var r=e.action,o=e.interactable,i=e.element;r=r||{name:null},t.interactable=o,t.element=i,(0,Wt.copyAction)(t.prepared,r),t.rect=o&&r.name?o.getRect(i):null,Qt(t,n),n.fire(\"autoStart:prepared\",{interaction:t})}function Kt(t,e,n,r){var o=t.options,i=o[n.name].max,a=o[n.name].maxPerElement,s=r.autoStart.maxInteractions,l=0,u=0,c=0;if(!(i&&a&&s))return!1;for(var f=0;f<r.interactions.list.length;f++){var d=r.interactions.list[f],p=d.prepared.name;if(d.interacting()){if(++l>=s)return!1;if(d.interactable===t){if((u+=p===n.name?1:0)>=i)return!1;if(d.element===e&&(c++,p===n.name&&c>=a))return!1}}}return s>0}function Zt(t,e){return a.default.number(t)?(e.autoStart.maxInteractions=t,this):e.autoStart.maxInteractions}function Jt(t,e,n){var r=n.autoStart.cursorElement;r&&r!==t&&(r.style.cursor=\"\"),t.ownerDocument.documentElement.style.cursor=e,t.style.cursor=e,n.autoStart.cursorElement=e?t:null}function Qt(t,e){var n=t.interactable,r=t.element,o=t.prepared;if(\"mouse\"===t.pointerType&&n&&n.options.styleCursor){var i=\"\";if(o.name){var s=n.options[o.name].cursorChecker;i=a.default.func(s)?s(o,n,r,t._interacting):e.actions.map[o.name].getCursor(o)}Jt(t.element,i||\"\",e)}else e.autoStart.cursorElement&&Jt(e.autoStart.cursorElement,\"\",e)}Object.defineProperty(qt,\"__esModule\",{value:!0}),qt.default=void 0;var te={id:\"auto-start/base\",before:[\"actions\",\"actions/drag\",\"actions/resize\",\"actions/gesture\"],install:function(t){var e=t.interactStatic,n=t.defaults;t.usePlugin(Lt.default),n.base.actionChecker=null,n.base.styleCursor=!0,(0,k.default)(n.perAction,{manualStart:!1,max:1/0,maxPerElement:1,allowFrom:null,ignoreFrom:null,mouseButtons:1}),e.maxInteractions=function(e){return Zt(e,t)},t.autoStart={maxInteractions:1/0,withinInteractionLimit:Kt,cursorElement:null}},listeners:{\"interactions:down\":function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;n.interacting()||Ht(n,$t(n,r,o,i,e),e)},\"interactions:move\":function(t,e){!function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;\"mouse\"!==n.pointerType||n.pointerIsDown||n.interacting()||Ht(n,$t(n,r,o,i,e),e)}(t,e),function(t,e){var n=t.interaction;if(n.pointerIsDown&&!n.interacting()&&n.pointerWasMoved&&n.prepared.name){e.fire(\"autoStart:before-start\",t);var r=n.interactable,o=n.prepared.name;o&&r&&(r.options[o].manualStart||!Kt(r,n.element,n.prepared,e)?n.stop():(n.start(n.prepared,r,n.element),Qt(n,e)))}}(t,e)},\"interactions:stop\":function(t,e){var n=t.interaction,r=n.interactable;r&&r.options.styleCursor&&Jt(n.element,\"\",e)}},maxInteractions:Zt,withinInteractionLimit:Kt,validateAction:Nt};qt.default=te;var ee={};Object.defineProperty(ee,\"__esModule\",{value:!0}),ee.default=void 0;var ne={id:\"auto-start/dragAxis\",listeners:{\"autoStart:before-start\":function(t,e){var n=t.interaction,r=t.eventTarget,o=t.dx,i=t.dy;if(\"drag\"===n.prepared.name){var s=Math.abs(o),l=Math.abs(i),u=n.interactable.options.drag,c=u.startAxis,f=s>l?\"x\":s<l?\"y\":\"xy\";if(n.prepared.axis=\"start\"===u.lockAxis?f[0]:u.lockAxis,\"xy\"!==f&&\"xy\"!==c&&c!==f){n.prepared.name=null;for(var d=r,p=function(t){if(t!==n.interactable){var o=n.interactable.options.drag;if(!o.manualStart&&t.testIgnoreAllow(o,d,r)){var i=t.getAction(n.downPointer,n.downEvent,n,d);if(i&&\"drag\"===i.name&&function(t,e){if(!e)return!1;var n=e.options.drag.startAxis;return\"xy\"===t||\"xy\"===n||n===t}(f,t)&&qt.default.validateAction(i,t,d,r,e))return t}}};a.default.element(d);){var v=e.interactables.forEachMatch(d,p);if(v){n.prepared.name=\"drag\",n.interactable=v,n.element=d;break}d=(0,S.parentNode)(d)}}}}}};ee.default=ne;var re={};function oe(t){var e=t.prepared&&t.prepared.name;if(!e)return null;var n=t.interactable.options;return n[e].hold||n[e].delay}Object.defineProperty(re,\"__esModule\",{value:!0}),re.default=void 0;var ie={id:\"auto-start/hold\",install:function(t){var e=t.defaults;t.usePlugin(qt.default),e.perAction.hold=0,e.perAction.delay=0},listeners:{\"interactions:new\":function(t){t.interaction.autoStartHoldTimer=null},\"autoStart:prepared\":function(t){var e=t.interaction,n=oe(e);n>0&&(e.autoStartHoldTimer=setTimeout((function(){e.start(e.prepared,e.interactable,e.element)}),n))},\"interactions:move\":function(t){var e=t.interaction,n=t.duplicate;e.pointerWasMoved&&!n&&clearTimeout(e.autoStartHoldTimer)},\"autoStart:before-start\":function(t){var e=t.interaction;oe(e)>0&&(e.prepared.name=null)}},getHoldDuration:oe};re.default=ie;var ae={};Object.defineProperty(ae,\"__esModule\",{value:!0}),ae.default=void 0;var se={id:\"auto-start\",install:function(t){t.usePlugin(qt.default),t.usePlugin(re.default),t.usePlugin(ee.default)}};ae.default=se;var le={};Object.defineProperty(le,\"__esModule\",{value:!0}),le.default=void 0;le.default={};var ue={};function ce(t){return/^(always|never|auto)$/.test(t)?(this.options.preventDefault=t,this):a.default.bool(t)?(this.options.preventDefault=t?\"always\":\"never\",this):this.options.preventDefault}function fe(t){var e=t.interaction,n=t.event;e.interactable&&e.interactable.checkAndPreventDefault(n)}function de(t){var n=t.Interactable;n.prototype.preventDefault=ce,n.prototype.checkAndPreventDefault=function(n){return function(t,n,r){var o=t.options.preventDefault;if(\"never\"!==o)if(\"always\"!==o){if(n.events.supportsPassive&&/^touch(start|move)$/.test(r.type)){var i=(0,e.getWindow)(r.target).document,s=n.getDocOptions(i);if(!s||!s.events||!1!==s.events.passive)return}/^(mouse|pointer|touch)*(down|start)/i.test(r.type)||a.default.element(r.target)&&(0,S.matchesSelector)(r.target,\"input,select,textarea,[contenteditable=true],[contenteditable=true] *\")||r.preventDefault()}else r.preventDefault()}(this,t,n)},t.interactions.docEvents.push({type:\"dragstart\",listener:function(e){for(var n=0;n<t.interactions.list.length;n++){var r=t.interactions.list[n];if(r.element&&(r.element===e.target||(0,S.nodeContains)(r.element,e.target)))return void r.interactable.checkAndPreventDefault(e)}}})}Object.defineProperty(ue,\"__esModule\",{value:!0}),ue.install=de,ue.default=void 0;var pe={id:\"core/interactablePreventDefault\",install:de,listeners:[\"down\",\"move\",\"up\",\"cancel\"].reduce((function(t,e){return t[\"interactions:\".concat(e)]=fe,t}),{})};ue.default=pe;var ve,he={};function ge(t){return function(t){if(Array.isArray(t))return ye(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return ye(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ye(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function ye(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(he,\"__esModule\",{value:!0}),he.default=void 0,function(t){t.touchAction=\"touchAction\",t.boxSizing=\"boxSizing\",t.noListeners=\"noListeners\"}(ve||(ve={}));var me={touchAction:\"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\",boxSizing:\"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing\"};var be=[{name:ve.touchAction,perform:function(t){return!function(t,e,n){var r=t;for(;a.default.element(r);){if(xe(r,e,n))return!0;r=(0,S.parentNode)(r)}return!1}(t.element,\"touchAction\",/pan-|pinch|none/)},getInfo:function(t){return[t.element,me.touchAction]},text:'Consider adding CSS \"touch-action: none\" to this element\\n'},{name:ve.boxSizing,perform:function(t){var e=t.element;return\"resize\"===t.prepared.name&&e instanceof g.default.HTMLElement&&!xe(e,\"boxSizing\",/border-box/)},text:'Consider adding CSS \"box-sizing: border-box\" to this resizable element',getInfo:function(t){return[t.element,me.boxSizing]}},{name:ve.noListeners,perform:function(t){var e=t.prepared.name;return!(t.interactable.events.types[\"\".concat(e,\"move\")]||[]).length},getInfo:function(t){return[t.prepared.name,t.interactable]},text:\"There are no listeners set for this action\"}];function xe(t,n,r){var o=t.style[n]||e.default.window.getComputedStyle(t)[n];return r.test((o||\"\").toString())}var we=\"dev-tools\",_e={id:we,install:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.logger,r=t.Interactable,o=t.defaults;t.logger=n||console,o.base.devTools={ignore:{}},r.prototype.devTools=function(t){return t?((0,k.default)(this.options.devTools,t),this):this.options.devTools}},listeners:{\"interactions:action-start\":function(t,e){for(var n=t.interaction,r=0;r<be.length;r++){var o,i=be[r],a=n.interactable&&n.interactable.options;if(!(a&&a.devTools&&a.devTools.ignore[i.name])&&i.perform(n))(o=e.logger).warn.apply(o,[\"[interact.js] \"+i.text].concat(ge(i.getInfo(n))))}}},checks:be,CheckName:ve,links:me,prefix:\"[interact.js] \"};he.default=_e;var Se={};Object.defineProperty(Se,\"__esModule\",{value:!0}),Se.default=void 0;Se.default={};var Pe={};Object.defineProperty(Pe,\"__esModule\",{value:!0}),Pe.default=function t(e){var n={};for(var r in e){var o=e[r];a.default.plainObject(o)?n[r]=t(o):a.default.array(o)?n[r]=J.from(o):n[r]=o}return n};var Oe={};function Ee(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return Te(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Te(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Te(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function Me(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}Object.defineProperty(Oe,\"__esModule\",{value:!0}),Oe.getRectOffset=Ie,Oe.default=void 0;var je=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.states=[],this.startOffset={left:0,right:0,top:0,bottom:0},this.startDelta=null,this.result=null,this.endResult=null,this.edges=void 0,this.interaction=void 0,this.interaction=e,this.result=ke()}var e,n,r;return e=t,(n=[{key:\"start\",value:function(t,e){var n=t.phase,r=this.interaction,o=function(t){var e=t.interactable.options[t.prepared.name],n=e.modifiers;return n&&n.length?n.filter((function(t){return!t.options||!1!==t.options.enabled})):[\"snap\",\"snapSize\",\"snapEdges\",\"restrict\",\"restrictEdges\",\"restrictSize\"].map((function(t){var n=e[t];return n&&n.enabled&&{options:n,methods:n._methods}})).filter((function(t){return!!t}))}(r);this.prepareStates(o),this.edges=(0,k.default)({},r.edges),this.startOffset=Ie(r.rect,e),this.startDelta={x:0,y:0};var i={phase:n,pageCoords:e,preEnd:!1};return this.result=ke(),this.startAll(i),this.result=this.setAll(i)}},{key:\"fillArg\",value:function(t){var e=this.interaction;t.interaction=e,t.interactable=e.interactable,t.element=e.element,t.rect=t.rect||e.rect,t.edges=this.edges,t.startOffset=this.startOffset}},{key:\"startAll\",value:function(t){this.fillArg(t);for(var e=0;e<this.states.length;e++){var n=this.states[e];n.methods.start&&(t.state=n,n.methods.start(t))}}},{key:\"setAll\",value:function(t){this.fillArg(t);var e=t.phase,n=t.preEnd,r=t.skipModifiers,o=t.rect;t.coords=(0,k.default)({},t.pageCoords),t.rect=(0,k.default)({},o);for(var i=r?this.states.slice(r):this.states,a=ke(t.coords,t.rect),s=0;s<i.length;s++){var l=i[s],u=l.options,c=(0,k.default)({},t.coords),f=null;l.methods.set&&this.shouldDo(u,n,e)&&(t.state=l,f=l.methods.set(t),I.addEdges(this.interaction.edges,t.rect,{x:t.coords.x-c.x,y:t.coords.y-c.y})),a.eventProps.push(f)}a.delta.x=t.coords.x-t.pageCoords.x,a.delta.y=t.coords.y-t.pageCoords.y,a.rectDelta.left=t.rect.left-o.left,a.rectDelta.right=t.rect.right-o.right,a.rectDelta.top=t.rect.top-o.top,a.rectDelta.bottom=t.rect.bottom-o.bottom;var d=this.result.coords,p=this.result.rect;if(d&&p){var v=a.rect.left!==p.left||a.rect.right!==p.right||a.rect.top!==p.top||a.rect.bottom!==p.bottom;a.changed=v||d.x!==a.coords.x||d.y!==a.coords.y}return a}},{key:\"applyToInteraction\",value:function(t){var e=this.interaction,n=t.phase,r=e.coords.cur,o=e.coords.start,i=this.result,a=this.startDelta,s=i.delta;\"start\"===n&&(0,k.default)(this.startDelta,i.delta);for(var l=[[o,a],[r,s]],u=0;u<l.length;u++){var c=Ee(l[u],2),f=c[0],d=c[1];f.page.x+=d.x,f.page.y+=d.y,f.client.x+=d.x,f.client.y+=d.y}var p=this.result.rectDelta,v=t.rect||e.rect;v.left+=p.left,v.right+=p.right,v.top+=p.top,v.bottom+=p.bottom,v.width=v.right-v.left,v.height=v.bottom-v.top}},{key:\"setAndApply\",value:function(t){var e=this.interaction,n=t.phase,r=t.preEnd,o=t.skipModifiers,i=this.setAll({preEnd:r,phase:n,pageCoords:t.modifiedCoords||e.coords.cur.page});if(this.result=i,!i.changed&&(!o||o<this.states.length)&&e.interacting())return!1;if(t.modifiedCoords){var a=e.coords.cur.page,s={x:t.modifiedCoords.x-a.x,y:t.modifiedCoords.y-a.y};i.coords.x+=s.x,i.coords.y+=s.y,i.delta.x+=s.x,i.delta.y+=s.y}this.applyToInteraction(t)}},{key:\"beforeEnd\",value:function(t){var e=t.interaction,n=t.event,r=this.states;if(r&&r.length){for(var o=!1,i=0;i<r.length;i++){var a=r[i];t.state=a;var s=a.options,l=a.methods,u=l.beforeEnd&&l.beforeEnd(t);if(u)return this.endResult=u,!1;o=o||!o&&this.shouldDo(s,!0,t.phase,!0)}o&&e.move({event:n,preEnd:!0})}}},{key:\"stop\",value:function(t){var e=t.interaction;if(this.states&&this.states.length){var n=(0,k.default)({states:this.states,interactable:e.interactable,element:e.element,rect:null},t);this.fillArg(n);for(var r=0;r<this.states.length;r++){var o=this.states[r];n.state=o,o.methods.stop&&o.methods.stop(n)}this.states=null,this.endResult=null}}},{key:\"prepareStates\",value:function(t){this.states=[];for(var e=0;e<t.length;e++){var n=t[e],r=n.options,o=n.methods,i=n.name;r&&!1===r.enabled||this.states.push({options:r,methods:o,index:e,name:i})}return this.states}},{key:\"restoreInteractionCoords\",value:function(t){var e=t.interaction,n=e.coords,r=e.rect,o=e.modification;if(o.result){for(var i=o.startDelta,a=o.result,s=a.delta,l=a.rectDelta,u=[[n.start,i],[n.cur,s]],c=0;c<u.length;c++){var f=Ee(u[c],2),d=f[0],p=f[1];d.page.x-=p.x,d.page.y-=p.y,d.client.x-=p.x,d.client.y-=p.y}r.left-=l.left,r.right-=l.right,r.top-=l.top,r.bottom-=l.bottom}}},{key:\"shouldDo\",value:function(t,e,n,r){return!(!t||!1===t.enabled||r&&!t.endOnly||t.endOnly&&!e||\"start\"===n&&!t.setStart)}},{key:\"copyFrom\",value:function(t){this.startOffset=t.startOffset,this.startDelta=t.startDelta,this.edges=t.edges,this.states=t.states.map((function(t){return(0,Pe.default)(t)})),this.result=ke((0,k.default)({},t.result.coords),(0,k.default)({},t.result.rect))}},{key:\"destroy\",value:function(){for(var t in this)this[t]=null}}])&&Me(e.prototype,n),r&&Me(e,r),t}();function ke(t,e){return{rect:e,coords:t,delta:{x:0,y:0},rectDelta:{left:0,right:0,top:0,bottom:0},eventProps:[],changed:!0}}function Ie(t,e){return t?{left:e.x-t.left,top:e.y-t.top,right:t.right-e.x,bottom:t.bottom-e.y}:{left:0,top:0,right:0,bottom:0}}Oe.default=je;var De={};function Ae(t){var e=t.iEvent,n=t.interaction.modification.result;n&&(e.modifiers=n.eventProps)}Object.defineProperty(De,\"__esModule\",{value:!0}),De.makeModifier=function(t,e){var n=t.defaults,r={start:t.start,set:t.set,beforeEnd:t.beforeEnd,stop:t.stop},o=function(t){var o=t||{};for(var i in o.enabled=!1!==o.enabled,n)i in o||(o[i]=n[i]);return{options:o,methods:r,name:e}};e&&\"string\"==typeof e&&(o._defaults=n,o._methods=r);return o},De.addEventModifiers=Ae,De.default=void 0;var ze={id:\"modifiers/base\",install:function(t){t.defaults.perAction.modifiers=[]},listeners:{\"interactions:new\":function(t){var e=t.interaction;e.modification=new Oe.default(e)},\"interactions:before-action-start\":function(t){var e=t.interaction.modification;e.start(t,t.interaction.coords.start.page),t.interaction.edges=e.edges,e.applyToInteraction(t)},\"interactions:before-action-move\":function(t){return t.interaction.modification.setAndApply(t)},\"interactions:before-action-end\":function(t){return t.interaction.modification.beforeEnd(t)},\"interactions:action-start\":Ae,\"interactions:action-move\":Ae,\"interactions:action-end\":Ae,\"interactions:after-action-start\":function(t){return t.interaction.modification.restoreInteractionCoords(t)},\"interactions:after-action-move\":function(t){return t.interaction.modification.restoreInteractionCoords(t)},\"interactions:stop\":function(t){return t.interaction.modification.stop(t)}},before:[\"actions\",\"action/drag\",\"actions/resize\",\"actions/gesture\"]};De.default=ze;var Ce={};Object.defineProperty(Ce,\"__esModule\",{value:!0}),Ce.defaults=void 0;Ce.defaults={base:{preventDefault:\"auto\",deltaSource:\"page\"},perAction:{enabled:!1,origin:{x:0,y:0}},actions:{}};var Re={};function Fe(t){return(Fe=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function Xe(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ye(t,e){return(Ye=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function We(t){var e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ue(t);if(e){var o=Ue(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Le(this,n)}}function Le(t,e){return!e||\"object\"!==Fe(e)&&\"function\"!=typeof e?Be(t):e}function Be(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function Ue(t){return(Ue=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperty(Re,\"__esModule\",{value:!0}),Re.InteractEvent=void 0;var Ve=function(t){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ye(t,e)}(i,t);var e,n,r,o=We(i);function i(t,e,n,r,a,s,l){var u;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(u=o.call(this,t)).target=void 0,u.currentTarget=void 0,u.relatedTarget=null,u.screenX=void 0,u.screenY=void 0,u.button=void 0,u.buttons=void 0,u.ctrlKey=void 0,u.shiftKey=void 0,u.altKey=void 0,u.metaKey=void 0,u.page=void 0,u.client=void 0,u.delta=void 0,u.rect=void 0,u.x0=void 0,u.y0=void 0,u.t0=void 0,u.dt=void 0,u.duration=void 0,u.clientX0=void 0,u.clientY0=void 0,u.velocity=void 0,u.speed=void 0,u.swipe=void 0,u.timeStamp=void 0,u.dragEnter=void 0,u.dragLeave=void 0,u.axes=void 0,u.preEnd=void 0,a=a||t.element;var c=t.interactable,f=(c&&c.options||Ce.defaults).deltaSource,d=(0,z.default)(c,a,n),p=\"start\"===r,v=\"end\"===r,h=p?Be(u):t.prevEvent,g=p?t.coords.start:v?{page:h.page,client:h.client,timeStamp:t.coords.cur.timeStamp}:t.coords.cur;return u.page=(0,k.default)({},g.page),u.client=(0,k.default)({},g.client),u.rect=(0,k.default)({},t.rect),u.timeStamp=g.timeStamp,v||(u.page.x-=d.x,u.page.y-=d.y,u.client.x-=d.x,u.client.y-=d.y),u.ctrlKey=e.ctrlKey,u.altKey=e.altKey,u.shiftKey=e.shiftKey,u.metaKey=e.metaKey,u.button=e.button,u.buttons=e.buttons,u.target=a,u.currentTarget=a,u.preEnd=s,u.type=l||n+(r||\"\"),u.interactable=c,u.t0=p?t.pointers[t.pointers.length-1].downTime:h.t0,u.x0=t.coords.start.page.x-d.x,u.y0=t.coords.start.page.y-d.y,u.clientX0=t.coords.start.client.x-d.x,u.clientY0=t.coords.start.client.y-d.y,u.delta=p||v?{x:0,y:0}:{x:u[f].x-h[f].x,y:u[f].y-h[f].y},u.dt=t.coords.delta.timeStamp,u.duration=u.timeStamp-u.t0,u.velocity=(0,k.default)({},t.coords.velocity[f]),u.speed=(0,F.default)(u.velocity.x,u.velocity.y),u.swipe=v||\"inertiastart\"===r?u.getSwipe():null,u}return e=i,(n=[{key:\"getSwipe\",value:function(){var t=this._interaction;if(t.prevEvent.speed<600||this.timeStamp-t.prevEvent.timeStamp>150)return null;var e=180*Math.atan2(t.prevEvent.velocityY,t.prevEvent.velocityX)/Math.PI;e<0&&(e+=360);var n=112.5<=e&&e<247.5,r=202.5<=e&&e<337.5;return{up:r,down:!r&&22.5<=e&&e<157.5,left:n,right:!n&&(292.5<=e||e<67.5),angle:e,speed:t.prevEvent.speed,velocity:{x:t.prevEvent.velocityX,y:t.prevEvent.velocityY}}}},{key:\"preventDefault\",value:function(){}},{key:\"stopImmediatePropagation\",value:function(){this.immediatePropagationStopped=this.propagationStopped=!0}},{key:\"stopPropagation\",value:function(){this.propagationStopped=!0}}])&&Xe(e.prototype,n),r&&Xe(e,r),i}($.BaseEvent);Re.InteractEvent=Ve,Object.defineProperties(Ve.prototype,{pageX:{get:function(){return this.page.x},set:function(t){this.page.x=t}},pageY:{get:function(){return this.page.y},set:function(t){this.page.y=t}},clientX:{get:function(){return this.client.x},set:function(t){this.client.x=t}},clientY:{get:function(){return this.client.y},set:function(t){this.client.y=t}},dx:{get:function(){return this.delta.x},set:function(t){this.delta.x=t}},dy:{get:function(){return this.delta.y},set:function(t){this.delta.y=t}},velocityX:{get:function(){return this.velocity.x},set:function(t){this.velocity.x=t}},velocityY:{get:function(){return this.velocity.y},set:function(t){this.velocity.y=t}}});var qe={};Object.defineProperty(qe,\"__esModule\",{value:!0}),qe.PointerInfo=void 0;qe.PointerInfo=function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.id=void 0,this.pointer=void 0,this.event=void 0,this.downTime=void 0,this.downTarget=void 0,this.id=e,this.pointer=n,this.event=r,this.downTime=o,this.downTarget=i};var Ne,Ge,$e={};function He(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ke(t,e,n){return e&&He(t.prototype,e),n&&He(t,n),t}Object.defineProperty($e,\"__esModule\",{value:!0}),Object.defineProperty($e,\"PointerInfo\",{enumerable:!0,get:function(){return qe.PointerInfo}}),$e.default=$e.Interaction=$e._ProxyMethods=$e._ProxyValues=void 0,$e._ProxyValues=Ne,function(t){t.interactable=\"\",t.element=\"\",t.prepared=\"\",t.pointerIsDown=\"\",t.pointerWasMoved=\"\",t._proxy=\"\"}(Ne||($e._ProxyValues=Ne={})),$e._ProxyMethods=Ge,function(t){t.start=\"\",t.move=\"\",t.end=\"\",t.stop=\"\",t.interacting=\"\"}(Ge||($e._ProxyMethods=Ge={}));var Ze=0,Je=function(){function t(e){var n=this,r=e.pointerType,o=e.scopeFire;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.interactable=null,this.element=null,this.rect=void 0,this._rects=void 0,this.edges=void 0,this._scopeFire=void 0,this.prepared={name:null,axis:null,edges:null},this.pointerType=void 0,this.pointers=[],this.downEvent=null,this.downPointer={},this._latestPointer={pointer:null,event:null,eventTarget:null},this.prevEvent=null,this.pointerIsDown=!1,this.pointerWasMoved=!1,this._interacting=!1,this._ending=!1,this._stopped=!0,this._proxy=null,this.simulation=null,this.doMove=(0,Wt.warnOnce)((function(t){this.move(t)}),\"The interaction.doMove() method has been renamed to interaction.move()\"),this.coords={start:L.newCoords(),prev:L.newCoords(),cur:L.newCoords(),delta:L.newCoords(),velocity:L.newCoords()},this._id=Ze++,this._scopeFire=o,this.pointerType=r;var i=this;this._proxy={};var a=function(t){Object.defineProperty(n._proxy,t,{get:function(){return i[t]}})};for(var s in Ne)a(s);var l=function(t){Object.defineProperty(n._proxy,t,{value:function(){return i[t].apply(i,arguments)}})};for(var u in Ge)l(u);this._scopeFire(\"interactions:new\",{interaction:this})}return Ke(t,[{key:\"pointerMoveTolerance\",get:function(){return 1}}]),Ke(t,[{key:\"pointerDown\",value:function(t,e,n){var r=this.updatePointer(t,e,n,!0),o=this.pointers[r];this._scopeFire(\"interactions:down\",{pointer:t,event:e,eventTarget:n,pointerIndex:r,pointerInfo:o,type:\"down\",interaction:this})}},{key:\"start\",value:function(t,e,n){return!(this.interacting()||!this.pointerIsDown||this.pointers.length<(\"gesture\"===t.name?2:1)||!e.options[t.name].enabled)&&((0,Wt.copyAction)(this.prepared,t),this.interactable=e,this.element=n,this.rect=e.getRect(n),this.edges=this.prepared.edges?(0,k.default)({},this.prepared.edges):{left:!0,right:!0,top:!0,bottom:!0},this._stopped=!1,this._interacting=this._doPhase({interaction:this,event:this.downEvent,phase:\"start\"})&&!this._stopped,this._interacting)}},{key:\"pointerMove\",value:function(t,e,n){this.simulation||this.modification&&this.modification.endResult||this.updatePointer(t,e,n,!1);var r,o,i=this.coords.cur.page.x===this.coords.prev.page.x&&this.coords.cur.page.y===this.coords.prev.page.y&&this.coords.cur.client.x===this.coords.prev.client.x&&this.coords.cur.client.y===this.coords.prev.client.y;this.pointerIsDown&&!this.pointerWasMoved&&(r=this.coords.cur.client.x-this.coords.start.client.x,o=this.coords.cur.client.y-this.coords.start.client.y,this.pointerWasMoved=(0,F.default)(r,o)>this.pointerMoveTolerance);var a=this.getPointerIndex(t),s={pointer:t,pointerIndex:a,pointerInfo:this.pointers[a],event:e,type:\"move\",eventTarget:n,dx:r,dy:o,duplicate:i,interaction:this};i||L.setCoordVelocity(this.coords.velocity,this.coords.delta),this._scopeFire(\"interactions:move\",s),i||this.simulation||(this.interacting()&&(s.type=null,this.move(s)),this.pointerWasMoved&&L.copyCoords(this.coords.prev,this.coords.cur))}},{key:\"move\",value:function(t){t&&t.event||L.setZeroCoords(this.coords.delta),(t=(0,k.default)({pointer:this._latestPointer.pointer,event:this._latestPointer.event,eventTarget:this._latestPointer.eventTarget,interaction:this},t||{})).phase=\"move\",this._doPhase(t)}},{key:\"pointerUp\",value:function(t,e,n,r){var o=this.getPointerIndex(t);-1===o&&(o=this.updatePointer(t,e,n,!1));var i=/cancel$/i.test(e.type)?\"cancel\":\"up\";this._scopeFire(\"interactions:\".concat(i),{pointer:t,pointerIndex:o,pointerInfo:this.pointers[o],event:e,eventTarget:n,type:i,curEventTarget:r,interaction:this}),this.simulation||this.end(e),this.pointerIsDown=!1,this.removePointer(t,e)}},{key:\"documentBlur\",value:function(t){this.end(t),this._scopeFire(\"interactions:blur\",{event:t,type:\"blur\",interaction:this})}},{key:\"end\",value:function(t){var e;this._ending=!0,t=t||this._latestPointer.event,this.interacting()&&(e=this._doPhase({event:t,interaction:this,phase:\"end\"})),this._ending=!1,!0===e&&this.stop()}},{key:\"currentAction\",value:function(){return this._interacting?this.prepared.name:null}},{key:\"interacting\",value:function(){return this._interacting}},{key:\"stop\",value:function(){this._scopeFire(\"interactions:stop\",{interaction:this}),this.interactable=this.element=null,this._interacting=!1,this._stopped=!0,this.prepared.name=this.prevEvent=null}},{key:\"getPointerIndex\",value:function(t){var e=L.getPointerId(t);return\"mouse\"===this.pointerType||\"pen\"===this.pointerType?this.pointers.length-1:J.findIndex(this.pointers,(function(t){return t.id===e}))}},{key:\"getPointerInfo\",value:function(t){return this.pointers[this.getPointerIndex(t)]}},{key:\"updatePointer\",value:function(t,e,n,r){var o=L.getPointerId(t),i=this.getPointerIndex(t),a=this.pointers[i];return r=!1!==r&&(r||/(down|start)$/i.test(e.type)),a?a.pointer=t:(a=new qe.PointerInfo(o,t,e,null,null),i=this.pointers.length,this.pointers.push(a)),L.setCoords(this.coords.cur,this.pointers.map((function(t){return t.pointer})),this._now()),L.setCoordDeltas(this.coords.delta,this.coords.prev,this.coords.cur),r&&(this.pointerIsDown=!0,a.downTime=this.coords.cur.timeStamp,a.downTarget=n,L.pointerExtend(this.downPointer,t),this.interacting()||(L.copyCoords(this.coords.start,this.coords.cur),L.copyCoords(this.coords.prev,this.coords.cur),this.downEvent=e,this.pointerWasMoved=!1)),this._updateLatestPointer(t,e,n),this._scopeFire(\"interactions:update-pointer\",{pointer:t,event:e,eventTarget:n,down:r,pointerInfo:a,pointerIndex:i,interaction:this}),i}},{key:\"removePointer\",value:function(t,e){var n=this.getPointerIndex(t);if(-1!==n){var r=this.pointers[n];this._scopeFire(\"interactions:remove-pointer\",{pointer:t,event:e,eventTarget:null,pointerIndex:n,pointerInfo:r,interaction:this}),this.pointers.splice(n,1)}}},{key:\"_updateLatestPointer\",value:function(t,e,n){this._latestPointer.pointer=t,this._latestPointer.event=e,this._latestPointer.eventTarget=n}},{key:\"destroy\",value:function(){this._latestPointer.pointer=null,this._latestPointer.event=null,this._latestPointer.eventTarget=null}},{key:\"_createPreparedEvent\",value:function(t,e,n,r){return new Re.InteractEvent(this,t,this.prepared.name,e,this.element,n,r)}},{key:\"_fireEvent\",value:function(t){this.interactable.fire(t),(!this.prevEvent||t.timeStamp>=this.prevEvent.timeStamp)&&(this.prevEvent=t)}},{key:\"_doPhase\",value:function(t){var e=t.event,n=t.phase,r=t.preEnd,o=t.type,i=this.rect;if(i&&\"move\"===n&&(I.addEdges(this.edges,i,this.coords.delta[this.interactable.options.deltaSource]),i.width=i.right-i.left,i.height=i.bottom-i.top),!1===this._scopeFire(\"interactions:before-action-\".concat(n),t))return!1;var a=t.iEvent=this._createPreparedEvent(e,n,r,o);return this._scopeFire(\"interactions:action-\".concat(n),t),\"start\"===n&&(this.prevEvent=a),this._fireEvent(a),this._scopeFire(\"interactions:after-action-\".concat(n),t),!0}},{key:\"_now\",value:function(){return Date.now()}}]),t}();$e.Interaction=Je;var Qe=Je;$e.default=Qe;var tn={};function en(t){t.pointerIsDown&&(an(t.coords.cur,t.offset.total),t.offset.pending.x=0,t.offset.pending.y=0)}function nn(t){rn(t.interaction)}function rn(t){if(!function(t){return!(!t.offset.pending.x&&!t.offset.pending.y)}(t))return!1;var e=t.offset.pending;return an(t.coords.cur,e),an(t.coords.delta,e),I.addEdges(t.edges,t.rect,e),e.x=0,e.y=0,!0}function on(t){var e=t.x,n=t.y;this.offset.pending.x+=e,this.offset.pending.y+=n,this.offset.total.x+=e,this.offset.total.y+=n}function an(t,e){var n=t.page,r=t.client,o=e.x,i=e.y;n.x+=o,n.y+=i,r.x+=o,r.y+=i}Object.defineProperty(tn,\"__esModule\",{value:!0}),tn.addTotal=en,tn.applyPending=rn,tn.default=void 0,$e._ProxyMethods.offsetBy=\"\";var sn={id:\"offset\",install:function(t){t.Interaction.prototype.offsetBy=on},listeners:{\"interactions:new\":function(t){t.interaction.offset={total:{x:0,y:0},pending:{x:0,y:0}}},\"interactions:update-pointer\":function(t){return en(t.interaction)},\"interactions:before-action-start\":nn,\"interactions:before-action-move\":nn,\"interactions:before-action-end\":function(t){var e=t.interaction;if(rn(e))return e.move({offset:!0}),e.end(),!1},\"interactions:stop\":function(t){var e=t.interaction;e.offset.total.x=0,e.offset.total.y=0,e.offset.pending.x=0,e.offset.pending.y=0}}};tn.default=sn;var ln={};function un(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}Object.defineProperty(ln,\"__esModule\",{value:!0}),ln.default=ln.InertiaState=void 0;var cn=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.active=!1,this.isModified=!1,this.smoothEnd=!1,this.allowResume=!1,this.modification=null,this.modifierCount=0,this.modifierArg=null,this.startCoords=null,this.t0=0,this.v0=0,this.te=0,this.targetOffset=null,this.modifiedOffset=null,this.currentOffset=null,this.lambda_v0=0,this.one_ve_v0=0,this.timeout=null,this.interaction=void 0,this.interaction=e}var e,n,r;return e=t,(n=[{key:\"start\",value:function(t){var e=this.interaction,n=fn(e);if(!n||!n.enabled)return!1;var r=e.coords.velocity.client,o=(0,F.default)(r.x,r.y),i=this.modification||(this.modification=new Oe.default(e));if(i.copyFrom(e.modification),this.t0=e._now(),this.allowResume=n.allowResume,this.v0=o,this.currentOffset={x:0,y:0},this.startCoords=e.coords.cur.page,this.modifierArg={interaction:e,interactable:e.interactable,element:e.element,rect:e.rect,edges:e.edges,pageCoords:this.startCoords,preEnd:!0,phase:\"inertiastart\"},this.t0-e.coords.cur.timeStamp<50&&o>n.minSpeed&&o>n.endSpeed)this.startInertia();else{if(i.result=i.setAll(this.modifierArg),!i.result.changed)return!1;this.startSmoothEnd()}return e.modification.result.rect=null,e.offsetBy(this.targetOffset),e._doPhase({interaction:e,event:t,phase:\"inertiastart\"}),e.offsetBy({x:-this.targetOffset.x,y:-this.targetOffset.y}),e.modification.result.rect=null,this.active=!0,e.simulation=this,!0}},{key:\"startInertia\",value:function(){var t=this,e=this.interaction.coords.velocity.client,n=fn(this.interaction),r=n.resistance,o=-Math.log(n.endSpeed/this.v0)/r;this.targetOffset={x:(e.x-o)/r,y:(e.y-o)/r},this.te=o,this.lambda_v0=r/this.v0,this.one_ve_v0=1-n.endSpeed/this.v0;var i=this.modification,a=this.modifierArg;a.pageCoords={x:this.startCoords.x+this.targetOffset.x,y:this.startCoords.y+this.targetOffset.y},i.result=i.setAll(a),i.result.changed&&(this.isModified=!0,this.modifiedOffset={x:this.targetOffset.x+i.result.delta.x,y:this.targetOffset.y+i.result.delta.y}),this.timeout=kt.default.request((function(){return t.inertiaTick()}))}},{key:\"startSmoothEnd\",value:function(){var t=this;this.smoothEnd=!0,this.isModified=!0,this.targetOffset={x:this.modification.result.delta.x,y:this.modification.result.delta.y},this.timeout=kt.default.request((function(){return t.smoothEndTick()}))}},{key:\"inertiaTick\",value:function(){var t,e,n,r,o,i,a,s=this,l=this.interaction,u=fn(l).resistance,c=(l._now()-this.t0)/1e3;if(c<this.te){var f,d=1-(Math.exp(-u*c)-this.lambda_v0)/this.one_ve_v0;this.isModified?(t=0,e=0,n=this.targetOffset.x,r=this.targetOffset.y,o=this.modifiedOffset.x,i=this.modifiedOffset.y,f={x:dn(a=d,t,n,o),y:dn(a,e,r,i)}):f={x:this.targetOffset.x*d,y:this.targetOffset.y*d};var p={x:f.x-this.currentOffset.x,y:f.y-this.currentOffset.y};this.currentOffset.x+=p.x,this.currentOffset.y+=p.y,l.offsetBy(p),l.move(),this.timeout=kt.default.request((function(){return s.inertiaTick()}))}else l.offsetBy({x:this.modifiedOffset.x-this.currentOffset.x,y:this.modifiedOffset.y-this.currentOffset.y}),this.end()}},{key:\"smoothEndTick\",value:function(){var t=this,e=this.interaction,n=e._now()-this.t0,r=fn(e).smoothEndDuration;if(n<r){var o={x:pn(n,0,this.targetOffset.x,r),y:pn(n,0,this.targetOffset.y,r)},i={x:o.x-this.currentOffset.x,y:o.y-this.currentOffset.y};this.currentOffset.x+=i.x,this.currentOffset.y+=i.y,e.offsetBy(i),e.move({skipModifiers:this.modifierCount}),this.timeout=kt.default.request((function(){return t.smoothEndTick()}))}else e.offsetBy({x:this.targetOffset.x-this.currentOffset.x,y:this.targetOffset.y-this.currentOffset.y}),this.end()}},{key:\"resume\",value:function(t){var e=t.pointer,n=t.event,r=t.eventTarget,o=this.interaction;o.offsetBy({x:-this.currentOffset.x,y:-this.currentOffset.y}),o.updatePointer(e,n,r,!0),o._doPhase({interaction:o,event:n,phase:\"resume\"}),(0,L.copyCoords)(o.coords.prev,o.coords.cur),this.stop()}},{key:\"end\",value:function(){this.interaction.move(),this.interaction.end(),this.stop()}},{key:\"stop\",value:function(){this.active=this.smoothEnd=!1,this.interaction.simulation=null,kt.default.cancel(this.timeout)}}])&&un(e.prototype,n),r&&un(e,r),t}();function fn(t){var e=t.interactable,n=t.prepared;return e&&e.options&&n.name&&e.options[n.name].inertia}function dn(t,e,n,r){var o=1-t;return o*o*e+2*o*t*n+t*t*r}function pn(t,e,n,r){return-n*(t/=r)*(t-2)+e}ln.InertiaState=cn;var vn={id:\"inertia\",before:[\"modifiers/base\"],install:function(t){var e=t.defaults;t.usePlugin(tn.default),t.usePlugin(De.default),t.actions.phases.inertiastart=!0,t.actions.phases.resume=!0,e.perAction.inertia={enabled:!1,resistance:10,minSpeed:100,endSpeed:10,allowResume:!0,smoothEndDuration:300}},listeners:{\"interactions:new\":function(t){var e=t.interaction;e.inertia=new cn(e)},\"interactions:before-action-end\":function(t){var e=t.interaction,n=t.event;return(!e._interacting||e.simulation||!e.inertia.start(n))&&null},\"interactions:down\":function(t){var e=t.interaction,n=t.eventTarget,r=e.inertia;if(r.active)for(var o=n;a.default.element(o);){if(o===e.element){r.resume(t);break}o=S.parentNode(o)}},\"interactions:stop\":function(t){var e=t.interaction.inertia;e.active&&e.stop()},\"interactions:before-action-resume\":function(t){var e=t.interaction.modification;e.stop(t),e.start(t,t.interaction.coords.cur.page),e.applyToInteraction(t)},\"interactions:before-action-inertiastart\":function(t){return t.interaction.modification.setAndApply(t)},\"interactions:action-resume\":De.addEventModifiers,\"interactions:action-inertiastart\":De.addEventModifiers,\"interactions:after-action-inertiastart\":function(t){return t.interaction.modification.restoreInteractionCoords(t)},\"interactions:after-action-resume\":function(t){return t.interaction.modification.restoreInteractionCoords(t)}}};ln.default=vn;var hn={};function gn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function yn(t,e){for(var n=0;n<e.length;n++){var r=e[n];if(t.immediatePropagationStopped)break;r(t)}}Object.defineProperty(hn,\"__esModule\",{value:!0}),hn.Eventable=void 0;var mn=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.options=void 0,this.types={},this.propagationStopped=!1,this.immediatePropagationStopped=!1,this.global=void 0,this.options=(0,k.default)({},e||{})}var e,n,r;return e=t,(n=[{key:\"fire\",value:function(t){var e,n=this.global;(e=this.types[t.type])&&yn(t,e),!t.propagationStopped&&n&&(e=n[t.type])&&yn(t,e)}},{key:\"on\",value:function(t,e){var n=(0,C.default)(t,e);for(t in n)this.types[t]=J.merge(this.types[t]||[],n[t])}},{key:\"off\",value:function(t,e){var n=(0,C.default)(t,e);for(t in n){var r=this.types[t];if(r&&r.length)for(var o=0;o<n[t].length;o++){var i=n[t][o],a=r.indexOf(i);-1!==a&&r.splice(a,1)}}}},{key:\"getRect\",value:function(t){return null}}])&&gn(e.prototype,n),r&&gn(e,r),t}();hn.Eventable=mn;var bn={};Object.defineProperty(bn,\"__esModule\",{value:!0}),bn.default=function(t,e){if(e.phaselessTypes[t])return!0;for(var n in e.map)if(0===t.indexOf(n)&&t.substr(n.length)in e.phases)return!0;return!1};var xn={};function wn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function _n(t,e,n){return e&&wn(t.prototype,e),n&&wn(t,n),t}Object.defineProperty(xn,\"__esModule\",{value:!0}),xn.Interactable=void 0;var Sn=function(){function t(n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.options=void 0,this._actions=void 0,this.target=void 0,this.events=new hn.Eventable,this._context=void 0,this._win=void 0,this._doc=void 0,this._scopeEvents=void 0,this._rectChecker=void 0,this._actions=r.actions,this.target=n,this._context=r.context||o,this._win=(0,e.getWindow)((0,S.trySelector)(n)?this._context:n),this._doc=this._win.document,this._scopeEvents=i,this.set(r)}return _n(t,[{key:\"_defaults\",get:function(){return{base:{},perAction:{},actions:{}}}}]),_n(t,[{key:\"setOnEvents\",value:function(t,e){return a.default.func(e.onstart)&&this.on(\"\".concat(t,\"start\"),e.onstart),a.default.func(e.onmove)&&this.on(\"\".concat(t,\"move\"),e.onmove),a.default.func(e.onend)&&this.on(\"\".concat(t,\"end\"),e.onend),a.default.func(e.oninertiastart)&&this.on(\"\".concat(t,\"inertiastart\"),e.oninertiastart),this}},{key:\"updatePerActionListeners\",value:function(t,e,n){(a.default.array(e)||a.default.object(e))&&this.off(t,e),(a.default.array(n)||a.default.object(n))&&this.on(t,n)}},{key:\"setPerAction\",value:function(t,e){var n=this._defaults;for(var r in e){var o=r,i=this.options[t],s=e[o];\"listeners\"===o&&this.updatePerActionListeners(t,i.listeners,s),a.default.array(s)?i[o]=J.from(s):a.default.plainObject(s)?(i[o]=(0,k.default)(i[o]||{},(0,Pe.default)(s)),a.default.object(n.perAction[o])&&\"enabled\"in n.perAction[o]&&(i[o].enabled=!1!==s.enabled)):a.default.bool(s)&&a.default.object(n.perAction[o])?i[o].enabled=s:i[o]=s}}},{key:\"getRect\",value:function(t){return t=t||(a.default.element(this.target)?this.target:null),a.default.string(this.target)&&(t=t||this._context.querySelector(this.target)),(0,S.getElementRect)(t)}},{key:\"rectChecker\",value:function(t){var e=this;return a.default.func(t)?(this._rectChecker=t,this.getRect=function(t){var n=(0,k.default)({},e._rectChecker(t));return\"width\"in n||(n.width=n.right-n.left,n.height=n.bottom-n.top),n},this):null===t?(delete this.getRect,delete this._rectChecker,this):this.getRect}},{key:\"_backCompatOption\",value:function(t,e){if((0,S.trySelector)(e)||a.default.object(e)){for(var n in this.options[t]=e,this._actions.map)this.options[n][t]=e;return this}return this.options[t]}},{key:\"origin\",value:function(t){return this._backCompatOption(\"origin\",t)}},{key:\"deltaSource\",value:function(t){return\"page\"===t||\"client\"===t?(this.options.deltaSource=t,this):this.options.deltaSource}},{key:\"context\",value:function(){return this._context}},{key:\"inContext\",value:function(t){return this._context===t.ownerDocument||(0,S.nodeContains)(this._context,t)}},{key:\"testIgnoreAllow\",value:function(t,e,n){return!this.testIgnore(t.ignoreFrom,e,n)&&this.testAllow(t.allowFrom,e,n)}},{key:\"testAllow\",value:function(t,e,n){return!t||!!a.default.element(n)&&(a.default.string(t)?(0,S.matchesUpTo)(n,t,e):!!a.default.element(t)&&(0,S.nodeContains)(t,n))}},{key:\"testIgnore\",value:function(t,e,n){return!(!t||!a.default.element(n))&&(a.default.string(t)?(0,S.matchesUpTo)(n,t,e):!!a.default.element(t)&&(0,S.nodeContains)(t,n))}},{key:\"fire\",value:function(t){return this.events.fire(t),this}},{key:\"_onOff\",value:function(t,e,n,r){a.default.object(e)&&!a.default.array(e)&&(r=n,n=null);var o=\"on\"===t?\"add\":\"remove\",i=(0,C.default)(e,n);for(var s in i){\"wheel\"===s&&(s=x.default.wheelEvent);for(var l=0;l<i[s].length;l++){var u=i[s][l];(0,bn.default)(s,this._actions)?this.events[t](s,u):a.default.string(this.target)?this._scopeEvents[\"\".concat(o,\"Delegate\")](this.target,this._context,s,u,r):this._scopeEvents[o](this.target,s,u,r)}}return this}},{key:\"on\",value:function(t,e,n){return this._onOff(\"on\",t,e,n)}},{key:\"off\",value:function(t,e,n){return this._onOff(\"off\",t,e,n)}},{key:\"set\",value:function(t){var e=this._defaults;for(var n in a.default.object(t)||(t={}),this.options=(0,Pe.default)(e.base),this._actions.methodDict){var r=n,o=this._actions.methodDict[r];this.options[r]={},this.setPerAction(r,(0,k.default)((0,k.default)({},e.perAction),e.actions[r])),this[o](t[r])}for(var i in t)a.default.func(this[i])&&this[i](t[i]);return this}},{key:\"unset\",value:function(){if(a.default.string(this.target))for(var t in this._scopeEvents.delegatedEvents)for(var e=this._scopeEvents.delegatedEvents[t],n=e.length-1;n>=0;n--){var r=e[n],o=r.selector,i=r.context,s=r.listeners;o===this.target&&i===this._context&&e.splice(n,1);for(var l=s.length-1;l>=0;l--)this._scopeEvents.removeDelegate(this.target,this._context,t,s[l][0],s[l][1])}else this._scopeEvents.remove(this.target,\"all\")}}]),t}();xn.Interactable=Sn;var Pn={};function On(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}Object.defineProperty(Pn,\"__esModule\",{value:!0}),Pn.InteractableSet=void 0;var En=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.list=[],this.selectorMap={},this.scope=void 0,this.scope=e,e.addListeners({\"interactable:unset\":function(t){var e=t.interactable,r=e.target,o=e._context,i=a.default.string(r)?n.selectorMap[r]:r[n.scope.id],s=i.findIndex((function(t){return t.context===o}));i[s]&&(i[s].context=null,i[s].interactable=null),i.splice(s,1)}})}var e,n,r;return e=t,(n=[{key:\"new\",value:function(t,e){e=(0,k.default)(e||{},{actions:this.scope.actions});var n=new this.scope.Interactable(t,e,this.scope.document,this.scope.events),r={context:n._context,interactable:n};return this.scope.addDocument(n._doc),this.list.push(n),a.default.string(t)?(this.selectorMap[t]||(this.selectorMap[t]=[]),this.selectorMap[t].push(r)):(n.target[this.scope.id]||Object.defineProperty(t,this.scope.id,{value:[],configurable:!0}),t[this.scope.id].push(r)),this.scope.fire(\"interactable:new\",{target:t,options:e,interactable:n,win:this.scope._win}),n}},{key:\"get\",value:function(t,e){var n=e&&e.context||this.scope.document,r=a.default.string(t),o=r?this.selectorMap[t]:t[this.scope.id];if(!o)return null;var i=J.find(o,(function(e){return e.context===n&&(r||e.interactable.inContext(t))}));return i&&i.interactable}},{key:\"forEachMatch\",value:function(t,e){for(var n=0;n<this.list.length;n++){var r=this.list[n],o=void 0;if((a.default.string(r.target)?a.default.element(t)&&S.matchesSelector(t,r.target):t===r.target)&&r.inContext(t)&&(o=e(r)),void 0!==o)return o}}}])&&On(e.prototype,n),r&&On(e,r),t}();Pn.InteractableSet=En;var Tn={};function Mn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function jn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return kn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return kn(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function kn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(Tn,\"__esModule\",{value:!0}),Tn.default=Tn.FakeEvent=void 0;var In=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.currentTarget=void 0,this.originalEvent=void 0,this.originalEvent=e,(0,X.default)(this,e)}var e,n,r;return e=t,(n=[{key:\"preventOriginalDefault\",value:function(){this.originalEvent.preventDefault()}},{key:\"stopPropagation\",value:function(){this.originalEvent.stopPropagation()}},{key:\"stopImmediatePropagation\",value:function(){this.originalEvent.stopImmediatePropagation()}}])&&Mn(e.prototype,n),r&&Mn(e,r),t}();function Dn(t){if(!a.default.object(t))return{capture:!!t,passive:!1};var e=(0,k.default)({},t);return e.capture=!!t.capture,e.passive=!!t.passive,e}Tn.FakeEvent=In;var An={id:\"events\",install:function(t){var e=[],n={},r=[],o={add:i,remove:s,addDelegate:function(t,e,o,a,s){var c=Dn(s);if(!n[o]){n[o]=[];for(var f=0;f<r.length;f++){var d=r[f];i(d,o,l),i(d,o,u,!0)}}var p=n[o],v=J.find(p,(function(n){return n.selector===t&&n.context===e}));v||(v={selector:t,context:e,listeners:[]},p.push(v));v.listeners.push([a,c])},removeDelegate:function(t,e,r,o,i){var a,c=Dn(i),f=n[r],d=!1;if(!f)return;for(a=f.length-1;a>=0;a--){var p=f[a];if(p.selector===t&&p.context===e){for(var v=p.listeners,h=v.length-1;h>=0;h--){var g=jn(v[h],2),y=g[0],m=g[1],b=m.capture,x=m.passive;if(y===o&&b===c.capture&&x===c.passive){v.splice(h,1),v.length||(f.splice(a,1),s(e,r,l),s(e,r,u,!0)),d=!0;break}}if(d)break}}},delegateListener:l,delegateUseCapture:u,delegatedEvents:n,documents:r,targets:e,supportsOptions:!1,supportsPassive:!1};function i(t,n,r,i){var a=Dn(i),s=J.find(e,(function(e){return e.eventTarget===t}));s||(s={eventTarget:t,events:{}},e.push(s)),s.events[n]||(s.events[n]=[]),t.addEventListener&&!J.contains(s.events[n],r)&&(t.addEventListener(n,r,o.supportsOptions?a:a.capture),s.events[n].push(r))}function s(t,n,r,i){var a=Dn(i),l=J.findIndex(e,(function(e){return e.eventTarget===t})),u=e[l];if(u&&u.events)if(\"all\"!==n){var c=!1,f=u.events[n];if(f){if(\"all\"===r){for(var d=f.length-1;d>=0;d--)s(t,n,f[d],a);return}for(var p=0;p<f.length;p++)if(f[p]===r){t.removeEventListener(n,r,o.supportsOptions?a:a.capture),f.splice(p,1),0===f.length&&(delete u.events[n],c=!0);break}}c&&!Object.keys(u.events).length&&e.splice(l,1)}else for(n in u.events)u.events.hasOwnProperty(n)&&s(t,n,\"all\")}function l(t,e){for(var r=Dn(e),o=new In(t),i=n[t.type],s=jn(L.getEventTargets(t),1)[0],l=s;a.default.element(l);){for(var u=0;u<i.length;u++){var c=i[u],f=c.selector,d=c.context;if(S.matchesSelector(l,f)&&S.nodeContains(d,s)&&S.nodeContains(d,l)){var p=c.listeners;o.currentTarget=l;for(var v=0;v<p.length;v++){var h=jn(p[v],2),g=h[0],y=h[1],m=y.capture,b=y.passive;m===r.capture&&b===r.passive&&g(o)}}}l=S.parentNode(l)}}function u(t){return l(t,!0)}return t.document.createElement(\"div\").addEventListener(\"test\",null,{get capture(){return o.supportsOptions=!0},get passive(){return o.supportsPassive=!0}}),t.events=o,o}};Tn.default=An;var zn={};Object.defineProperty(zn,\"__esModule\",{value:!0}),zn.createInteractStatic=function(t){var e=function e(n,r){var o=t.interactables.get(n,r);return o||((o=t.interactables.new(n,r)).events.global=e.globalEvents),o};return e.getPointerAverage=L.pointerAverage,e.getTouchBBox=L.touchBBox,e.getTouchDistance=L.touchDistance,e.getTouchAngle=L.touchAngle,e.getElementRect=S.getElementRect,e.getElementClientRect=S.getElementClientRect,e.matchesSelector=S.matchesSelector,e.closest=S.closest,e.globalEvents={},e.version=void 0,e.scope=t,e.use=function(t,e){return this.scope.usePlugin(t,e),this},e.isSet=function(t,e){return!!this.scope.interactables.get(t,e&&e.context)},e.on=function(t,e,n){if(a.default.string(t)&&-1!==t.search(\" \")&&(t=t.trim().split(/ +/)),a.default.array(t)){for(var r=0;r<t.length;r++){var o=t[r];this.on(o,e,n)}return this}if(a.default.object(t)){for(var i in t)this.on(i,t[i],e);return this}return(0,bn.default)(t,this.scope.actions)?this.globalEvents[t]?this.globalEvents[t].push(e):this.globalEvents[t]=[e]:this.scope.events.add(this.scope.document,t,e,{options:n}),this},e.off=function(t,e,n){if(a.default.string(t)&&-1!==t.search(\" \")&&(t=t.trim().split(/ +/)),a.default.array(t)){for(var r=0;r<t.length;r++){var o=t[r];this.off(o,e,n)}return this}if(a.default.object(t)){for(var i in t)this.off(i,t[i],e);return this}var s;(0,bn.default)(t,this.scope.actions)?t in this.globalEvents&&-1!==(s=this.globalEvents[t].indexOf(e))&&this.globalEvents[t].splice(s,1):this.scope.events.remove(this.scope.document,t,e,n);return this},e.debug=function(){return this.scope},e.supportsTouch=function(){return x.default.supportsTouch},e.supportsPointerEvent=function(){return x.default.supportsPointerEvent},e.stop=function(){for(var t=0;t<this.scope.interactions.list.length;t++){this.scope.interactions.list[t].stop()}return this},e.pointerMoveTolerance=function(t){return a.default.number(t)?(this.scope.interactions.pointerMoveTolerance=t,this):this.scope.interactions.pointerMoveTolerance},e.addDocument=function(t,e){this.scope.addDocument(t,e)},e.removeDocument=function(t){this.scope.removeDocument(t)},e};var Cn={};Object.defineProperty(Cn,\"__esModule\",{value:!0}),Cn.default=void 0;var Rn={methodOrder:[\"simulationResume\",\"mouseOrPen\",\"hasPointer\",\"idle\"],search:function(t){for(var e=0;e<Rn.methodOrder.length;e++){var n;n=Rn.methodOrder[e];var r=Rn[n](t);if(r)return r}return null},simulationResume:function(t){var e=t.pointerType,n=t.eventType,r=t.eventTarget,o=t.scope;if(!/down|start/i.test(n))return null;for(var i=0;i<o.interactions.list.length;i++){var a=o.interactions.list[i],s=r;if(a.simulation&&a.simulation.allowResume&&a.pointerType===e)for(;s;){if(s===a.element)return a;s=S.parentNode(s)}}return null},mouseOrPen:function(t){var e,n=t.pointerId,r=t.pointerType,o=t.eventType,i=t.scope;if(\"mouse\"!==r&&\"pen\"!==r)return null;for(var a=0;a<i.interactions.list.length;a++){var s=i.interactions.list[a];if(s.pointerType===r){if(s.simulation&&!Fn(s,n))continue;if(s.interacting())return s;e||(e=s)}}if(e)return e;for(var l=0;l<i.interactions.list.length;l++){var u=i.interactions.list[l];if(!(u.pointerType!==r||/down/i.test(o)&&u.simulation))return u}return null},hasPointer:function(t){for(var e=t.pointerId,n=t.scope,r=0;r<n.interactions.list.length;r++){var o=n.interactions.list[r];if(Fn(o,e))return o}return null},idle:function(t){for(var e=t.pointerType,n=t.scope,r=0;r<n.interactions.list.length;r++){var o=n.interactions.list[r];if(1===o.pointers.length){var i=o.interactable;if(i&&(!i.options.gesture||!i.options.gesture.enabled))continue}else if(o.pointers.length>=2)continue;if(!o.interacting()&&e===o.pointerType)return o}return null}};function Fn(t,e){return t.pointers.some((function(t){return t.id===e}))}var Xn=Rn;Cn.default=Xn;var Yn={};function Wn(t){return(Wn=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function Ln(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return Bn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Bn(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Bn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function Un(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function Vn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function qn(t,e){return(qn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Nn(t){var e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=$n(t);if(e){var o=$n(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Gn(this,n)}}function Gn(t,e){return!e||\"object\"!==Wn(e)&&\"function\"!=typeof e?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):e}function $n(t){return($n=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperty(Yn,\"__esModule\",{value:!0}),Yn.default=void 0;var Hn=[\"pointerDown\",\"pointerMove\",\"pointerUp\",\"updatePointer\",\"removePointer\",\"windowBlur\"];function Kn(t,e){return function(n){var r=e.interactions.list,o=L.getPointerType(n),i=Ln(L.getEventTargets(n),2),a=i[0],s=i[1],l=[];if(/^touch/.test(n.type)){e.prevTouchTime=e.now();for(var u=0;u<n.changedTouches.length;u++){var c=n.changedTouches[u],f={pointer:c,pointerId:L.getPointerId(c),pointerType:o,eventType:n.type,eventTarget:a,curEventTarget:s,scope:e},d=Zn(f);l.push([f.pointer,f.eventTarget,f.curEventTarget,d])}}else{var p=!1;if(!x.default.supportsPointerEvent&&/mouse/.test(n.type)){for(var v=0;v<r.length&&!p;v++)p=\"mouse\"!==r[v].pointerType&&r[v].pointerIsDown;p=p||e.now()-e.prevTouchTime<500||0===n.timeStamp}if(!p){var h={pointer:n,pointerId:L.getPointerId(n),pointerType:o,eventType:n.type,curEventTarget:s,eventTarget:a,scope:e},g=Zn(h);l.push([h.pointer,h.eventTarget,h.curEventTarget,g])}}for(var y=0;y<l.length;y++){var m=Ln(l[y],4),b=m[0],w=m[1],_=m[2];m[3][t](b,n,w,_)}}}function Zn(t){var e=t.pointerType,n=t.scope,r={interaction:Cn.default.search(t),searchDetails:t};return n.fire(\"interactions:find\",r),r.interaction||n.interactions.new({pointerType:e})}function Jn(t,e){var n=t.doc,r=t.scope,o=t.options,i=r.interactions.docEvents,a=r.events,s=a[e];for(var l in r.browser.isIOS&&!o.events&&(o.events={passive:!1}),a.delegatedEvents)s(n,l,a.delegateListener),s(n,l,a.delegateUseCapture,!0);for(var u=o&&o.events,c=0;c<i.length;c++){var f=i[c];s(n,f.type,f.listener,u)}}var Qn={id:\"core/interactions\",install:function(t){for(var e={},n=0;n<Hn.length;n++){var r=Hn[n];e[r]=Kn(r,t)}var o,i=x.default.pEventTypes;function a(){for(var e=0;e<t.interactions.list.length;e++){var n=t.interactions.list[e];if(n.pointerIsDown&&\"touch\"===n.pointerType&&!n._interacting)for(var r=function(){var e=n.pointers[o];t.documents.some((function(t){var n=t.doc;return(0,S.nodeContains)(n,e.downTarget)}))||n.removePointer(e.pointer,e.event)},o=0;o<n.pointers.length;o++){r()}}}(o=g.default.PointerEvent?[{type:i.down,listener:a},{type:i.down,listener:e.pointerDown},{type:i.move,listener:e.pointerMove},{type:i.up,listener:e.pointerUp},{type:i.cancel,listener:e.pointerUp}]:[{type:\"mousedown\",listener:e.pointerDown},{type:\"mousemove\",listener:e.pointerMove},{type:\"mouseup\",listener:e.pointerUp},{type:\"touchstart\",listener:a},{type:\"touchstart\",listener:e.pointerDown},{type:\"touchmove\",listener:e.pointerMove},{type:\"touchend\",listener:e.pointerUp},{type:\"touchcancel\",listener:e.pointerUp}]).push({type:\"blur\",listener:function(e){for(var n=0;n<t.interactions.list.length;n++){t.interactions.list[n].documentBlur(e)}}}),t.prevTouchTime=0,t.Interaction=function(e){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&qn(t,e)}(a,e);var n,r,o,i=Nn(a);function a(){return Un(this,a),i.apply(this,arguments)}return n=a,(r=[{key:\"_now\",value:function(){return t.now()}},{key:\"pointerMoveTolerance\",get:function(){return t.interactions.pointerMoveTolerance},set:function(e){t.interactions.pointerMoveTolerance=e}}])&&Vn(n.prototype,r),o&&Vn(n,o),a}($e.default),t.interactions={list:[],new:function(e){e.scopeFire=function(e,n){return t.fire(e,n)};var n=new t.Interaction(e);return t.interactions.list.push(n),n},listeners:e,docEvents:o,pointerMoveTolerance:1},t.usePlugin(ue.default)},listeners:{\"scope:add-document\":function(t){return Jn(t,\"add\")},\"scope:remove-document\":function(t){return Jn(t,\"remove\")},\"interactable:unset\":function(t,e){for(var n=t.interactable,r=e.interactions.list.length-1;r>=0;r--){var o=e.interactions.list[r];o.interactable===n&&(o.stop(),e.fire(\"interactions:destroy\",{interaction:o}),o.destroy(),e.interactions.list.length>2&&e.interactions.list.splice(r,1))}}},onDocSignal:Jn,doOnInteractions:Kn,methodNames:Hn};Yn.default=Qn;var tr={};function er(t){return(er=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function nr(t,e,n){return(nr=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=ar(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function rr(t,e){return(rr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function or(t){var e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ar(t);if(e){var o=ar(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return ir(this,n)}}function ir(t,e){return!e||\"object\"!==er(e)&&\"function\"!=typeof e?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):e}function ar(t){return(ar=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function sr(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function lr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ur(t,e,n){return e&&lr(t.prototype,e),n&&lr(t,n),t}Object.defineProperty(tr,\"__esModule\",{value:!0}),tr.initScope=fr,tr.Scope=void 0;var cr=function(){function t(){var e=this;sr(this,t),this.id=\"__interact_scope_\".concat(Math.floor(100*Math.random())),this.isInitialized=!1,this.listenerMaps=[],this.browser=x.default,this.defaults=(0,Pe.default)(Ce.defaults),this.Eventable=hn.Eventable,this.actions={map:{},phases:{start:!0,move:!0,end:!0},methodDict:{},phaselessTypes:{}},this.interactStatic=(0,zn.createInteractStatic)(this),this.InteractEvent=Re.InteractEvent,this.Interactable=void 0,this.interactables=new Pn.InteractableSet(this),this._win=void 0,this.document=void 0,this.window=void 0,this.documents=[],this._plugins={list:[],map:{}},this.onWindowUnload=function(t){return e.removeDocument(t.target)};var n=this;this.Interactable=function(t){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&rr(t,e)}(r,t);var e=or(r);function r(){return sr(this,r),e.apply(this,arguments)}return ur(r,[{key:\"set\",value:function(t){return nr(ar(r.prototype),\"set\",this).call(this,t),n.fire(\"interactable:set\",{options:t,interactable:this}),this}},{key:\"unset\",value:function(){nr(ar(r.prototype),\"unset\",this).call(this),n.interactables.list.splice(n.interactables.list.indexOf(this),1),n.fire(\"interactable:unset\",{interactable:this})}},{key:\"_defaults\",get:function(){return n.defaults}}]),r}(xn.Interactable)}return ur(t,[{key:\"addListeners\",value:function(t,e){this.listenerMaps.push({id:e,map:t})}},{key:\"fire\",value:function(t,e){for(var n=0;n<this.listenerMaps.length;n++){var r=this.listenerMaps[n].map[t];if(r&&!1===r(e,this,t))return!1}}},{key:\"init\",value:function(t){return this.isInitialized?this:fr(this,t)}},{key:\"pluginIsInstalled\",value:function(t){return this._plugins.map[t.id]||-1!==this._plugins.list.indexOf(t)}},{key:\"usePlugin\",value:function(t,e){if(!this.isInitialized)return this;if(this.pluginIsInstalled(t))return this;if(t.id&&(this._plugins.map[t.id]=t),this._plugins.list.push(t),t.install&&t.install(this,e),t.listeners&&t.before){for(var n=0,r=this.listenerMaps.length,o=t.before.reduce((function(t,e){return t[e]=!0,t}),{});n<r;n++){if(o[this.listenerMaps[n].id])break}this.listenerMaps.splice(n,0,{id:t.id,map:t.listeners})}else t.listeners&&this.listenerMaps.push({id:t.id,map:t.listeners});return this}},{key:\"addDocument\",value:function(t,n){if(-1!==this.getDocIndex(t))return!1;var r=e.default.getWindow(t);n=n?(0,k.default)({},n):{},this.documents.push({doc:t,options:n}),this.events.documents.push(t),t!==this.document&&this.events.add(r,\"unload\",this.onWindowUnload),this.fire(\"scope:add-document\",{doc:t,window:r,scope:this,options:n})}},{key:\"removeDocument\",value:function(t){var n=this.getDocIndex(t),r=e.default.getWindow(t),o=this.documents[n].options;this.events.remove(r,\"unload\",this.onWindowUnload),this.documents.splice(n,1),this.events.documents.splice(n,1),this.fire(\"scope:remove-document\",{doc:t,window:r,scope:this,options:o})}},{key:\"getDocIndex\",value:function(t){for(var e=0;e<this.documents.length;e++)if(this.documents[e].doc===t)return e;return-1}},{key:\"getDocOptions\",value:function(t){var e=this.getDocIndex(t);return-1===e?null:this.documents[e].options}},{key:\"now\",value:function(){return(this.window.Date||Date).now()}}]),t}();function fr(t,n){return t.isInitialized=!0,e.default.init(n),g.default.init(n),x.default.init(n),kt.default.init(n),t.window=n,t.document=n.document,t.usePlugin(Yn.default),t.usePlugin(Tn.default),t}tr.Scope=cr;var dr={};function pr(t){return(pr=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(dr,\"__esModule\",{value:!0}),dr.init=dr.default=void 0;var vr=new tr.Scope,hr=vr.interactStatic;dr.default=hr;var gr=function(t){return vr.init(t)};dr.init=gr,\"object\"===(\"undefined\"==typeof window?\"undefined\":pr(window))&&window&&gr(window);var yr={};Object.defineProperty(yr,\"__esModule\",{value:!0}),yr.default=void 0;yr.default=function(){};var mr={};Object.defineProperty(mr,\"__esModule\",{value:!0}),mr.default=void 0;mr.default=function(){};var br={};function xr(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return wr(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return wr(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function wr(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(br,\"__esModule\",{value:!0}),br.default=void 0;br.default=function(t){var e=[[\"x\",\"y\"],[\"left\",\"top\"],[\"right\",\"bottom\"],[\"width\",\"height\"]].filter((function(e){var n=xr(e,2),r=n[0],o=n[1];return r in t||o in t})),n=function(n,r){for(var o=t.range,i=t.limits,a=void 0===i?{left:-1/0,right:1/0,top:-1/0,bottom:1/0}:i,s=t.offset,l=void 0===s?{x:0,y:0}:s,u={range:o,grid:t,x:null,y:null},c=0;c<e.length;c++){var f=xr(e[c],2),d=f[0],p=f[1],v=Math.round((n-l.x)/t[d]),h=Math.round((r-l.y)/t[p]);u[d]=Math.max(a.left,Math.min(a.right,v*t[d]+l.x)),u[p]=Math.max(a.top,Math.min(a.bottom,h*t[p]+l.y))}return u};return n.grid=t,n.coordFields=e,n};var _r={};Object.defineProperty(_r,\"__esModule\",{value:!0}),Object.defineProperty(_r,\"edgeTarget\",{enumerable:!0,get:function(){return yr.default}}),Object.defineProperty(_r,\"elements\",{enumerable:!0,get:function(){return mr.default}}),Object.defineProperty(_r,\"grid\",{enumerable:!0,get:function(){return br.default}});var Sr={};Object.defineProperty(Sr,\"__esModule\",{value:!0}),Sr.default=void 0;var Pr={id:\"snappers\",install:function(t){var e=t.interactStatic;e.snappers=(0,k.default)(e.snappers||{},_r),e.createSnapGrid=e.snappers.grid}};Sr.default=Pr;var Or={};function Er(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Tr(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Er(Object(n),!0).forEach((function(e){Mr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Er(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Mr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(Or,\"__esModule\",{value:!0}),Or.aspectRatio=Or.default=void 0;var jr={start:function(t){var e=t.state,n=t.rect,r=t.edges,o=t.pageCoords,i=e.options.ratio,a=e.options,s=a.equalDelta,l=a.modifiers;\"preserve\"===i&&(i=n.width/n.height),e.startCoords=(0,k.default)({},o),e.startRect=(0,k.default)({},n),e.ratio=i,e.equalDelta=s;var u=e.linkedEdges={top:r.top||r.left&&!r.bottom,left:r.left||r.top&&!r.right,bottom:r.bottom||r.right&&!r.top,right:r.right||r.bottom&&!r.left};if(e.xIsPrimaryAxis=!(!r.left&&!r.right),e.equalDelta)e.edgeSign=(u.left?1:-1)*(u.top?1:-1);else{var c=e.xIsPrimaryAxis?u.top:u.left;e.edgeSign=c?-1:1}if((0,k.default)(t.edges,u),l&&l.length){var f=new Oe.default(t.interaction);f.copyFrom(t.interaction.modification),f.prepareStates(l),e.subModification=f,f.startAll(Tr({},t))}},set:function(t){var e=t.state,n=t.rect,r=t.coords,o=(0,k.default)({},r),i=e.equalDelta?kr:Ir;if(i(e,e.xIsPrimaryAxis,r,n),!e.subModification)return null;var a=(0,k.default)({},n);(0,I.addEdges)(e.linkedEdges,a,{x:r.x-o.x,y:r.y-o.y});var s=e.subModification.setAll(Tr(Tr({},t),{},{rect:a,edges:e.linkedEdges,pageCoords:r,prevCoords:r,prevRect:a})),l=s.delta;s.changed&&(i(e,Math.abs(l.x)>Math.abs(l.y),s.coords,s.rect),(0,k.default)(r,s.coords));return s.eventProps},defaults:{ratio:\"preserve\",equalDelta:!1,modifiers:[],enabled:!1}};function kr(t,e,n){var r=t.startCoords,o=t.edgeSign;e?n.y=r.y+(n.x-r.x)*o:n.x=r.x+(n.y-r.y)*o}function Ir(t,e,n,r){var o=t.startRect,i=t.startCoords,a=t.ratio,s=t.edgeSign;if(e){var l=r.width/a;n.y=i.y+(l-o.height)*s}else{var u=r.height*a;n.x=i.x+(u-o.width)*s}}Or.aspectRatio=jr;var Dr=(0,De.makeModifier)(jr,\"aspectRatio\");Or.default=Dr;var Ar={};Object.defineProperty(Ar,\"__esModule\",{value:!0}),Ar.default=void 0;var zr=function(){};zr._defaults={};var Cr=zr;Ar.default=Cr;var Rr={};Object.defineProperty(Rr,\"__esModule\",{value:!0}),Object.defineProperty(Rr,\"default\",{enumerable:!0,get:function(){return Ar.default}});var Fr={};function Xr(t,e,n){return a.default.func(t)?I.resolveRectLike(t,e.interactable,e.element,[n.x,n.y,e]):I.resolveRectLike(t,e.interactable,e.element)}Object.defineProperty(Fr,\"__esModule\",{value:!0}),Fr.getRestrictionRect=Xr,Fr.restrict=Fr.default=void 0;var Yr={start:function(t){var e=t.rect,n=t.startOffset,r=t.state,o=t.interaction,i=t.pageCoords,a=r.options,s=a.elementRect,l=(0,k.default)({left:0,top:0,right:0,bottom:0},a.offset||{});if(e&&s){var u=Xr(a.restriction,o,i);if(u){var c=u.right-u.left-e.width,f=u.bottom-u.top-e.height;c<0&&(l.left+=c,l.right+=c),f<0&&(l.top+=f,l.bottom+=f)}l.left+=n.left-e.width*s.left,l.top+=n.top-e.height*s.top,l.right+=n.right-e.width*(1-s.right),l.bottom+=n.bottom-e.height*(1-s.bottom)}r.offset=l},set:function(t){var e=t.coords,n=t.interaction,r=t.state,o=r.options,i=r.offset,a=Xr(o.restriction,n,e);if(a){var s=I.xywhToTlbr(a);e.x=Math.max(Math.min(s.right-i.right,e.x),s.left+i.left),e.y=Math.max(Math.min(s.bottom-i.bottom,e.y),s.top+i.top)}},defaults:{restriction:null,elementRect:null,offset:null,endOnly:!1,enabled:!1}};Fr.restrict=Yr;var Wr=(0,De.makeModifier)(Yr,\"restrict\");Fr.default=Wr;var Lr={};Object.defineProperty(Lr,\"__esModule\",{value:!0}),Lr.restrictEdges=Lr.default=void 0;var Br={top:1/0,left:1/0,bottom:-1/0,right:-1/0},Ur={top:-1/0,left:-1/0,bottom:1/0,right:1/0};function Vr(t,e){for(var n=[\"top\",\"left\",\"bottom\",\"right\"],r=0;r<n.length;r++){var o=n[r];o in t||(t[o]=e[o])}return t}var qr={noInner:Br,noOuter:Ur,start:function(t){var e,n=t.interaction,r=t.startOffset,o=t.state,i=o.options;if(i){var a=(0,Fr.getRestrictionRect)(i.offset,n,n.coords.start.page);e=I.rectToXY(a)}e=e||{x:0,y:0},o.offset={top:e.y+r.top,left:e.x+r.left,bottom:e.y-r.bottom,right:e.x-r.right}},set:function(t){var e=t.coords,n=t.edges,r=t.interaction,o=t.state,i=o.offset,a=o.options;if(n){var s=(0,k.default)({},e),l=(0,Fr.getRestrictionRect)(a.inner,r,s)||{},u=(0,Fr.getRestrictionRect)(a.outer,r,s)||{};Vr(l,Br),Vr(u,Ur),n.top?e.y=Math.min(Math.max(u.top+i.top,s.y),l.top+i.top):n.bottom&&(e.y=Math.max(Math.min(u.bottom+i.bottom,s.y),l.bottom+i.bottom)),n.left?e.x=Math.min(Math.max(u.left+i.left,s.x),l.left+i.left):n.right&&(e.x=Math.max(Math.min(u.right+i.right,s.x),l.right+i.right))}},defaults:{inner:null,outer:null,offset:null,endOnly:!1,enabled:!1}};Lr.restrictEdges=qr;var Nr=(0,De.makeModifier)(qr,\"restrictEdges\");Lr.default=Nr;var Gr={};Object.defineProperty(Gr,\"__esModule\",{value:!0}),Gr.restrictRect=Gr.default=void 0;var $r=(0,k.default)({get elementRect(){return{top:0,left:0,bottom:1,right:1}},set elementRect(t){}},Fr.restrict.defaults),Hr={start:Fr.restrict.start,set:Fr.restrict.set,defaults:$r};Gr.restrictRect=Hr;var Kr=(0,De.makeModifier)(Hr,\"restrictRect\");Gr.default=Kr;var Zr={};Object.defineProperty(Zr,\"__esModule\",{value:!0}),Zr.restrictSize=Zr.default=void 0;var Jr={width:-1/0,height:-1/0},Qr={width:1/0,height:1/0};var to={start:function(t){return Lr.restrictEdges.start(t)},set:function(t){var e=t.interaction,n=t.state,r=t.rect,o=t.edges,i=n.options;if(o){var a=I.tlbrToXywh((0,Fr.getRestrictionRect)(i.min,e,t.coords))||Jr,s=I.tlbrToXywh((0,Fr.getRestrictionRect)(i.max,e,t.coords))||Qr;n.options={endOnly:i.endOnly,inner:(0,k.default)({},Lr.restrictEdges.noInner),outer:(0,k.default)({},Lr.restrictEdges.noOuter)},o.top?(n.options.inner.top=r.bottom-a.height,n.options.outer.top=r.bottom-s.height):o.bottom&&(n.options.inner.bottom=r.top+a.height,n.options.outer.bottom=r.top+s.height),o.left?(n.options.inner.left=r.right-a.width,n.options.outer.left=r.right-s.width):o.right&&(n.options.inner.right=r.left+a.width,n.options.outer.right=r.left+s.width),Lr.restrictEdges.set(t),n.options=i}},defaults:{min:null,max:null,endOnly:!1,enabled:!1}};Zr.restrictSize=to;var eo=(0,De.makeModifier)(to,\"restrictSize\");Zr.default=eo;var no={};Object.defineProperty(no,\"__esModule\",{value:!0}),Object.defineProperty(no,\"default\",{enumerable:!0,get:function(){return Ar.default}});var ro={};Object.defineProperty(ro,\"__esModule\",{value:!0}),ro.snap=ro.default=void 0;var oo={start:function(t){var e,n=t.interaction,r=t.interactable,o=t.element,i=t.rect,a=t.state,s=t.startOffset,l=a.options,u=l.offsetWithOrigin?function(t){var e=t.interaction.element;return(0,I.rectToXY)((0,I.resolveRectLike)(t.state.options.origin,null,null,[e]))||(0,z.default)(t.interactable,e,t.interaction.prepared.name)}(t):{x:0,y:0};if(\"startCoords\"===l.offset)e={x:n.coords.start.page.x,y:n.coords.start.page.y};else{var c=(0,I.resolveRectLike)(l.offset,r,o,[n]);(e=(0,I.rectToXY)(c)||{x:0,y:0}).x+=u.x,e.y+=u.y}var f=l.relativePoints;a.offsets=i&&f&&f.length?f.map((function(t,n){return{index:n,relativePoint:t,x:s.left-i.width*t.x+e.x,y:s.top-i.height*t.y+e.y}})):[(0,k.default)({index:0,relativePoint:null},e)]},set:function(t){var e=t.interaction,n=t.coords,r=t.state,o=r.options,i=r.offsets,s=(0,z.default)(e.interactable,e.element,e.prepared.name),l=(0,k.default)({},n),u=[];o.offsetWithOrigin||(l.x-=s.x,l.y-=s.y);for(var c=0;c<i.length;c++)for(var f=i[c],d=l.x-f.x,p=l.y-f.y,v=0,h=o.targets.length;v<h;v++){var g=o.targets[v],y=void 0;(y=a.default.func(g)?g(d,p,e._proxy,f,v):g)&&u.push({x:(a.default.number(y.x)?y.x:d)+f.x,y:(a.default.number(y.y)?y.y:p)+f.y,range:a.default.number(y.range)?y.range:o.range,source:g,index:v,offset:f})}for(var m={target:null,inRange:!1,distance:0,range:0,delta:{x:0,y:0}},b=0;b<u.length;b++){var x=u[b],w=x.range,_=x.x-l.x,S=x.y-l.y,P=(0,F.default)(_,S),O=P<=w;w===1/0&&m.inRange&&m.range!==1/0&&(O=!1),m.target&&!(O?m.inRange&&w!==1/0?P/w<m.distance/m.range:w===1/0&&m.range!==1/0||P<m.distance:!m.inRange&&P<m.distance)||(m.target=x,m.distance=P,m.range=w,m.inRange=O,m.delta.x=_,m.delta.y=S)}return m.inRange&&(n.x=m.target.x,n.y=m.target.y),r.closest=m,m},defaults:{range:1/0,targets:null,offset:null,offsetWithOrigin:!0,origin:null,relativePoints:null,endOnly:!1,enabled:!1}};ro.snap=oo;var io=(0,De.makeModifier)(oo,\"snap\");ro.default=io;var ao={};function so(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return lo(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return lo(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function lo(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}Object.defineProperty(ao,\"__esModule\",{value:!0}),ao.snapSize=ao.default=void 0;var uo={start:function(t){var e=t.state,n=t.edges,r=e.options;if(!n)return null;t.state={options:{targets:null,relativePoints:[{x:n.left?0:1,y:n.top?0:1}],offset:r.offset||\"self\",origin:{x:0,y:0},range:r.range}},e.targetFields=e.targetFields||[[\"width\",\"height\"],[\"x\",\"y\"]],ro.snap.start(t),e.offsets=t.state.offsets,t.state=e},set:function(t){var e=t.interaction,n=t.state,r=t.coords,o=n.options,i=n.offsets,s={x:r.x-i[0].x,y:r.y-i[0].y};n.options=(0,k.default)({},o),n.options.targets=[];for(var l=0;l<(o.targets||[]).length;l++){var u=(o.targets||[])[l],c=void 0;if(c=a.default.func(u)?u(s.x,s.y,e):u){for(var f=0;f<n.targetFields.length;f++){var d=so(n.targetFields[f],2),p=d[0],v=d[1];if(p in c||v in c){c.x=c[p],c.y=c[v];break}}n.options.targets.push(c)}}var h=ro.snap.set(t);return n.options=o,h},defaults:{range:1/0,targets:null,offset:null,endOnly:!1,enabled:!1}};ao.snapSize=uo;var co=(0,De.makeModifier)(uo,\"snapSize\");ao.default=co;var fo={};Object.defineProperty(fo,\"__esModule\",{value:!0}),fo.snapEdges=fo.default=void 0;var po={start:function(t){var e=t.edges;return e?(t.state.targetFields=t.state.targetFields||[[e.left?\"left\":\"right\",e.top?\"top\":\"bottom\"]],ao.snapSize.start(t)):null},set:ao.snapSize.set,defaults:(0,k.default)((0,Pe.default)(ao.snapSize.defaults),{targets:null,range:null,offset:{x:0,y:0}})};fo.snapEdges=po;var vo=(0,De.makeModifier)(po,\"snapEdges\");fo.default=vo;var ho={};Object.defineProperty(ho,\"__esModule\",{value:!0}),Object.defineProperty(ho,\"default\",{enumerable:!0,get:function(){return Ar.default}});var go={};Object.defineProperty(go,\"__esModule\",{value:!0}),Object.defineProperty(go,\"default\",{enumerable:!0,get:function(){return Ar.default}});var yo={};Object.defineProperty(yo,\"__esModule\",{value:!0}),yo.default=void 0;var mo={aspectRatio:Or.default,restrictEdges:Lr.default,restrict:Fr.default,restrictRect:Gr.default,restrictSize:Zr.default,snapEdges:fo.default,snap:ro.default,snapSize:ao.default,spring:ho.default,avoid:Rr.default,transform:go.default,rubberband:no.default};yo.default=mo;var bo={};Object.defineProperty(bo,\"__esModule\",{value:!0}),bo.default=void 0;var xo={id:\"modifiers\",install:function(t){var e=t.interactStatic;for(var n in t.usePlugin(De.default),t.usePlugin(Sr.default),e.modifiers=yo.default,yo.default){var r=yo.default[n],o=r._defaults,i=r._methods;o._methods=i,t.defaults.perAction[n]=o}}};bo.default=xo;var wo={};Object.defineProperty(wo,\"__esModule\",{value:!0}),wo.default=void 0;wo.default={};var _o={};function So(t){return(So=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function Po(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Oo(t,e){return(Oo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Eo(t){var e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=jo(t);if(e){var o=jo(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return To(this,n)}}function To(t,e){return!e||\"object\"!==So(e)&&\"function\"!=typeof e?Mo(t):e}function Mo(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function jo(t){return(jo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Object.defineProperty(_o,\"__esModule\",{value:!0}),_o.PointerEvent=_o.default=void 0;var ko=function(t){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Oo(t,e)}(i,t);var e,n,r,o=Eo(i);function i(t,e,n,r,a,s){var l;if(function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(l=o.call(this,a)).type=void 0,l.originalEvent=void 0,l.pointerId=void 0,l.pointerType=void 0,l.double=void 0,l.pageX=void 0,l.pageY=void 0,l.clientX=void 0,l.clientY=void 0,l.dt=void 0,l.eventable=void 0,L.pointerExtend(Mo(l),n),n!==e&&L.pointerExtend(Mo(l),e),l.timeStamp=s,l.originalEvent=n,l.type=t,l.pointerId=L.getPointerId(e),l.pointerType=L.getPointerType(e),l.target=r,l.currentTarget=null,\"tap\"===t){var u=a.getPointerIndex(e);l.dt=l.timeStamp-a.pointers[u].downTime;var c=l.timeStamp-a.tapTime;l.double=!!(a.prevTap&&\"doubletap\"!==a.prevTap.type&&a.prevTap.target===l.target&&c<500)}else\"doubletap\"===t&&(l.dt=e.timeStamp-a.tapTime);return l}return e=i,(n=[{key:\"_subtractOrigin\",value:function(t){var e=t.x,n=t.y;return this.pageX-=e,this.pageY-=n,this.clientX-=e,this.clientY-=n,this}},{key:\"_addOrigin\",value:function(t){var e=t.x,n=t.y;return this.pageX+=e,this.pageY+=n,this.clientX+=e,this.clientY+=n,this}},{key:\"preventDefault\",value:function(){this.originalEvent.preventDefault()}}])&&Po(e.prototype,n),r&&Po(e,r),i}($.default);_o.PointerEvent=_o.default=ko;var Io={};Object.defineProperty(Io,\"__esModule\",{value:!0}),Io.default=void 0;var Do={id:\"pointer-events/base\",install:function(t){t.pointerEvents=Do,t.defaults.actions.pointerEvents=Do.defaults,(0,k.default)(t.actions.phaselessTypes,Do.types)},listeners:{\"interactions:new\":function(t){var e=t.interaction;e.prevTap=null,e.tapTime=0},\"interactions:update-pointer\":function(t){var e=t.down,n=t.pointerInfo;if(!e&&n.hold)return;n.hold={duration:1/0,timeout:null}},\"interactions:move\":function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.duplicate,s=n.getPointerIndex(r);a||n.pointerIsDown&&!n.pointerWasMoved||(n.pointerIsDown&&clearTimeout(n.pointers[s].hold.timeout),Ao({interaction:n,pointer:r,event:o,eventTarget:i,type:\"move\"},e))},\"interactions:down\":function(t,e){!function(t,e){for(var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.pointerIndex,s=n.pointers[a].hold,l=S.getPath(i),u={interaction:n,pointer:r,event:o,eventTarget:i,type:\"hold\",targets:[],path:l,node:null},c=0;c<l.length;c++){var f=l[c];u.node=f,e.fire(\"pointerEvents:collect-targets\",u)}if(!u.targets.length)return;for(var d=1/0,p=0;p<u.targets.length;p++){var v=u.targets[p].eventable.options.holdDuration;v<d&&(d=v)}s.duration=d,s.timeout=setTimeout((function(){Ao({interaction:n,eventTarget:i,pointer:r,event:o,type:\"hold\"},e)}),d)}(t,e),Ao(t,e)},\"interactions:up\":function(t,e){Co(t),Ao(t,e),function(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget;n.pointerWasMoved||Ao({interaction:n,eventTarget:i,pointer:r,event:o,type:\"tap\"},e)}(t,e)},\"interactions:cancel\":function(t,e){Co(t),Ao(t,e)}},PointerEvent:_o.PointerEvent,fire:Ao,collectEventTargets:zo,defaults:{holdDuration:600,ignoreFrom:null,allowFrom:null,origin:{x:0,y:0}},types:{down:!0,move:!0,up:!0,cancel:!0,tap:!0,doubletap:!0,hold:!0}};function Ao(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.type,s=t.targets,l=void 0===s?zo(t,e):s,u=new _o.PointerEvent(a,r,o,i,n,e.now());e.fire(\"pointerEvents:new\",{pointerEvent:u});for(var c={interaction:n,pointer:r,event:o,eventTarget:i,targets:l,type:a,pointerEvent:u},f=0;f<l.length;f++){var d=l[f];for(var p in d.props||{})u[p]=d.props[p];var v=(0,z.default)(d.eventable,d.node);if(u._subtractOrigin(v),u.eventable=d.eventable,u.currentTarget=d.node,d.eventable.fire(u),u._addOrigin(v),u.immediatePropagationStopped||u.propagationStopped&&f+1<l.length&&l[f+1].node!==u.currentTarget)break}if(e.fire(\"pointerEvents:fired\",c),\"tap\"===a){var h=u.double?Ao({interaction:n,pointer:r,event:o,eventTarget:i,type:\"doubletap\"},e):u;n.prevTap=h,n.tapTime=h.timeStamp}return u}function zo(t,e){var n=t.interaction,r=t.pointer,o=t.event,i=t.eventTarget,a=t.type,s=n.getPointerIndex(r),l=n.pointers[s];if(\"tap\"===a&&(n.pointerWasMoved||!l||l.downTarget!==i))return[];for(var u=S.getPath(i),c={interaction:n,pointer:r,event:o,eventTarget:i,type:a,path:u,targets:[],node:null},f=0;f<u.length;f++){var d=u[f];c.node=d,e.fire(\"pointerEvents:collect-targets\",c)}return\"hold\"===a&&(c.targets=c.targets.filter((function(t){return t.eventable.options.holdDuration===n.pointers[s].hold.duration}))),c.targets}function Co(t){var e=t.interaction,n=t.pointerIndex;e.pointers[n].hold&&clearTimeout(e.pointers[n].hold.timeout)}var Ro=Do;Io.default=Ro;var Fo={};function Xo(t){var e=t.interaction;e.holdIntervalHandle&&(clearInterval(e.holdIntervalHandle),e.holdIntervalHandle=null)}Object.defineProperty(Fo,\"__esModule\",{value:!0}),Fo.default=void 0;var Yo={id:\"pointer-events/holdRepeat\",install:function(t){t.usePlugin(Io.default);var e=t.pointerEvents;e.defaults.holdRepeatInterval=0,e.types.holdrepeat=t.actions.phaselessTypes.holdrepeat=!0},listeners:[\"move\",\"up\",\"cancel\",\"endall\"].reduce((function(t,e){return t[\"pointerEvents:\".concat(e)]=Xo,t}),{\"pointerEvents:new\":function(t){var e=t.pointerEvent;\"hold\"===e.type&&(e.count=(e.count||0)+1)},\"pointerEvents:fired\":function(t,e){var n=t.interaction,r=t.pointerEvent,o=t.eventTarget,i=t.targets;if(\"hold\"===r.type&&i.length){var a=i[0].eventable.options.holdRepeatInterval;a<=0||(n.holdIntervalHandle=setTimeout((function(){e.pointerEvents.fire({interaction:n,eventTarget:o,type:\"hold\",pointer:r,event:r},e)}),a))}}})};Fo.default=Yo;var Wo={};function Lo(t){return(0,k.default)(this.events.options,t),this}Object.defineProperty(Wo,\"__esModule\",{value:!0}),Wo.default=void 0;var Bo={id:\"pointer-events/interactableTargets\",install:function(t){var e=t.Interactable;e.prototype.pointerEvents=Lo;var n=e.prototype._backCompatOption;e.prototype._backCompatOption=function(t,e){var r=n.call(this,t,e);return r===this&&(this.events.options[t]=e),r}},listeners:{\"pointerEvents:collect-targets\":function(t,e){var n=t.targets,r=t.node,o=t.type,i=t.eventTarget;e.interactables.forEachMatch(r,(function(t){var e=t.events,a=e.options;e.types[o]&&e.types[o].length&&t.testIgnoreAllow(a,r,i)&&n.push({node:r,eventable:e,props:{interactable:t}})}))},\"interactable:new\":function(t){var e=t.interactable;e.events.getRect=function(t){return e.getRect(t)}},\"interactable:set\":function(t,e){var n=t.interactable,r=t.options;(0,k.default)(n.events.options,e.pointerEvents.defaults),(0,k.default)(n.events.options,r.pointerEvents||{})}}};Wo.default=Bo;var Uo={};Object.defineProperty(Uo,\"__esModule\",{value:!0}),Object.defineProperty(Uo,\"holdRepeat\",{enumerable:!0,get:function(){return Fo.default}}),Object.defineProperty(Uo,\"interactableTargets\",{enumerable:!0,get:function(){return Wo.default}}),Uo.pointerEvents=Uo.default=void 0,Uo.pointerEvents=Io;var Vo={id:\"pointer-events\",install:function(t){t.usePlugin(Io),t.usePlugin(Fo.default),t.usePlugin(Wo.default)}};Uo.default=Vo;var qo={};Object.defineProperty(qo,\"__esModule\",{value:!0}),qo.default=void 0;qo.default={};var No={};function Go(t){var e=t.Interactable;t.actions.phases.reflow=!0,e.prototype.reflow=function(e){return function(t,e,n){for(var r=a.default.string(t.target)?J.from(t._context.querySelectorAll(t.target)):[t.target],o=n.window.Promise,i=o?[]:null,s=function(){var a=r[l],s=t.getRect(a);if(!s)return\"break\";var u=J.find(n.interactions.list,(function(n){return n.interacting()&&n.interactable===t&&n.element===a&&n.prepared.name===e.name})),c=void 0;if(u)u.move(),i&&(c=u._reflowPromise||new o((function(t){u._reflowResolve=t})));else{var f=(0,I.tlbrToXywh)(s),d={page:{x:f.x,y:f.y},client:{x:f.x,y:f.y},timeStamp:n.now()},p=L.coordsToEvent(d);c=function(t,e,n,r,o){var i=t.interactions.new({pointerType:\"reflow\"}),a={interaction:i,event:o,pointer:o,eventTarget:n,phase:\"reflow\"};i.interactable=e,i.element=n,i.prepared=(0,k.default)({},r),i.prevEvent=o,i.updatePointer(o,o,n,!0),i._doPhase(a);var s=t.window.Promise,l=s?new s((function(t){i._reflowResolve=t})):null;i._reflowPromise=l,i.start(r,e,n),i._interacting?(i.move(a),i.end(o)):i.stop();return i.removePointer(o,o),i.pointerIsDown=!1,l}(n,t,a,e,p)}i&&i.push(c)},l=0;l<r.length;l++){if(\"break\"===s())break}return i&&o.all(i).then((function(){return t}))}(this,e,t)}}Object.defineProperty(No,\"__esModule\",{value:!0}),No.install=Go,No.default=void 0;var $o={id:\"reflow\",install:Go,listeners:{\"interactions:stop\":function(t,e){var n=t.interaction;\"reflow\"===n.pointerType&&(n._reflowResolve&&n._reflowResolve(),J.remove(e.interactions.list,n))}}};No.default=$o;var Ho={};Object.defineProperty(Ho,\"__esModule\",{value:!0}),Ho.default=void 0;Ho.default={};var Ko={};Object.defineProperty(Ko,\"__esModule\",{value:!0}),Ko.exchange=void 0;Ko.exchange={};var Zo={};Object.defineProperty(Zo,\"__esModule\",{value:!0}),Zo.default=void 0;Zo.default={};var Jo={exports:{}};function Qo(t){return(Qo=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(Jo.exports,\"__esModule\",{value:!0}),Jo.exports.default=void 0,dr.default.use(wo.default),dr.default.use(ue.default),dr.default.use(tn.default),dr.default.use(le.default),dr.default.use(jt.default),dr.default.use(Uo.default),dr.default.use(ln.default),dr.default.use(bo.default),dr.default.use(ae.default),dr.default.use(Tt.default),dr.default.use(Ct.default),dr.default.use(No.default),dr.default.use(Se.default),dr.default.use(Zo.default),dr.default.use(qo.default),dr.default.__utils={exchange:Ko.exchange,displace:Ho,pointer:L},dr.default.use(he.default);var ti=dr.default;if(Jo.exports.default=ti,\"object\"===Qo(Jo)&&Jo)try{Jo.exports=dr.default}catch(t){}dr.default.default=dr.default,Jo=Jo.exports;var ei={exports:{}};function ni(t){return(ni=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}Object.defineProperty(ei.exports,\"__esModule\",{value:!0}),ei.exports.default=void 0;var ri=Jo.default;if(ei.exports.default=ri,\"object\"===ni(ei)&&ei)try{ei.exports=Jo.default}catch(t){}return Jo.default.default=Jo.default,ei=ei.exports}));\n//# sourceMappingURL=interact.min.js.map\n","var encodeWav = require('./encodeWav');\nvar encodeMp3 = require('./encodeMp3');\n\nvar VALID_MP3_BITRATES = [32, 40, 48, 56, 64, 96, 128, 192, 256, 320];\n\nmodule.exports = function encode (audioBuffer, encoding, onProgress, onComplete) {\n\tif (!encoding || encoding === 'WAV') {\n\t\treturn encodeWav(audioBuffer, onComplete);\n\t}\n\n\tencoding = ~~encoding;\n\tif (VALID_MP3_BITRATES.indexOf(encoding) === -1) {\n\t\tthrow new Error('Invalid encoding');\n\t}\n\n\treturn encodeMp3(audioBuffer, { bitrate: encoding }, onProgress, onComplete);\n};\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\nvar common = require('./common.js');\nvar assert = common.assert;\n\nfunction Reservoir() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t}\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert (0 == gfc.ResvMax % 8);\n\t\tassert (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t}\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t}\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t}\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert (0 == over_bits % 8);\n\t\t\tassert (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t}\n}\n\nmodule.exports = Reservoir;\n","function HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables = {};\n\n\nTables.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l),\n    new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l),\n    new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l),\n    new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l),\n    new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l),\n    new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l),\n    new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l),\n    new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l),\n    new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l),\n    new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l),\n    new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l),\n    new HuffCodeTab(0, 0, null, Tables.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l),\n\n    new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l),\n\n    new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l),\n\n    new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l),\n    new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables.scfsi_band = [0, 6, 11, 16, 21];\n\nmodule.exports = Tables;\n","'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n","//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    }\n}\n\nMPEGMode.STEREO = new MPEGMode(0);\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\nMPEGMode.MONO = new MPEGMode(3);\nMPEGMode.NOT_SET = new MPEGMode(4);\n\nmodule.exports = MPEGMode;\n","var lamejs = require('lamejs');\n\nvar MAX_AMPLITUDE = 0x7FFF;\n\nfunction encodeMp3(audioBuffer, params, onProgress, cb) {\n\tif (audioBuffer.sampleRate !== 44100) {\n\t\t// TODO: generalize encoder for different sample rates\n\t\tthrow new Error('Expecting 44100 Hz sample rate');\n\t}\n\n\tvar nChannels = audioBuffer.numberOfChannels;\n\n\tif (nChannels !== 1 && nChannels !== 2) {\n\t\tthrow new Error('Expecting mono or stereo audioBuffer');\n\t}\n\n\tvar bitrate = params.bitrate || 128;\n\tif (bitrate < 96) {\n\t\t// lame fails to encode stereo audio if bitrate is lower than 96.\n\t\t// in which case, we force sound to be mono (use only channel 0)\n\t\tnChannels = 1;\n\t}\n\n\tvar bufferLength = audioBuffer.length;\n\n\t// convert audioBuffer to sample buffers\n\tvar buffers = [];\n\n\tfor (var channel = 0; channel < nChannels; channel++) {\n\t\tvar buffer = audioBuffer.getChannelData(channel);\n\t\tvar samples = new Int16Array(bufferLength);\n\n\t\tfor (var i = 0; i < bufferLength; ++i) {\n\t\t\tvar sample = buffer[i];\n\n\t\t\t// clamp and convert to 16bit number\n\t\t\tsample = Math.min(1, Math.max(-1, sample));\n\t\t\tsample = Math.round(sample * MAX_AMPLITUDE);\n\n\t\t\tsamples[i] = sample;\n\t\t}\n\n\t\tbuffers.push(samples);\n\t}\n\n\n\t// can be anything but make it a multiple of 576 to make encoders life easier\n\tBLOCK_SIZE = 1152;\n\tmp3encoder = new lamejs.Mp3Encoder(nChannels, 44100, bitrate);\n\tvar mp3Data = [];\n\n\tvar blockIndex = 0;\n\n\tfunction encodeChunk() {\n\t\tvar mp3buf;\n\t\tif (nChannels === 1) {\n\t\t\tvar chunk = buffers[0].subarray(blockIndex, blockIndex + BLOCK_SIZE);\n\t\t\tmp3buf = mp3encoder.encodeBuffer(chunk);\n\t\t} else {\n\t\t\tchunkL = buffers[0].subarray(blockIndex, blockIndex + BLOCK_SIZE);\n\t\t\tchunkR = buffers[1].subarray(blockIndex, blockIndex + BLOCK_SIZE);\n\t\t\tvar mp3buf = mp3encoder.encodeBuffer(chunkL, chunkR);\n\t\t}\n\n\t\tif (mp3buf.length > 0) {\n\t\t\tmp3Data.push(mp3buf);\n\t\t}\n\n\t\tblockIndex += BLOCK_SIZE;\n\t}\n\n\tfunction update() {\n\t\tif (blockIndex >= bufferLength) {\n\t\t\t// finish writing mp3\n\t\t\tvar mp3buf = mp3encoder.flush();\n\n\t\t\tif (mp3buf.length > 0) {\n\t\t\t\tmp3Data.push(mp3buf);\n\t\t\t}\n\n\t\t\treturn cb(new Blob(mp3Data, { type: 'audio/mp3' }));\n\t\t}\n\n\t\tvar start = performance.now();\n\n\t\twhile (blockIndex < bufferLength && performance.now() - start < 15) {\n\t\t\tencodeChunk();\n\t\t}\n\n\t\tonProgress && onProgress(blockIndex / bufferLength);\n\t\tsetTimeout(update, 16.7);\n\t}\n\n\tupdate();\n}\n\nmodule.exports = encodeMp3;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Takehiro = require('./Takehiro.js');\nvar Tables = require('./Tables.js');\nvar Encoder = require('./Encoder.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nBitStream.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream.NEQ = function (a, b) {\n    return !BitStream.EQ(a, b);\n};\n\nfunction BitStream() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables.ht[tableindex];\n        var bits = 0;\n\n        assert(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert(cbits <= MAX_LENGTH);\n            assert(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert(data_bits == gi.part2_3_length);\n                assert(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System.err.println(\" 9%%  Your system is overclocked\");\n            System.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nmodule.exports = BitStream;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GainAnalysis = require('./GainAnalysis.js');\n\nfunction ReplayGain() {\n    this.linprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n    this.B = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n\n}\n\nmodule.exports = ReplayGain;\n","//package mp3;\n\nfunction CalcNoiseResult() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nmodule.exports = CalcNoiseResult;\n","var HEADER_LENGTH = 44;\nvar MAX_AMPLITUDE = 0x7FFF;\n\nfunction encodeWav(audioBuffer, cb) {\n\tif (audioBuffer.sampleRate !== 44100) {\n\t\t// TODO: generalize encoder for different sample rates\n\t\tthrow new Error('Expecting 44100 Hz sample rate');\n\t}\n\n\tvar nChannels = audioBuffer.numberOfChannels;\n\n\tif (nChannels !== 1 && nChannels !== 2) {\n\t\tthrow new Error('Expecting mono or stereo audioBuffer');\n\t}\n\n\tvar bufferLength = audioBuffer.length;\n\n\t// Creating the array buffers (2 bytes per samples * 1 channel)\n\tvar arrayBuffer = new ArrayBuffer(HEADER_LENGTH + 2 * bufferLength * nChannels);\n\n\t// Creatiing views on the array buffer\n\tvar int16 = new Int16Array(arrayBuffer);\n\tvar uint8 = new Uint8Array(arrayBuffer);\n\n\n\t// WAV header\n\t// http://soundfile.sapp.org/doc/WaveFormat/\n\t// 52 49 46 46     R I F F\n\t// 24 08 00 00     chunk size\n\t// 57 41 56 45     W A V E\n\n\t// 66 6d 74 20     F T M █\n\t// 10 00 00 00     subchunk size\n\t// 01 00           audio format\n\t// 02 00           number of channels\n\t// 22 56 00 00     sample rate\n\t// 88 58 01 00     byte rate\n\t// 04 00           block align\n\t// 10 00           bit per sample\n\t// 64 61 74 61     d a t a\n\t// 00 08 00 00     subchunk2 size\n\n\tvar l2 = bufferLength * nChannels * 2; // subchunk2 = numSamples * numChannels * BitsPerSample / 8\n\tvar l1 = l2 + 36; // chunkSize = subchunk + 36\n\tvar br = 44100 * nChannels / 4 // byte rate = SampleRate * NumChannels * BitsPerSample / 8\n\n\tuint8.set([\n\t\t// \"RIFF\" chunk descriptor\n\t\t0x52, 0x49, 0x46, 0x46, // R I F F\n\t\tl1 & 255, (l1 >> 8) & 255, (l1 >> 16) & 255, (l1 >> 24) & 255, // chunk size\n\t\t0x57, 0x41, 0x56, 0x45, // W A V E\n\n\t\t// \"ftm\" sub-chunk\n\t\t0x66, 0x6D, 0x74, 0x20, // F T M █\n\t\t0x10, 0x00, 0x00, 0x00, // sub chunk size = 16\n\t\t0x01, 0x00, // audio format = 1 (PCM, linear quantization)\n\t\tnChannels, 0x00, // number of channels\n\t\t0x44, 0xAC, 0x00, 0x00, // sample rate = 44100\n\t\tbr & 255, (br >> 8) & 255, (br >> 16) & 255, (br >> 24) & 255, // byte rate\n\t\t0x04, 0x00, // block align = 4\n\t\t0x10, 0x00, // bit per sample = 16\n\n\t\t// data sub-chuk\n\t\t0x64, 0x61, 0x74, 0x61, // d a t a\n\t\tl2 & 255, (l2 >> 8) & 255, (l2 >> 16) & 255, (l2 >> 24) & 255 // sub chunk 2 size\n\t]);\n\n\t// Append sample data\n\tvar buffers = [];\n\n\tfor (var channel = 0; channel < nChannels; channel++) {\n\t\tbuffers.push(audioBuffer.getChannelData(channel));\n\t}\n\n\tfor (var i = 0, index = HEADER_LENGTH / 2; i < bufferLength; i++) {\n\t\tfor (var channel = 0; channel < nChannels; channel++) {\n\t\t\tvar sample = buffers[channel][i];\n\n\t\t\t// clamp and convert to 16bit number\n\t\t\tsample = Math.min(1, Math.max(-1, sample));\n\t\t\tsample = Math.round(sample * MAX_AMPLITUDE);\n\n\t\t\tint16[index++] = sample;\n\t\t}\n\t}\n\n\tvar blob = new Blob([uint8], { type: 'audio/x-wav' })\n\n\tsetTimeout(function () {\n\t\treturn cb(blob);\n\t}, 30);\n}\n\nmodule.exports = encodeWav;\n","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar $parseFloat = global.parseFloat;\nvar FORCED = 1 / $parseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(String(string));\n  var result = $parseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\nfunction FFT() {\n\n    var window = new_float(Encoder.BLKSIZE);\n    var window_s = new_float(Encoder.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util.SQRT2 * fz[gi + k3]);\n                f2 = (Util.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    }\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder.BLKSIZE / 8 - 1;\n        var x = Encoder.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    }\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE));\n\n        for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder.BLKSIZE_s)));\n\n    }\n\n}\n\nmodule.exports = FFT;\n","function Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    }\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    }\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    }\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    }\n\n}\n\nmodule.exports = Version;\n","var MPEGMode = require('./MPEGMode.js');\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nmodule.exports = LameGlobalFlags;\n","var Encoder = require('./Encoder.js');\n\nvar L3Side = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\n\nmodule.exports = L3Side;\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has');\nvar bind = require('../internals/function-bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $fetch = getBuiltIn('fetch');\nvar Headers = getBuiltIn('Headers');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = it.replace(plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = result.replace(percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replace = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replace[match];\n};\n\nvar serialize = function (it) {\n  return encodeURIComponent(it).replace(find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = query.split('&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = attribute.split('=');\n        result.push({\n          key: deserialize(entry.shift()),\n          value: deserialize(entry.join('='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (typeof iteratorMethod === 'function') {\n        iterator = iteratorMethod.call(init);\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = entryNext.call(entryIterator)).done ||\n            (second = entryNext.call(entryIterator)).done ||\n            !entryNext.call(entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          entries.push({ key: first.value + '', value: second.value + '' });\n        }\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\n    } else {\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.appent` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    state.entries.push({ key: name + '', value: value + '' });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) entries.splice(index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) result.push(entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = name + '';\n    var val = value + '';\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) entries.splice(index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) entries.push({ key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    // Array#sort is not stable in some engines\n    var slice = entries.slice();\n    var entry, entriesIndex, sliceIndex;\n    entries.length = 0;\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n      entry = slice[sliceIndex];\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n        if (entries[entriesIndex].key > entry.key) {\n          entries.splice(entriesIndex, 0, entry);\n          break;\n        }\n      }\n      if (entriesIndex === sliceIndex) entries.push(entry);\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n  } return result.join('&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n// https://github.com/zloirock/core-js/issues/674\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n  $({ global: true, enumerable: true, forced: true }, {\n    fetch: function fetch(input /* , init */) {\n      var args = [input];\n      var init, body, headers;\n      if (arguments.length > 1) {\n        init = arguments[1];\n        if (isObject(init)) {\n          body = init.body;\n          if (classof(body) === URL_SEARCH_PARAMS) {\n            headers = init.headers ? new Headers(init.headers) : new Headers();\n            if (!headers.has('content-type')) {\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            init = create(init, {\n              body: createPropertyDescriptor(0, String(body)),\n              headers: createPropertyDescriptor(0, headers)\n            });\n          }\n        }\n        args.push(init);\n      } return $fetch.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=style&index=0&id=5f8211e8&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=style&index=0&id=5f8211e8&lang=scss&scoped=true&\"","var Encoder = require('./Encoder.js');\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction III_psy_xmin() {\n    this.l = new_float(Encoder.SBMAX_l);\n    this.s = new_float_n([Encoder.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\n        for (var i = 0; i < Encoder.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    }\n}\n\nmodule.exports = III_psy_xmin;\n","function VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    }\n    //TODO\n\n}\n\nmodule.exports = VBRQuantize;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float(Encoder.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float(Encoder.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float(Encoder.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float(Encoder.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float(Encoder.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float(Encoder.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float(Encoder.BLKSIZE / 2);\n}\n\nmodule.exports = ATH;\n","var $ = require('../internals/export');\nvar parseFloatImplementation = require('../internals/number-parse-float');\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\n$({ global: true, forced: parseFloat != parseFloatImplementation }, {\n  parseFloat: parseFloatImplementation\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","/*\n *      quantize_pvt source file\n *\n *      Copyright (c) 1999-2002 Takehiro Tominaga\n *      Copyright (c) 2000-2002 Robert Hegemann\n *      Copyright (c) 2001 Naoki Shibata\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\nvar ScaleFac = require('./ScaleFac.js');\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\nvar MeanBits = require('./MeanBits.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nQuantizePVT.Q_MAX = (256 + 1);\nQuantizePVT.Q_MAX2 = 116;\nQuantizePVT.LARGE_BITS = 100000;\nQuantizePVT.IXMAX_VAL = 8206;\n\nfunction QuantizePVT() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert(0 <= (x + QuantizePVT.Q_MAX2) && x < QuantizePVT.Q_MAX);\n        return pow20[x + QuantizePVT.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert(0 <= x && x < QuantizePVT.Q_MAX);\n        return ipow20[x];\n    }\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float(Q_MAX);\n    var pow43 = new_float(PRECALC_SIZE);\n\n    var adj43 = new_float(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    }\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert(sum <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    }\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert(max_bits <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert(targ_bits[0] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    }\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    }\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float(L3Side.SFBMAX);\n        var xfsf = new_float(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    }\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    function set_frame_pinfo(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n\n        gfc.masking_lower = 1.0;\n\n        /*\n         * for every granule and channel patch l3_enc and set info\n         */\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n                var scalefac_sav = new_int(L3Side.SFBMAX);\n                System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0,\n                    scalefac_sav.length);\n\n                /*\n                 * reconstruct the scalefactors in case SCFSI was used\n                 */\n                if (gr == 1) {\n                    var sfb;\n                    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n                        if (cod_info.scalefac[sfb] < 0) /* scfsi */\n                            cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\n                    }\n                }\n\n                set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\n                System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0,\n                    scalefac_sav.length);\n            }\n            /* for ch */\n        }\n        /* for gr */\n    }\n\n}\n\nmodule.exports = QuantizePVT;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar IIISideInfo = require('./IIISideInfo.js');\nvar ScaleFac = require('./ScaleFac.js');\nvar NsPsy = require('./NsPsy.js');\nvar VBRSeekInfo = require('./VBRSeekInfo.js');\nvar III_psy_xmin = require('./III_psy_xmin.js');\nvar Encoder = require('./Encoder.js');\nvar L3Side = require('./L3Side.js');\n\n\nLameInternalFlags.MFSIZE = (3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY);\nLameInternalFlags.MAX_HEADER_BUF = 256;\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags.BPC = 320;\n\nfunction LameInternalFlags() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo();\n    this.ms_ratio = new_float(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int(L3Side.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\n    this.amp_filter = new_float(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float(Encoder.CBANDS);\n    this.minval_s = new_float(Encoder.CBANDS);\n    this.nb_1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_2 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float(Encoder.SBMAX_l);\n    this.mld_s = new_float(Encoder.SBMAX_s);\n    this.bm_l = new_int(Encoder.SBMAX_l);\n    this.bo_l = new_int(Encoder.SBMAX_l);\n    this.bm_s = new_int(Encoder.SBMAX_s);\n    this.bo_s = new_int(Encoder.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n([Encoder.CBANDS, 2]);\n    this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\n\n    this.numlines_s = new_int(Encoder.CBANDS);\n    this.numlines_l = new_int(Encoder.CBANDS);\n    this.rnumlines_l = new_float(Encoder.CBANDS);\n    this.mld_cb_l = new_float(Encoder.CBANDS);\n    this.mld_cb_s = new_float(Encoder.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nmodule.exports = LameInternalFlags;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n([4, 9]);\n    this.lastAttacks = new_int(4);\n    this.pefirbuf = new_float(19);\n    this.longfact = new_float(Encoder.SBMAX_l);\n    this.shortfact = new_float(Encoder.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nmodule.exports = NsPsy;\n","/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\nvar Tables = require('./Tables.js');\nvar GrInfo = require('./GrInfo.js');\nvar QuantizePVT = require('./QuantizePVT.js');\n\n\nfunction Takehiro() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    }\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables.table23;\n        else\n            hlen = Tables.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen1 = Tables.ht[t1].hlen;\n        var hlen2 = Tables.ht[t1 + 1].hlen;\n        var hlen3 = Tables.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT.IXMAX_VAL) {\n                    s.bits = QuantizePVT.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder.NORM_TYPE) {\n            assert(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert(a1 + a2 + 2 < Encoder.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert(a1 >= 0);\n        assert(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    }\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    }\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int(7 + 15 + 1);\n        var r01_div = new_int(7 + 15 + 1);\n        var r0_tbl = new_int(7 + 15 + 1);\n        var r1_tbl = new_int(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    }\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro.slen1_tab = slen1_tab;\n    Takehiro.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\n            for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables.scfsi_band[i + 1]) {\n                for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    }\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT.LARGE_BITS;\n    }\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    }\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    }\n}\n\nmodule.exports = Takehiro;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nLame = require('./Lame.js');\nPresets = require('./Presets.js');\nGainAnalysis = require('./GainAnalysis.js');\nQuantizePVT = require('./QuantizePVT.js');\nQuantize = require('./Quantize.js');\nTakehiro = require('./Takehiro.js');\nReservoir = require('./Reservoir.js');\nMPEGMode = require('./MPEGMode.js');\nBitStream = require('./BitStream.js');\nvar Encoder = require('./Encoder.js');\nvar Version = require('./Version.js');\nvar VBRTag = require('./VBRTag.js');\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    }\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    }\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    }\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag();\n    var ver = new Version();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nmodule.exports.Mp3Encoder = Mp3Encoder;\nmodule.exports.WavHeader = WavHeader;\n","/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar VBRQuantize = require('./VBRQuantize.js');\nvar CalcNoiseResult = require('./CalcNoiseResult.js');\nvar CalcNoiseData = require('./CalcNoiseData.js');\nvar Encoder = require('./Encoder.js');\nvar GrInfo = require('./GrInfo.js');\nvar L3Side = require('./L3Side.js');\n\nfunction Quantize() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    }\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert(0 <= upper && upper <= 575);\n\n        Arrays.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    }\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder.SBPSY_l;\n        cod_info.sfb_smin = Encoder.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            var ixwork = new_float(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert(cod_info.global_gain >= 0);\n        assert(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float(L3Side.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo();\n        var save_xrpow = new_float(576);\n        var distort = new_float(L3Side.SFBMAX);\n        var best_noise_info = new CalcNoiseResult();\n        var better;\n        var prev_noise = new CalcNoiseData();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n        /* restore for reuse on next try */\n            System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    }\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo();\n        var bst_xrpow = new_float(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert(this_bits >= min_bits);\n            assert(this_bits <= max_bits);\n            assert(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert(cod_info.part2_3_length <= Max_bits);\n    }\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder.SBMAX_l / Encoder.SBMAX_l;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    }\n\n}\n\nmodule.exports = Quantize;\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar new_short_n = common.new_short_n;\nvar assert = common.assert;\n\nvar PsyModel = require('./PsyModel.js');\nvar LameGlobalFlags = require('./LameGlobalFlags.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\nvar ATH = require('./ATH.js');\nvar ReplayGain = require('./ReplayGain.js');\nvar CBRNewIterationLoop = require('./CBRNewIterationLoop.js');\nvar BitStream = require('./BitStream.js');\nvar Tables = require('./Tables.js');\nvar Encoder = require('./Encoder.js');\n\nfunction Lame() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame.V9 = 410;\n    Lame.V8 = 420;\n    Lame.V7 = 430;\n    Lame.V6 = 440;\n    Lame.V5 = 450;\n    Lame.V4 = 460;\n    Lame.V3 = 470;\n    Lame.V2 = 480;\n    Lame.V1 = 490;\n    Lame.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame.R3MIX = 1000;\n    Lame.STANDARD = 1001;\n    Lame.EXTREME = 1002;\n    Lame.INSANE = 1003;\n    Lame.STANDARD_FAST = 1004;\n    Lame.EXTREME_FAST = 1005;\n    Lame.MEDIUM = 1006;\n    Lame.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    }\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float(Encoder.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float(Encoder.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    }\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    }\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Tables.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode.vbr_mt:\n            case VbrMode.vbr_rh:\n            case VbrMode.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert(gfp.VBR_q <= 9);\n        assert(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode.vbr_mt:\n                gfp.VBR = VbrMode.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\n\n        assert(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert(gfp.scale >= 0);\n        return 0;\n    }\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float(nsamples);\n            gfc.in_buffer_1 = new_float(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    }\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert(LameInternalFlags.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream.NEQ(gfp.scale_left, 0)\n            && BitStream.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream.NEQ(gfp.scale_right, 0)\n            && BitStream.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert(gfc.mf_size <= LameInternalFlags.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags.BPC)\n            bpc = LameInternalFlags.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert(j2 < len);\n                assert(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nmodule.exports = Lame;\n","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    }\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    }\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    }\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    }\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock.short_block_forced\n            || gfp.short_blocks == ShortBlock.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    }\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    }\n\n}\n\nmodule.exports = VBRTag;\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","function MeanBits(meanBits) {\n    this.bits = meanBits;\n}\n\nmodule.exports = MeanBits;\n","//package mp3;\n\nvar III_psy_xmin = require('./III_psy_xmin.js');\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin();\n\tthis.en = new III_psy_xmin();\n}\n\nmodule.exports = III_psy_ratio;\n","//package mp3;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar L3Side = require('./L3Side.js');\n\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int(L3Side.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int(3);\n    this.subblock_gain = new_int(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int(L3Side.SFBMAX);\n    this.window = new_int(L3Side.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    }\n}\n\nmodule.exports = GrInfo;\n","/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\n\tvar cx = win[Encoder.SHORT_TYPE];\n\tvar ca = win[Encoder.SHORT_TYPE];\n\tvar cs = win[Encoder.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = NewMDCT;\n","//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int(1 + Encoder.SBMAX_l);\n    this.s = new_int(1 + Encoder.SBMAX_s);\n    this.psfb21 = new_int(1 + Encoder.PSFB21);\n    this.psfb12 = new_int(1 + Encoder.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nmodule.exports = ScaleFac;\n"],"sourceRoot":""}